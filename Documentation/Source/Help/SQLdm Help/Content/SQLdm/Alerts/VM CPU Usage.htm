<?xml version="1.0" encoding="utf-8"?>
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" xml:lang="en-us" MadCap:lastBlockDepth="6" MadCap:lastHeight="509" MadCap:lastWidth="543">
    <head><title>VM CPU Usage (Percent) alert in Idera SQLdm</title>
        <link href="Resources/Stylesheets/Idera Stylesheet.css" rel="stylesheet" type="text/css" />
    </head>
    <body>
        <h1 class="Heading1">VM CPU Usage (Percent) alert</h1>
        <p class="Body">
            <MadCap:keyword term="virtualization;VM;VMware;virtual machine;ESX;virtual;host" />The VM&#160;CPU&#160;Usage (Percent) alert provides the percentage of available virtual CPU&#160;time used by the virtual machine hosting the monitored SQL&#160;Server. This may differ from the processor utilization percentage reported by the guest OS. The percentage of processor usage is listed under the control. A high percentage could indicate a large number of active client sessions.  This alert is disabled by default and is available only on instances hosted on virtual machines that are enabled for VM&#160;monitoring.</p>
        <h2 class="Heading2">Reduce the percentage of available virtual CPU&#160;time used by your VM</h2>
        <p class="Body">Consistently high SQL Server processor usage could indicate the need to:</p>
        <ul style="list-style-type: circle;">
            <li class="Bullet">Reduce the number of SQL re-compilations as they are CPU intensive. There are many reasons that an object such as a stored procedure is recompiled and you can remove most of these reasons by careful coding.
</li>
            <li class="Bullet">Make sure that all T-SQL statements (whether in a stored procedure, trigger or ad hoc statement) that reference objects fully qualify the object referenced. &#160;</li>
        </ul>
        <p class="DefinitionListBody">For example: <code>SELECT * FROM Northwind.dbo Employees</code> is a fully-qualified object reference whereas <code>SELECT * FROM Employees</code> is a poorly-qualified object. You can reuse the execution plans of fully-qualified objects "as is," whereas plans where you either cannot reuse the not fully-qualified objects or, if they are reused, then they are subject to a highly restrictive <code>COMPILE </code>lock while SQL Server determines if all of the objects referenced in the T-SQL code have the same owners as the execution plan currently in cache. Both of these situations consume a significant amount of CPU time.</p>
    </body>
</html>