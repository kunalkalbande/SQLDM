<UserControl
             x:Class="Idera.SQLdm.DesktopClient.Views.Servers.Server.ServerViewContainer" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:ribbon="clr-namespace:Infragistics.Windows.Ribbon;assembly=InfragisticsWPF4.Ribbon.v11.1" 
             xmlns:root="clr-namespace:Idera.SQLdm.DesktopClient" 
             xmlns:server="clr-namespace:Idera.SQLdm.DesktopClient.Views.Servers.Server"
             xmlns:b="clr-namespace:Idera.SQLdm.DesktopClient.Controls"
             xmlns:c="clr-namespace:Idera.SQLdm.DesktopClient.Converters"
             xmlns:p="clr-namespace:Idera.SQLdm.DesktopClient.Controls.Presentation"
             xmlns:s="clr-namespace:System;assembly=mscorlib"
             x:ClassModifier="internal"
             mc:Ignorable="d" 
             d:DesignHeight="427" d:DesignWidth="2000" 
             d:DataContext="{d:DesignInstance Type=server:ServerViewViewModel}" Loaded="OnServerViewContainerLoaded" xmlns:igEditors="http://infragistics.com/Editors">
    <UserControl.Resources>
        <c:StyleConverter x:Key="StyleConverterBold"/>
        <c:BoolToVisibilityConverter x:Key="VisibilityConverter"/>
        <c:BoolToImageConverter x:Key="RadioButtonConverter" FalseValue="/SQLdmDesktopClient;component/Resources/RibbonRadioButtonUnchecked.png" TrueValue="/SQLdmDesktopClient;component/Resources/RibbonRadioButtonChecked.png" />
        <c:ImageSelectorConverter x:Key="OverviewStatusImageConverter" DefaultValueKey="ServerInformation">
            <c:ImageSelectorConverter.Values>
                <BitmapImage x:Key="ServerOK" UriSource="/SQLdmDesktopClient;component/Resources/ServerOK.png"/>
                <BitmapImage x:Key="ServerWarning" UriSource="/SQLdmDesktopClient;component/Resources/ServerWarning.png"/>
                <BitmapImage x:Key="ServerCritical" UriSource="/SQLdmDesktopClient;component/Resources/ServerCritical.png"/>
                <BitmapImage x:Key="ServerMaintenanceMode" UriSource="/SQLdmDesktopClient;component/Resources/ServerMaintenanceMode.png"/>
                <BitmapImage x:Key="ServerInformation" UriSource="/SQLdmDesktopClient;component/Resources/ServerInformation.png"/>
            </c:ImageSelectorConverter.Values>
        </c:ImageSelectorConverter>
        <c:ImageSelectorConverter x:Key="SessionsStatusImageConverter" DefaultValueKey="OK">
            <c:ImageSelectorConverter.Values>
                <BitmapImage x:Key="OK" UriSource="/SQLdmDesktopClient;component/Resources/16x16/Sessions.png"/>
                <BitmapImage x:Key="Warning" UriSource="/SQLdmDesktopClient;component/Resources/16x16/SessionsWarning16x16.png"/>
                <BitmapImage x:Key="Critical" UriSource="/SQLdmDesktopClient;component/Resources/16x16/SessionsCritical16x16.png"/>
            </c:ImageSelectorConverter.Values>
        </c:ImageSelectorConverter>
        <c:ImageSelectorConverter x:Key="QueriesStatusImageConverter" DefaultValueKey="OK">
            <c:ImageSelectorConverter.Values>
                <BitmapImage x:Key="OK" UriSource="/SQLdmDesktopClient;component/Resources/16x16/Queries.png"/>
                <BitmapImage x:Key="Warning" UriSource="/SQLdmDesktopClient;component/Resources/16x16/QueriesWarning16x16.png"/>
                <BitmapImage x:Key="Critical" UriSource="/SQLdmDesktopClient;component/Resources/16x16/QueriesCritical16x16.png"/>
            </c:ImageSelectorConverter.Values>
        </c:ImageSelectorConverter>
        <c:ImageSelectorConverter x:Key="ResourcesStatusImageConverter" DefaultValueKey="OK">
            <c:ImageSelectorConverter.Values>
                <BitmapImage x:Key="OK" UriSource="/SQLdmDesktopClient;component/Resources/16x16/Resources.png"/>
                <BitmapImage x:Key="Warning" UriSource="/SQLdmDesktopClient;component/Resources/16x16/ResourcesWarning16x16.png"/>
                <BitmapImage x:Key="Critical" UriSource="/SQLdmDesktopClient;component/Resources/16x16/ResourcesCritical16x16.png"/>
            </c:ImageSelectorConverter.Values>
        </c:ImageSelectorConverter>
        <c:ImageSelectorConverter x:Key="DatabasesStatusImageConverter" DefaultValueKey="OK">
            <c:ImageSelectorConverter.Values>
                <BitmapImage x:Key="OK" UriSource="/SQLdmDesktopClient;component/Resources/16x16/Databases.png"/>
                <BitmapImage x:Key="Warning" UriSource="/SQLdmDesktopClient;component/Resources/16x16/DatabasesWarning16x16.png"/>
                <BitmapImage x:Key="Critical" UriSource="/SQLdmDesktopClient;component/Resources/16x16/DatabasesCritical16x16.png"/>
            </c:ImageSelectorConverter.Values>
        </c:ImageSelectorConverter>
        <c:ImageSelectorConverter x:Key="ServicesStatusImageConverter" DefaultValueKey="OK">
            <c:ImageSelectorConverter.Values>
                <BitmapImage x:Key="OK" UriSource="/SQLdmDesktopClient;component/Resources/16x16/Services.png"/>
                <BitmapImage x:Key="Warning" UriSource="/SQLdmDesktopClient;component/Resources/16x16/ServicesWarning16x16.png"/>
                <BitmapImage x:Key="Critical" UriSource="/SQLdmDesktopClient;component/Resources/16x16/ServicesCritical16x16.png"/>
            </c:ImageSelectorConverter.Values>
        </c:ImageSelectorConverter>
        <c:ImageSelectorConverter x:Key="LogsStatusImageConverter" DefaultValueKey="OK">
            <c:ImageSelectorConverter.Values>
                <BitmapImage x:Key="OK" UriSource="/SQLdmDesktopClient;component/Resources/16x16/Logs.png"/>
                <BitmapImage x:Key="Warning" UriSource="/SQLdmDesktopClient;component/Resources/16x16/LogsWarning16x16.png"/>
                <BitmapImage x:Key="Critical" UriSource="/SQLdmDesktopClient;component/Resources/16x16/LogsCritical16x16.png"/>
            </c:ImageSelectorConverter.Values>
        </c:ImageSelectorConverter>
        <c:ImageSelectorConverter x:Key="AnalysisStatusImageConverter" DefaultValueKey="OK">
            <c:ImageSelectorConverter.Values>
                <BitmapImage x:Key="OK" UriSource="/SQLdmDesktopClient;component/Resources/Analysis/Analyze16.png"/>
                <BitmapImage x:Key="Warning" UriSource="/SQLdmDesktopClient;component/Resources/16x16/SessionsWarning16x16.png"/>
                <BitmapImage x:Key="Critical" UriSource="/SQLdmDesktopClient;component/Resources/16x16/SessionsCritical16x16.png"/>
            </c:ImageSelectorConverter.Values>
        </c:ImageSelectorConverter>

        <DataTemplate x:Key="TabWithImageTemplate">
            <Grid>
                <Image x:Name="tabImage" Source="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type p:ViewTabItem}}, Path=Source}"  HorizontalAlignment="Left" Width="16" Height="16"/>
                <TextBlock HorizontalAlignment="Stretch" Margin="10,0,0,0" VerticalAlignment="Center" Text="{Binding}"/>
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="TabWithoutImageTemplate">
            <Grid>
                <TextBlock HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Center" Text="{Binding}"/>
            </Grid>
        </DataTemplate>
        <Style TargetType="{x:Type ribbon:GalleryItemPresenter}" x:Key="layoutItemStyle">
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style TargetType="Button"  x:Key="buttonItemStyle">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}"  CornerRadius="2.5" BorderBrush="Transparent" BorderThickness="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Button.IsMouseOver" Value="True">
                    <Setter Property="Button.Background" Value="Transparent"/>
                    <Setter Property="Cursor" Value="Hand" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ToggleButton" x:Key="toggleCustomDashboardStyle">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Margin" Value="150,-8,9,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Name="border" BorderThickness="0" Padding="10, 0, 0, 10" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="CDButtonStyle">
            <Setter Property="Height" Value="32"></Setter>
            <Setter Property="Width" Value="174"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource SourceSansPro}"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
            <Setter Property="Background" Value="#00a1dd"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="BorderBrush" Value="#00a1dd"></Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="#00a1dd" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#00a1dd"/>
                    <Setter Property="BorderBrush" Value="#00a1dd"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type ToggleButton}" x:Key="CustomizeDashboardToggleButtonStyle">
            <Setter Property="Height" Value="26"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource SourceSansPro}"></Setter>
            <Setter Property="FontSize" Value="10"></Setter>
            <Setter Property="Background" Value="#006089"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="BorderBrush" Value="#006089"></Setter>
            <Setter Property="Margin" Value="0,0,12,0"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="1" Padding="5,0,5,0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#00a1dd"/>
                    <Setter Property="BorderBrush" Value="#00a1dd"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="{x:Type ToggleButton}" x:Key="HistoryBrowserToggleButtonStyle">
            <Setter Property="Height" Value="24"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource SourceSansPro}"></Setter>
            <Setter Property="FontSize" Value="10"></Setter>
            <Setter Property="Foreground" Value="#006089"></Setter>
            <Setter Property="Margin" Value="0,0,12,0"></Setter>
            <Setter Property="HorizontalAlignment" Value="Right"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border >
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#00a1dd"/>
                    <Setter Property="BorderBrush" Value="#00a1dd"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Foreground" Value="#00a1dd" />
                </Trigger>
                <Trigger Property="IsChecked" Value="True">
                    <Setter Property="Foreground" Value="#072d40" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Opacity" Value="0.2" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsChecked" Value="True" />
                        <Condition Property="IsMouseOver" Value="True" />
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Foreground" Value="#00a1dd" />
                    </MultiTrigger.Setters>
                </MultiTrigger>

            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type TabControl}">
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Padding" Value="-1"></Setter>
        </Style>
        <Style x:Key="closeTabButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.8" />
                                <Setter Property="Cursor" Value="Hand"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Height" Value="16"></Setter>
            <Setter Property="Foreground" Value="{DynamicResource TabForeground}"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource SourceSansPro}"></Setter>
            <Setter Property="FontSize" Value="12px"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" Background="{DynamicResource TabBackground}" Margin="0,0,0,0" Padding="4,0,4,0"
                                BorderThickness="0, 0, 0, 3" CornerRadius="3,3,0,0" >
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter x:Name="ContentSite" 
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Left"
                                    ContentSource="Header"
                                        Margin="0, 0, 0, 0" />
                                <!--<Button Style="{StaticResource closeTabButtonStyle}"  ToolTip="Close this tab" 
                                        DataContext="{Binding ElementName=ContentSite}" Click="closeButton_Click">
                                    <TextBlock FontSize="12" Margin="4, 0, 0, 12">x</TextBlock>
                                </Button>
                                -->
                            </StackPanel>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True" SourceName="Border">
                                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{DynamicResource TabMouseOverTabText}"></Setter>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TabMouseOverTabBorder}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource TabIsSelectedBackground}" />
                                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource TabIsSelectedBorder}" />
                                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{DynamicResource TabIsSelectedText}"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="NavButtonButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Margin" Value="0,-8,9,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" Padding="10, 0, 0, 10" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="QuickHistorySnapshotNavButtonStyle" TargetType="Button">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" BorderThickness="0" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.4" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="activeAddToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Name="border" BorderThickness="0" Padding="10, 0, 0, 10" BorderBrush="Black" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Opacity" Value="0.7" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="activeAddToggleButtonMenuStyle" TargetType="ToggleButton">
            <Setter Property="Height" Value="36"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            <Setter Property="Margin" Value="5,0,5,0"></Setter>
            <Setter Property="HorizontalAlignment" Value="Left"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#f0f1f7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type MenuItem}">
            <Setter Property="Height" Value="33"></Setter>
            <Setter Property="Background" Value="#f0f1f7"></Setter>
            <Setter Property="Foreground" Value="#006089"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource SourceSansPro}"></Setter>
            <Setter Property="FontSize" Value="14px"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
        </Style>
        <c:NotConverter x:Key="NotConverter"/>
    </UserControl.Resources>
    <Grid >
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="250" Name="historyBrowserColumn"/>
        </Grid.ColumnDefinitions>

        <!-- 10.6 is removing this control from display but leaving collapsed for now since there is such a large dependency on the control -->
        <ribbon:XamRibbon Visibility="Collapsed" Name="ribbon" RibbonTabItemSelected="OnRibbonTabItemSelected" Grid.Row="0" Grid.ColumnSpan="3" IsMinimized="{Binding Path=IsRibbonMinimized, Mode=TwoWay}" Loaded="OnRibbonLoaded" Theme="[Current]">
            <ribbon:XamRibbon.QuickAccessToolbar>
                <ribbon:QuickAccessToolbar Visibility="Collapsed"/>
            </ribbon:XamRibbon.QuickAccessToolbar>
            <ribbon:XamRibbon.Tabs >
                <p:ViewTabItem Header="Overview" x:Name="Overview" HeaderTemplate="{StaticResource TabWithImageTemplate}" Source="{Binding OverviewState, Converter={StaticResource OverviewStatusImageConverter}}">
                    <ribbon:RibbonGroup Caption="Views" Name="overviewTabViewsGroup" ribbon:RadioButtonTool.Checked="OnToolChecked">
                        <ribbon:ToolHorizontalWrapPanel>
                            <ribbon:RadioButtonTool Id="overviewTabViewsGroup_overviewTabSummaryViewButton" Caption="Dashboard" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="overviewTabViewsGroup_overviewTabDetailsViewButton" Caption="Details" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="overviewTabViewsGroup_overviewTabConfigurationViewButton" Caption="Configuration" Visibility="{Binding Path=ResourceConfigurationVisibility,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="overviewTabViewsGroup_overviewTabAlertsViewButton" Caption="Active Alerts" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Name="overviewTimelineButton" Id="overviewTabViewsGroup_overviewTabTimelineViewButton" Caption="Timeline" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                        </ribbon:ToolHorizontalWrapPanel>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Dashboard" Name="overviewTabSummaryViewLayoutGroup" Visibility="{Binding Path=VisibilityDashboard,Mode=TwoWay}" >
                        <ribbon:ButtonTool Id="overviewTabSummaryViewLayoutGroup_overviewTabDesignButton" Caption="Customize"  ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" />
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="History" Name="overviewTabSummaryViewHistoryGroup" >
                        <ribbon:ToggleButtonTool Id="overviewTabSummaryViewHistoryGroup_toggleHistoryBrowserButton" Caption="History Browser" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsChecked="{Binding Path=HistoryBrowserVisible, Mode=TwoWay}"></ribbon:ToggleButtonTool>
                        <ribbon:ButtonTool Id="overviewTabSummaryViewHistoryGroup_showPreviousSnapshotButton" Caption="Previous Snapshot" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=HistoryBrowserEnablePrevious}"></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="overviewTabSummaryViewHistoryGroup_showNextSnapshotButton" Caption="Next Snapshot" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=HistoryBrowserEnableNext}"></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="overviewTabSummaryViewActionsGroup" >
                        <ribbon:ButtonTool Id="overviewTabSummaryViewActionsGroup_stopServerButton" Caption="Stop Server" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  Visibility="Collapsed" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="overviewTabSummaryViewActionsGroup_refreshAlertsButton" Caption="Refresh Alerts" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge"  Visibility="Collapsed" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ToggleButtonTool Id="overviewTabSummaryViewActionsGroup_maintenanceModeButton" Caption="Maintenance Mode" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ToggleButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="overviewTabConfigurationViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="overviewTabConfigurationViewShowHideGroup_toggleServerConfigurationDetailsButton" Caption="Details" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="overviewTabConfigurationViewShowHideGroup_toggleServerConfigurationGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="overviewTabDetailsViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="overviewTabDetailsViewShowHideGroup_toggleServerDetailsChartButton" Caption="Chart" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="overviewTabDetailsViewShowHideGroup_toggleServerDetailsGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="overviewTabDetailsViewShowHideGroup_toggleServerDetailsPropertiesButton" Caption="Properties" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="overviewTabActiveAlertsShowHideGroup" >
                        <ribbon:CheckBoxTool Id="overviewTabActiveAlertsShowHideGroup_toggleActiveAlertsForecastButton" Caption="12 Hour Forecast" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="overviewTabActiveAlertsShowHideGroup_toggleActiveAlertsDetailsButton" Caption="Details" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="overviewTabActiveAlertsShowHideGroup_toggleActiveAlertsGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="overviewTabDetailsViewFilterGroup" >
                        <ribbon:RadioButtonTool Id="overviewTabDetailsViewFilterGroup_detailsViewShowAllCountersButton" IsChecked="True" Caption="Show All" Click="OnToolClick" ></ribbon:RadioButtonTool>
                        <ribbon:RadioButtonTool Id="overviewTabDetailsViewFilterGroup_detailsViewShowCustomCountersButton" Caption="Custom Counters" Click="OnToolClick" ></ribbon:RadioButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Newsfeed" Name="overviewTabPulseGroup" >
                        <ribbon:ButtonTool Id="overviewTabPulseGroup_pulseProfileButton" Caption="View Server Profile" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseEnabled}"></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="overviewTabPulseGroup_pulsePostButton" Caption="Post to Server Wall" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}"></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="overviewTabPulseGroup_pulseFollowButton" Caption="{Binding Path=PulseFollowServerButtonText}" LargeImage="{Binding Path=PulseFollowServerImageSource}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}"></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="overviewActivityTimelineFilterGroup"  Width="208" HorizontalAlignment="Stretch">
                        <ribbon:ComboEditorTool Caption="" IsEditable="False" SelectedIndex="0" ToolTip="Select the date range" Width="140" DropDownResizeMode="None" IsAlwaysInEditMode="False" LimitToList="True" DropDownButtonDisplayMode="Always" UseLayoutRounding="False" EditAreaWidth="140" Background="White" ValueChanged="ComboEditorTool_ValueChanged" Margin="0" Height="25" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch">
                            <ribbon:ComboEditorTool.ItemsProvider>
                                <igEditors:ComboBoxItemsProvider>
                                    <igEditors:ComboBoxItemsProvider.Items>
                                        <igEditors:ComboBoxDataItem DisplayText="Today" Value="0"/>
                                        <igEditors:ComboBoxDataItem DisplayText="Yesterday" Value="1"/>
                                        <igEditors:ComboBoxDataItem DisplayText="Last 7 Days" Value="2"/>
                                        <igEditors:ComboBoxDataItem DisplayText="Last 14 Days" Value="3"/>
                                        <igEditors:ComboBoxDataItem DisplayText="Pick a Day" Value="4"/>
                                    </igEditors:ComboBoxItemsProvider.Items>
                                </igEditors:ComboBoxItemsProvider>
                            </ribbon:ComboEditorTool.ItemsProvider>
                        </ribbon:ComboEditorTool>
                        <Label Content="Day" Height="28" Margin="-140,30,0,0" Width="140" />
                        <igEditors:XamDateTimeEditor DisplayMode="IncludeLiteralsWithPadding" Height="20"  UseLayoutRounding="False" Mask="{}{date}" Width="100" AutoFillDate="None" AlwaysValidate="True" SpinButtonDisplayMode="Never" ToolTip="Select a start date"  VerticalContentAlignment="Top" Margin="-115,31,1,1" ValueChanged="activityTimelineStart_ValueChanged" InvalidValueBehavior="RevertValue">
                            <igEditors:XamDateTimeEditor.ValueConstraint>
                                <igEditors:ValueConstraint Nullable="False" ValidateAsType="DateTime" />
                            </igEditors:XamDateTimeEditor.ValueConstraint>
                        </igEditors:XamDateTimeEditor>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Tools" Name="overviewTabSummaryViewToolsGroup" >
                        <ribbon:ToggleButtonTool Id="overviewTabSummaryViewActionsGroup_baselineAssistantButton" Caption="Baseline Visualizer" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ToggleButtonTool>
                    </ribbon:RibbonGroup>
                </p:ViewTabItem>
                <p:ViewTabItem Header="Sessions" x:Name="Sessions" HeaderTemplate="{StaticResource TabWithImageTemplate}" Source="{Binding Path=SessionsState, Converter={StaticResource SessionsStatusImageConverter}}">
                    <ribbon:RibbonGroup Caption="Views" Name="sessionsTabViewsGroup" ribbon:RadioButtonTool.Checked="OnToolChecked">
                        <ribbon:ToolHorizontalWrapPanel>
                            <ribbon:RadioButtonTool Id="sessionsTabViewsGroup_sessionsTabSummaryViewButton" Caption="Summary" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="sessionsTabViewsGroup_sessionsTabDetailsViewButton" Caption="Details" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="sessionsTabViewsGroup_sessionsTabLocksViewButton" Caption="Locks"  Visibility="{Binding Path=VisibilityLocks,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="sessionsTabViewsGroup_sessionsTabBlockingViewButton" Caption="Blocking" Visibility="{Binding Path=VisibilityBlocking,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                        </ribbon:ToolHorizontalWrapPanel>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="History" Name="sessionsTabHistoryGroup" >
                        <ribbon:ToggleButtonTool Id="sessionsTabHistoryGroup_toggleHistoryBrowserButton" Caption="History Browser" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsChecked="{Binding Path=HistoryBrowserVisible, Mode=TwoWay}"></ribbon:ToggleButtonTool>
                        <ribbon:ButtonTool Id="sessionsTabHistoryGroup_showPreviousSnapshotButton" Caption="Previous Snapshot" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=HistoryBrowserEnablePrevious}"></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="sessionsTabHistoryGroup_showNextSnapshotButton" Caption="Next Snapshot" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=HistoryBrowserEnableNext}"></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="sessionsTabDetailsActionsGroup" >
                        <ribbon:ButtonTool Id="sessionsTabDetailsActionsGroup_traceSessionsSessionButton" Caption="Trace Session" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="sessionsTabDetailsActionsGroup_killSessionsSessionButton" Caption="Kill Session" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="sessionsTabDetailsFilterGroup" >
                        <ribbon:ToggleButtonTool Id="sessionsTabDetailsFilterGroup_filterSessionsButton" Caption="Filter" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ToggleButtonTool>
                        <ribbon:CheckBoxTool Id="sessionsTabDetailsFilterGroup_showActiveSessionsOnlyButton" Caption="Active Only" Click="OnToolClick" Name="showActiveSessionsOnlyCheckbox"></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="sessionsTabDetailsFilterGroup_showUserSessionsOnlyButton" IsChecked="True" Caption="User Only" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="sessionsTabDetailsFilterGroup_showBlockedSessionsButton" Caption="Blocked" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="sessionsTabDetailsShowHideGroup" >
                        <ribbon:CheckBoxTool Id="sessionsTabDetailsShowHideGroup_toggleSessionsDetailsDetailsPanelButton" IsChecked="True" Caption="Details" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="sessionsTabDetailsShowHideGroup_toggleSessionsDetailsGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="sessionsTabLocksActionsGroup" >
                        <ribbon:ButtonTool Id="sessionsTabLocksActionsGroup_traceSessionsLocksSessionButton" Caption="Trace Session" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="sessionsTabLocksActionsGroup_killSessionsLocksSessionButton" Caption="Kill Session" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="sessionsTabLocksFilterGroup" >
                        <ribbon:ToggleButtonTool Id="sessionsTabLocksFilterGroup_filterLocksButton" Caption="Filter" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ToggleButtonTool>
                        <ribbon:CheckBoxTool Id="sessionsTabLocksFilterGroup_showBlockedLocksOnlyButton" Caption="Show Blocked" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="sessionsTabLocksFilterGroup_showBlockingLocksOnlyButton" Caption="Show Blocking" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="sessionsTabLocksShowHideGroup" >
                        <ribbon:CheckBoxTool Id="sessionsTabLocksShowHideGroup_toggleSessionsLocksChartButton" Caption="Chart" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="sessionsTabLocksShowHideGroup_toggleSessionsLocksGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="sessionsTabBlockingActionsGroup" >
                        <ribbon:ButtonTool Id="sessionsTabBlockingActionsGroup_traceSessionsBlockingSessionButton" Caption="Trace Session" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="sessionsTabBlockingActionsGroup_killSessionsBlockingSessionButton" Caption="Kill Session" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Blocking Tree" Name="sessionsTabBlockingTypeGroup" >
                        <ribbon:RadioButtonTool Id="sessionsTabBlockingTypeGroup_showSessionsBlockingBySessionButton" Caption="By Session" Click="OnToolClick" IsChecked="True"></ribbon:RadioButtonTool>
                        <ribbon:RadioButtonTool Id="sessionsTabBlockingTypeGroup_showSessionsBlockingByLockButton" Caption="By Lock" Click="OnToolClick" ></ribbon:RadioButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="sessionsTabBlockingShowHideGroup" >
                        <ribbon:CheckBoxTool Id="sessionsTabBlockingShowHideGroup_toggleSessionsBlockingChartButton" Caption="Chart" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="sessionsTabBlockingShowHideGroup_toggleSessionsBlocksDeadlocksListButton" Caption="Blocks and Deadlocks" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Newsfeed" Name="sessionsTabPulseGroup" >
                        <ribbon:ButtonTool Id="sessionsTabPulseGroup_pulseProfileButton" Caption="View Server Profile" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseEnabled}"></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="sessionsTabPulseGroup_pulsePostButton" Caption="Post to Server Wall" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="sessionsTabPulseGroup_pulseFollowButton" Caption="{Binding Path=PulseFollowServerButtonText}" LargeImage="{Binding Path=PulseFollowServerImageSource}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                </p:ViewTabItem>
                <p:ViewTabItem Header="Queries" x:Name="Queries" HeaderTemplate="{StaticResource TabWithImageTemplate}" Source="{Binding Path=QueriesState, Converter={StaticResource QueriesStatusImageConverter}}" 
                                Visibility="{Binding Path=VisibilityQueries,Mode=TwoWay}">
                    <ribbon:RibbonGroup Caption="Views" Name="queriesTabViewsGroup" ribbon:RadioButtonTool.Checked="OnToolChecked">
                        <ribbon:ToolHorizontalWrapPanel>
                            <ribbon:RadioButtonTool Id="queriesTabViewsGroup_queriesTabSignatureModeViewButton" Caption="Signature Mode" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="queriesTabViewsGroup_queriesTabStatementModeViewButton" Caption="Statement Mode" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="queriesTabViewsGroup_queriesTabHistoryModeViewButton" Caption="Query History"  ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="queriesTabViewsGroup_resourcesTabWaitStatsActiveViewButton" Caption="Query Waits" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextNormal" Click="OnToolClick"></ribbon:RadioButtonTool>
                        </ribbon:ToolHorizontalWrapPanel>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="History" Name="queriesTabHistoryGroup" >
                        <ribbon:ToggleButtonTool Id="queriesTabHistoryGroup_toggleHistoryBrowserButton" Caption="History Browser" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick"  IsChecked="{Binding Path=HistoryBrowserVisible, Mode=TwoWay}"></ribbon:ToggleButtonTool>
                        <ribbon:ButtonTool Id="queriesTabHistoryGroup_showPreviousSnapshotButton" Caption="Previous Snapshot" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="queriesTabHistoryGroup_showNextSnapshotButton" Caption="Next Snapshot" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Properties" Name="queriesTabPropertiesGroup" >
                        <ribbon:ButtonTool Id="queriesTabPropertiesGroup_configureQueryMonitorButton" Caption="Configure Query Monitor" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="queriesTabFilterGroup" >
                        <ribbon:ToggleButtonTool Id="queriesTabFilterGroup_filterQueryMonitorButton" Caption="Advanced Filter" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ToggleButtonTool>
                        <ribbon:CheckBoxTool Id="queriesTabFilterGroup_showQueryMonitorSqlStatementsButton" IsChecked="True" Caption="Show SQL Statements"  Click="OnToolClick" Visibility="Collapsed"></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="queriesTabFilterGroup_showQueryMonitorStoredProceduresButton" IsChecked="True" Caption="Show Stored Procedures"  Click="OnToolClick" Visibility="Collapsed"></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="queriesTabFilterGroup_showQueryMonitorSqlBatchesButton" IsChecked="True" Caption="Show SQL Batches"  Click="OnToolClick" Visibility="Collapsed"></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="queriesTabFilterGroup_showQueryMonitorCurrentQueriesButton" IsChecked="True" Caption="Show Currently Running Queries"  Click="OnToolClick" Visibility="Collapsed"></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="queriesTabShowHideGroup" >
                        <ribbon:CheckBoxTool Id="queriesTabShowHideGroup_toggleQueryMonitorFiltersButton" Caption="Filters" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="queriesTabShowHideGroup_toggleQueryMonitorGridButton" Caption="List" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="queriesTabShowHideGroup_toggleQueryMonitorGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="actionsRibbonGroup" >
                        <ribbon:ButtonTool Id="actionsRibbonGroup_queriesActiveWaitsConfigureTopXButton" Caption="Filter" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="actionsRibbonGroup_queriesActiveWaitsConfigureButton" Caption="Configure" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick"></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Newsfeed" Name="queriesTabPulseGroup" >
                        <ribbon:ButtonTool Id="queriesTabPulseGroup_pulseProfileButton" Caption="View Server Profile" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseEnabled}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="queriesTabPulseGroup_pulsePostButton" Caption="Post to Server Wall" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="queriesTabPulseGroup_pulseFollowButton" Caption="{Binding Path=PulseFollowServerButtonText}" LargeImage="{Binding Path=PulseFollowServerImageSource}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                </p:ViewTabItem>
                <p:ViewTabItem Header="Resources" x:Name="Resources" HeaderTemplate="{StaticResource TabWithImageTemplate}" Source="{Binding Path=ResourcesState, Converter={StaticResource ResourcesStatusImageConverter}}">
                    <ribbon:RibbonGroup Caption="Views" Name="resourcesTabViewsGroup" ribbon:RadioButtonTool.Checked="OnToolChecked">
                        <ribbon:ToolHorizontalWrapPanel>
                            <ribbon:RadioButtonTool Id="resourcesTabViewsGroup_resourcesTabSummaryViewButton" IsChecked="True" Caption="Summary" Visibility="{Binding Path=VisibilitySummary,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="resourcesTabViewsGroup_resourcesTabCpuViewButton" Caption="CPU" Visibility="{Binding Path=VisibilityCPU,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="resourcesTabViewsGroup_resourcesTabMemoryViewButton" Caption="Memory" Visibility="{Binding Path=VisibilityMemory,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="resourcesTabViewsGroup_resourcesTabDiskViewButton" Caption="Disk" Visibility="{Binding Path=VisibilityDisk,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="resourcesTabViewsGroup_resourcesTabDiskSizeViewButton" Caption="Disk Size" Visibility="{Binding Path=VisibilityDiskSize,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="resourcesTabViewsGroup_resourcesTabFileActivityViewButton" Caption="File Activity"  ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Visibility="{Binding Path=ResourceTabFileActivityVisibility}" ribbon:RibbonGroup.MinimumSize="ImageAndTextNormal" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="resourcesTabViewsGroup_resourcesTabProcedureCacheViewButton" Caption="Procedure Cache" Visibility="{Binding Path=VisibilityProcedurecache,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="resourcesTabViewsGroup_resourcesTabWaitStatsViewButton" Caption="Server Waits"   Visibility="{Binding Path=VisibilityServerwaits,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                        </ribbon:ToolHorizontalWrapPanel>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="History" Name="resourcesTabHistoryGroup" >
                        <ribbon:ToggleButtonTool Id="resourcesTabHistoryGroup_toggleHistoryBrowserButton" Caption="History Browser" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick"  IsChecked="{Binding Path=HistoryBrowserVisible, Mode=TwoWay}"></ribbon:ToggleButtonTool>
                        <ribbon:ButtonTool Id="resourcesTabHistoryGroup_showPreviousSnapshotButton" Caption="Previous Snapshot" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="resourcesTabHistoryGroup_showNextSnapshotButton" Caption="Next Snapshot" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="resourcesTabActionsGroup" >
                        <ribbon:ButtonTool Id="resourcesTabActionsGroup_clearProcedureCacheButton" Caption="Clear Cache" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="resourcesTabProcedureCacheViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="resourcesTabProcedureCacheViewShowHideGroup_toggleProcedureCacheChartsButton" Caption="Charts" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="resourcesTabProcedureCacheViewShowHideGroup_toggleProcedureCacheGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="resourcesTabWaitStatsViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="resourcesTabWaitStatsViewShowHideGroup_toggleWaitStatsGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="resourcesShowFileActivityFilterGroup" >
                        <ribbon:CheckBoxTool Id="resourcesShowFileActivityFilterGroup_resourcesShowFileActivityFilterButton" Caption="Show Filter" Click="OnToolClick" />
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Newsfeed" Name="resourcesTabPulseGroup" >
                        <ribbon:ButtonTool Id="resourcesTabPulseGroup_pulseProfileButton" Caption="View Server Profile" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseEnabled}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="resourcesTabPulseGroup_pulsePostButton" Caption="Post to Server Wall" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="resourcesTabPulseGroup_pulseFollowButton" Caption="{Binding Path=PulseFollowServerButtonText}" LargeImage="{Binding Path=PulseFollowServerImageSource}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="resourcesTabDiskSizeViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="resourcesTabDiskSizeViewShowHideGroup_toggleDiskSizeViewGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                </p:ViewTabItem>
                <p:ViewTabItem Header="Databases" x:Name="Databases" HeaderTemplate="{StaticResource TabWithImageTemplate}" Source="{Binding Path=DatabasesState, Converter={StaticResource DatabasesStatusImageConverter}}">
                    <ribbon:RibbonGroup Caption="Views" Name="databasesTabViewsGroup" ribbon:RadioButtonTool.Checked="OnToolChecked" >
                        <ribbon:ToolHorizontalWrapPanel>
                            <ribbon:RadioButtonTool Id="databasesTabViewsGroup_databasesTabSummaryViewButton" Caption="Summary"  Visibility="{Binding Path=VisibilitySummary,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="databasesTabViewsGroup_databasesTabAlwaysOnViewButton" Caption="Availability Group" Visibility="{Binding Path=VisibilityAvailabilityGroup,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="databasesTabViewsGroup_databasesTabTempdbSummaryViewButton" Caption="Tempdb Summary"  Visibility="{Binding Path=VisibilityTempdbSummary,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="databasesTabViewsGroup_databasesTabConfigurationViewButton" Caption="Configuration" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="databasesTabViewsGroup_databasesTabFilesViewButton" Caption="Files" Visibility="{Binding Path=VisibilityFiles,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="databasesTabViewsGroup_databasesTabBackupRestoreHistoryViewButton"  Caption="Backups &amp; Restores" Visibility="{Binding Path=VisibilityBackupsRestores,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="databasesTabViewsGroup_databasesTabTablesIndexesViewButton" Caption="Tables &amp; Indexes"  Visibility="{Binding Path=VisibilityTablesIndexes,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="databasesTabViewsGroup_databasesTabMirroringViewButton" Caption="Mirroring" Visibility="{Binding Path=VisibilityMirroring,Mode=TwoWay}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                        </ribbon:ToolHorizontalWrapPanel>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="History" Name="databasesTabHistoryGroup" >
                        <ribbon:ToggleButtonTool Id="databasesTabHistoryGroup_toggleHistoryBrowserButton" Caption="History Browser" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick"  IsChecked="{Binding Path=HistoryBrowserVisible, Mode=TwoWay}"></ribbon:ToggleButtonTool>
                        <ribbon:ButtonTool Id="databasesTabHistoryGroup_showPreviousSnapshotButton" Caption="Previous Snapshot" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="databasesTabHistoryGroup_showNextSnapshotButton" Caption="Next Snapshot" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="databasesTabSummaryViewFilterGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabSummaryViewFilterGroup_databasesSummaryShowUserDatabasesOnlyButton" Caption="User Databases Only" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="databasesTabSummaryViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabSummaryViewShowHideGroup_toggleDatabasesSummaryChartsButton" Caption="Charts" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="databasesTabSummaryViewShowHideGroup_toggleDatabasesSummaryGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="databasesTabAlwaysOnViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabAlwaysOnViewShowHideGroup_toggleDatabasesAlwaysOnChartsButton" Caption="Charts" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="databasesTabAlwaysOnViewShowHideGroup_toggleDatabasesAlwaysOnGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="databasesTabConfigurationViewFilterGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabConfigurationViewFilterGroup_databasesConfigurationShowUserDatabasesOnlyButton" Caption="User Databases Only" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="databasesTabConfigurationViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabConfigurationViewShowHideGroup_toggleDatabasesConfigurationGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="databasesTabBackupRestoreHistoryViewFilterGroup" >
                        <ribbon:ToggleButtonTool Id="databasesTabBackupRestoreHistoryViewFilterGroup_filterDatabasesBackupRestoreHistoryButton" Caption="Filter" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ToggleButtonTool>
                        <ribbon:CheckBoxTool Id="databasesTabBackupRestoreHistoryViewFilterGroup_databasesBackupRestoreHistoryShowUserDatabasesOnlyButton" Caption="User Databases Only"  Visibility="Collapsed" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="databasesTabBackupRestoreHistoryViewFilterGroup_databasesBackupRestoreHistoryShowBackupsButton" Caption="Show Backups" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="databasesTabBackupRestoreHistoryViewFilterGroup_databasesBackupRestoreHistoryShowRestoresButton" Caption="Show Restores" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="databasesTabBackupRestoreHistoryViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabBackupRestoreHistoryViewShowHideGroup_toggleDatabasesBackupRestoreHistoryDatabasesGroupByBoxButton" Caption="Databases Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="databasesTabBackupRestoreHistoryViewShowHideGroup_toggleDatabasesBackupRestoreHistoryGroupByBoxButton" Caption="History Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="databasesTabFilesViewFilterGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabFilesViewFilterGroup_databasesFilesShowUserDatabasesOnlyButton" Caption="User Databases Only" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="databasesTabFilesViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabFilesViewShowHideGroup_toggleDatabasesFilesGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="databasesTabTablesViewActionsGroup" >
                        <ribbon:ButtonTool Id="databasesTabTablesViewActionsGroup_updateTableStatisticsButton" Caption="Update Statistics" ToolTip="Updates index statistics for the selected tables." ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="databasesTabTablesViewActionsGroup_rebuildTableIndexesButton" Caption="Rebuild Indexes" ToolTip="Rebuild indexes for the selected tables." ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="databasesTabTablesViewFilterGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabTablesViewFilterGroup_databasesTablesShowUserDatabasesOnlyButton" Caption="User Databases Only"  Visibility="Collapsed" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="databasesTabTablesViewFilterGroup_databasesTablesShowUserTablesOnlyButton" Caption="User Tables Only" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="databasesTabTablesViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabTablesViewShowHideGroup_toggleDatabasesTablesTableDetailsButton" Caption="Table Details" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="databasesTabTablesViewShowHideGroup_toggleDatabasesTablesGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="databasesTabMirroringViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabMirroringViewShowHideGroup_toggleDatabasesMirroredDatabasesGroupByBoxButton" Caption="Mirrored Databases Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="databasesTabMirroringViewShowHideGroup_toggleDatabaseMirroringHistoryGroupByBoxButton" Caption="Mirroring History Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="databasesTabMirroringViewActionsGroup" >
                        <ribbon:ButtonTool Id="databasesTabMirroringViewActionsGroup_databasesTabMirroringViewFailOverButton" Caption="Fail Over" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="databasesTabMirroringViewActionsGroup_databasesTabMirroringViewPauseButton" Caption="Suspend\Resume" ToolTip="Suspend\resume the selected mirroring session" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="databasesTabTempdbViewFilterGroup" >
                        <ribbon:ToggleButtonTool Id="databasesTabTempdbViewFilterGroup_filterDatabasesTempdbSessionsButton" Caption="Sessions Filter" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ToggleButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="databasesTabTempdbViewShowHideGroup" >
                        <ribbon:CheckBoxTool Id="databasesTabTempdbViewShowHideGroup_toggleDatabasesTempdbGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Newsfeed" Name="databasesTabPulseGroup" >
                        <ribbon:ButtonTool Id="databasesTabPulseGroup_pulseProfileButton" Caption="View Server Profile" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseEnabled}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="databasesTabPulseGroup_pulsePostButton" Caption="Post to Server Wall" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="databasesTabPulseGroup_pulseFollowButton" Caption="{Binding Path=PulseFollowServerButtonText}" LargeImage="{Binding Path=PulseFollowServerImageSource}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                </p:ViewTabItem>
                <p:ViewTabItem Header="Services" x:Name="Services" HeaderTemplate="{StaticResource TabWithImageTemplate}"  Visibility="{Binding Path=ServicesTabItemVisibilityforAzureDb,Mode=TwoWay}" Source="{Binding Path=ServicesState, Converter={StaticResource ServicesStatusImageConverter}}">
                    <ribbon:RibbonGroup Caption="Views" Name="servicesTabViewsGroup" ribbon:RadioButtonTool.Checked="OnToolChecked">
                        <ribbon:ToolHorizontalWrapPanel>
                            <ribbon:RadioButtonTool Id="servicesTabViewsGroup_servicesTabSummaryViewButton" Caption="Summary" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="servicesTabViewsGroup_servicesTabSqlAgentJobsViewButton" Caption="SQL Agent Jobs" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="servicesTabViewsGroup_servicesTabFullTextSearchViewButton" Caption="Full-Text Search" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                            <ribbon:RadioButtonTool Id="servicesTabViewsGroup_servicesTabReplicationViewButton" Caption="Replication" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>
                        </ribbon:ToolHorizontalWrapPanel>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="servicesTabServicesSummaryActionGroup" >
                        <ribbon:ButtonTool Id="servicesTabServicesSummaryActionGroup_startServicesServiceButton" Caption="Start" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="servicesTabServicesSummaryActionGroup_stopServicesServiceButton" Caption="Stop" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="servicesTabServicesSummaryShowHideGroup" >
                        <ribbon:CheckBoxTool Id="servicesTabServicesSummaryShowHideGroup_toggleServicesSummaryChartsButton" Caption="Chart" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="servicesTabServicesSummaryShowHideGroup_toggleServicesSummaryGroupByBoxVisibleButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="servicesTabAgentJobsActionGroup" >
                        <ribbon:ButtonTool Id="servicesTabAgentJobsActionGroup_startServicesAgentButton" Caption="Start Service" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="servicesTabAgentJobsActionGroup_stopServicesAgentButton" Caption="Stop Service" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="servicesTabAgentJobsActionGroup_startAgentJobButton" Caption="Start Job" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="servicesTabAgentJobsActionGroup_stopAgentJobButton" Caption="Stop Job" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="servicesTabAgentJobsFilterGroup" >
                        <ribbon:ToggleButtonTool Id="servicesTabAgentJobsFilterGroup_filterAgentJobsButton" Caption="Filter" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ToggleButtonTool>
                        <ribbon:RadioButtonTool Id="servicesTabAgentJobsFilterGroup_showAgentJobsAllButton" IsChecked="True" Caption="All Jobs" Click="OnToolClick" ></ribbon:RadioButtonTool>
                        <ribbon:RadioButtonTool Id="servicesTabAgentJobsFilterGroup_showAgentJobsFailedOnlyButton" Caption="Failed Jobs" Click="OnToolClick" ></ribbon:RadioButtonTool>
                        <ribbon:RadioButtonTool Id="servicesTabAgentJobsFilterGroup_showAgentJobsRunningOnlyButton" Caption="Running Jobs" Click="OnToolClick" ></ribbon:RadioButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="servicesTabAgentJobsShowHideGroup" >
                        <ribbon:CheckBoxTool Id="servicesTabAgentJobsShowHideGroup_toggleServicesAgentJobsHistoryVisibleButton" IsChecked="True" Caption="Job History" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="servicesTabAgentJobsShowHideGroup_toggleServicesAgentJobsGroupByBoxVisibleButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="servicesTabFullTextSearchActionGroup" >
                        <ribbon:ButtonTool Id="servicesTabFullTextSearchActionGroup_startServicesFullTextSearchButton" Caption="Start Service" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="servicesTabFullTextSearchActionGroup_stopServicesFullTextSearchButton" Caption="Stop Service" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="servicesTabFullTextSearchActionGroup_optimizeFullTextSearchCatalogButton" Caption="Optimize" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="servicesTabFullTextSearchActionGroup_repopulateFullTextSearchCatalogButton" Caption="Repopulate" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="servicesTabFullTextSearchActionGroup_rebuildFullTextSearchCatalogButton" Caption="Rebuild" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"  IsEnabled="False" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="servicesTabFullTextSearchShowHideGroup" >
                        <ribbon:CheckBoxTool Id="servicesTabFullTextSearchShowHideGroup_toggleServicesFullTextSearchDetailsButton" Caption="Catalog Details" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="servicesTabFullTextSearchShowHideGroup_toggleServicesFullTextSearchGroupByBoxVisibleButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Filter" Name="servicesTabReplicationFilterGroup" >
                        <ribbon:ToggleButtonTool Id="servicesTabReplicationFilterGroup_filterReplicationButton" Caption="Filter" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ToggleButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="servicesTabReplicationShowHideGroup" >
                        <ribbon:CheckBoxTool Id="servicesTabReplicationShowHideGroup_toggleServicesReplicationTopologyGroupByBoxVisibleButton" Caption="Topology Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="servicesTabReplicationShowHideGroup_toggleServicesReplicationDistributorGroupByBoxVisibleButton" Caption="Non-Subscribed Queue Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="servicesTabReplicationShowHideGroup_toggleServicesReplicationReplicationGraphsVisibleButton" Caption="Replication Charts" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Newsfeed" Name="servicesTabPulseGroup" >
                        <ribbon:ButtonTool Id="servicesTabPulseGroup_pulseProfileButton" Caption="View Server Profile" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseEnabled}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="servicesTabPulseGroup_pulsePostButton" Caption="Post to Server Wall" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="servicesTabPulseGroup_pulseFollowButton" Caption="{Binding Path=PulseFollowServerButtonText}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                </p:ViewTabItem>
                <p:ViewTabItem Header="Logs" x:Name="Logs" HeaderTemplate="{StaticResource TabWithImageTemplate}" Visibility="{Binding Path=LogTabItemVisibility1,Mode=TwoWay}" Source="{Binding Path=LogsState, Converter={StaticResource LogsStatusImageConverter}}">
                    <ribbon:RibbonGroup Caption="Filter" Name="logsTabFilterGroup" >
                        <ribbon:ToggleButtonTool Id="logsTabFilterGroup_filterLogsButton" Caption="Filter" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ToggleButtonTool>
                        <ribbon:CheckBoxTool Id="logsTabFilterGroup_filterLogsShowErrorsButton" IsChecked="True" Caption="Show Errors" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="logsTabFilterGroup_filterLogsShowWarningsButton" IsChecked="True" Caption="Show Warnings" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="logsTabFilterGroup_filterLogsShowInformationalButton" IsChecked="True" Caption="Show Informational" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Search" Name="logsTabSearchGroup" >
                        <ribbon:ButtonTool Id="logsTabSearchGroup_searchLogsButton" Caption="Search" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="logsTabActionsGroup" >
                        <ribbon:ButtonTool Id="logsTabActionsGroup_cycleServerLogButton" Caption="Cycle Server Log" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="logsTabActionsGroup_configureServerLogButton" Caption="Configure" ToolTip="Configure Log Limit" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="logsTabShowHideGroup" >
                        <ribbon:CheckBoxTool Id="logsTabShowHideGroup_toggleAvailableLogsButton" Caption="Logs" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="logsTabShowHideGroup_toggleLogDetailsButton" Caption="Details" Click="OnToolClick" ></ribbon:CheckBoxTool>
                        <ribbon:CheckBoxTool Id="logsTabShowHideGroup_toggleLogGroupByBoxButton" Caption="Group By Box" Click="OnToolClick" ></ribbon:CheckBoxTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Newsfeed" Name="logsTabPulseGroup" >
                        <ribbon:ButtonTool Id="logsTabPulseGroup_pulseProfileButton" Caption="View Server Profile" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseEnabled}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="logsTabPulseGroup_pulsePostButton" Caption="Post to Server Wall" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="logsTabPulseGroup_pulseFollowButton" Caption="{Binding Path=PulseFollowServerButtonText}" LargeImage="{Binding Path=PulseFollowServerImageSource}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                </p:ViewTabItem>
                <p:ViewTabItem Header="Analyze" x:Name="Analyze" HeaderTemplate="{StaticResource TabWithImageTemplate}" Source="{Binding Path=AnalysisState, Converter={StaticResource AnalysisStatusImageConverter}}">
                    <ribbon:RibbonGroup Caption="Actions" Name="analyzeTabViewsGroup">
                        <ribbon:ToolHorizontalWrapPanel>
                            <ribbon:ButtonTool Id="analyzeTabViewsGroup_analyzeTabBlockButton" Caption="Block" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                            <ribbon:ButtonTool Id="analyzeTabViewsGroup_analyzeTabExportButton" Caption="Export" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                            <ribbon:ButtonTool Id="analyzeTabViewsGroup_analyzeTabCopyButton" Caption="Copy" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                            <ribbon:ButtonTool Id="analyzeTabViewsGroup_analyzeTabEMailButton" Caption="Email" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        </ribbon:ToolHorizontalWrapPanel>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Scripts" Name="analyzeTabScriptGroup" >
                        <ribbon:ButtonTool Id="analyzeTabScriptGroup_analyzeTabShowProblem" Caption="Show Problem" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="analyzeTabScriptGroup_analyzeTabUndoScript" Caption="Undo Script" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="analyzeTabScriptGroup_analyzeTabOptimizeScript" Caption="Optimize Script" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Analyze" Name="analyzeTabRunGroup">
                        <ribbon:ToolHorizontalWrapPanel>
                            <ribbon:ButtonTool Id="analyzeTabRunGroup_analysisRunAnalysisButton" Caption="Run Analysis" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>

                            <!--<ribbon:RadioButtonTool Id="analyzeTabRunGroup_analysisWorkloadAnalysisButton" Caption="Run Work Load Analysis" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:RadioButtonTool>-->
                        </ribbon:ToolHorizontalWrapPanel>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="History" Name="analyzeTabHistoryGroup" >
                        <ribbon:ToggleButtonTool Id="analyzeTabHistoryGroup_toggleHistoryBrowserButton" Caption="History" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick"  IsChecked="{Binding Path=HistoryBrowserVisible, Mode=TwoWay}"></ribbon:ToggleButtonTool>
                        <ribbon:ButtonTool Id="analyzeTabHistoryGroup_showPreviousSnapshotButton" Caption="Previous Analysis" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="analyzeTabHistoryGroup_showNextSnapshotButton" Caption="Next Analysis" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Name="drillDownGroup" IsEnabled="{Binding Path=DrillOutButtonVisible}" >
                        <ribbon:ButtonTool Id="analyzeTabHistoryGroup_drillOutButton" Caption="Back" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Newsfeed" Name="analyzeTabPulseGroup" >
                        <ribbon:ButtonTool Id="analyzeTabPulseGroup_pulseProfileButton" Caption="View Server Profile" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseEnabled}"></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="analyzeTabPulseGroup_pulsePostButton" Caption="Post to Server Wall" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}"></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="analyzeTabPulseGroup_pulseFollowButton" Caption="{Binding Path=PulseFollowServerButtonText}" LargeImage="{Binding Path=PulseFollowServerImageSource}" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" IsEnabled="{Binding Path=IsPulseLoggedIn}"></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                </p:ViewTabItem>
                <p:ViewTabItem Header="Dashboard" x:Name="Dashboard" HeaderTemplate="{StaticResource TabWithoutImageTemplate}" Visibility="Hidden">
                    <ribbon:RibbonGroup Caption="Viewer" Name="dashboardTabGalleryViewerGroup" Visibility="Collapsed" >
                        <ribbon:ButtonTool Id="dashboardTabGalleryViewerGroup_previousDashboardButton" Caption="Previous Layout" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick"></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="dashboardTabGalleryViewerGroup_nextDashboardButton" Caption="Next Layout" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick"></ribbon:ButtonTool>
                        <ribbon:ToggleButtonTool Id="dashboardTabGalleryViewerGroup_showAllUserDashboardsButton" Caption="Show All Layouts" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" IsChecked="{Binding Path=DashboardShowAllDashboardsMode, Mode=TwoWay}"></ribbon:ToggleButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="dashboardTabGalleryActionsGroup" >
                        <ribbon:ButtonTool Id="dashboardTabGalleryActionsGroup_selectDashboardButton" Caption="Select" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="dashboardTabGalleryActionsGroup_deleteDashboardButton" Caption="Delete" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="dashboardTabGalleryActionsGroup_closeDashboardGalleryButton" Caption="Cancel"  ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="dashboardTabGalleryFiltersGroup" >
                        <ribbon:RadioButtonTool Id="dashboardTabGalleryFiltersGroup_showDefaultDashboardsButton" Caption="SQLdm Defaults" Click="OnToolClick"></ribbon:RadioButtonTool>
                        <ribbon:RadioButtonTool Id="dashboardTabGalleryFiltersGroup_showUserDashboardsButton" Caption="My Dashboards" IsChecked="True" Click="OnToolClick"></ribbon:RadioButtonTool>
                        <ribbon:RadioButtonTool Id="dashboardTabGalleryFiltersGroup_showAllDashboardsButton" Caption="All Dashboards" Click="OnToolClick"></ribbon:RadioButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Actions" Name="dashboardTabDesignerActionsGroup" >
                        <ribbon:MenuTool Id="dashboardTabDesignerActionsGroup_selectLayoutButton" Caption="Select Layout"
                                         ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge"
                                         ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge"
                                         Click="OnToolClick" >
                            <ribbon:MenuTool.ToolTip>
                                <ribbon:XamRibbonScreenTip Header="Select Layout" Content="Select the column and row layout for the page."/>
                            </ribbon:MenuTool.ToolTip>
                            <ribbon:GalleryTool Id="selectLayoutGallery"
                                                ActivationActionDelay="0"
                                                ActivationInitialActionDelay="0"
                                                AllowResizeDropDown="False"
                                                MaxDropDownColumns="1"
                                                ItemBehavior="Button"
                                                ItemClicked="OnGalleryItemClicked">
                                <ribbon:GalleryTool.Groups>
                                    <ribbon:GalleryItemGroup Title="Two Columns">
                                        <ribbon:GalleryItemGroup.ItemKeys>
                                            <s:String>DashboardLayoutTwoByTwo</s:String>
                                            <s:String>DashboardLayoutTwoByThree</s:String>
                                            <s:String>DashboardLayoutTwoByFour</s:String>
                                            <s:String>DashboardLayoutTwoByFive</s:String>
                                        </ribbon:GalleryItemGroup.ItemKeys>
                                    </ribbon:GalleryItemGroup>
                                    <ribbon:GalleryItemGroup Title="Three Columns  ">
                                        <ribbon:GalleryItemGroup.ItemKeys>
                                            <s:String>DashboardLayoutThreeByTwo</s:String>
                                            <s:String>DashboardLayoutThreeByThree</s:String>
                                            <s:String>DashboardLayoutThreeByFour</s:String>
                                        </ribbon:GalleryItemGroup.ItemKeys>
                                    </ribbon:GalleryItemGroup>
                                    <ribbon:GalleryItemGroup Title="Four Columns">
                                        <ribbon:GalleryItemGroup.ItemKeys>
                                            <s:String>DashboardLayoutFourByTwo</s:String>
                                            <s:String>DashboardLayoutFourByThree</s:String>
                                        </ribbon:GalleryItemGroup.ItemKeys>
                                    </ribbon:GalleryItemGroup>
                                </ribbon:GalleryTool.Groups>
                                <ribbon:GalleryTool.ItemSettings>
                                    <ribbon:GalleryItemSettings GalleryItemPresenterStyle="{StaticResource layoutItemStyle}" SelectionDisplayMode="HighlightEntireItem" TextDisplayMode="Always" TextPlacement="RightOfImage"/>
                                </ribbon:GalleryTool.ItemSettings>
                                <ribbon:GalleryTool.Items>
                                    <ribbon:GalleryItem Key="DashboardLayoutTwoByTwo" Text=" Two Rows" />
                                    <ribbon:GalleryItem Key="DashboardLayoutTwoByThree" Text=" Three Rows" />
                                    <ribbon:GalleryItem Key="DashboardLayoutTwoByFour" Text=" Four Rows" />
                                    <ribbon:GalleryItem Key="DashboardLayoutTwoByFive" Text=" Five Rows" />
                                    <ribbon:GalleryItem Key="DashboardLayoutThreeByTwo" Text=" Two Rows" />
                                    <ribbon:GalleryItem Key="DashboardLayoutThreeByThree" Text=" Three Rows" />
                                    <ribbon:GalleryItem Key="DashboardLayoutThreeByFour" Text=" Four Rows" />
                                    <ribbon:GalleryItem Key="DashboardLayoutFourByTwo" Text=" Two Rows" />
                                    <ribbon:GalleryItem Key="DashboardLayoutFourByThree" Text=" Three Rows" />
                                </ribbon:GalleryTool.Items>
                            </ribbon:GalleryTool>
                        </ribbon:MenuTool>
                        <ribbon:ButtonTool Id="dashboardTabDesignerActionsGroup_dashboardGalleryButton" Caption="Select a Dashboard"  ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" Click="OnToolClick" />
                        <ribbon:ButtonTool Id="dashboardTabDesignerActionsGroup_saveDashboardButton" Caption="Save" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="dashboardTabDesignerActionsGroup_setMyDefaultDashboardButton" Caption="Use as My Default" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" Visibility="Collapsed" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="dashboardTabDesignerActionsGroup_setServerDefaultDashboardButton" Caption="Use for this Server" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" Visibility="Collapsed" ></ribbon:ButtonTool>
                        <ribbon:ButtonTool Id="dashboardTabDesignerActionsGroup_closeDesignerButton" Caption="Close Designer"  ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" ></ribbon:ButtonTool>
                    </ribbon:RibbonGroup>
                    <ribbon:RibbonGroup Caption="Show/Hide" Name="dashboardTabDesignerShowHideGroup" >
                        <ribbon:ToggleButtonTool Id="dashboardTabDesignerShowHideGroup_togglePanelGalleryButton" Caption="Panel Gallery" ribbon:RibbonGroup.MaximumSize="ImageAndTextLarge" ribbon:RibbonGroup.MinimumSize="ImageAndTextLarge" Click="OnToolClick" />
                    </ribbon:RibbonGroup>
                </p:ViewTabItem>
            </ribbon:XamRibbon.Tabs>
        </ribbon:XamRibbon>

        <DockPanel  Grid.Row="0" Grid.ColumnSpan="3" >

            <DockPanel x:Name="serverControls" DockPanel.Dock="Top"  Margin="0,9,0,0" LastChildFill="False">
                <StackPanel DockPanel.Dock="Left" Orientation="Vertical" HorizontalAlignment="Stretch">
                    <Grid Height="27" VerticalAlignment="Top" Margin="15,0,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Grid.Column="1" Margin="0,0,0,1">
                            <Image Grid.Column="0" Name="TitleImage" Width="16" Height="16" VerticalAlignment="Center" />
                            <ComboBox MinWidth="300" MaxWidth="400" BorderThickness="0, 0, 0, 1" BorderBrush="#006089" Foreground="#00a1dd" 
                                FontFamily="Arial" FontSize="11"
                                IsTextSearchEnabled="False" 
                                IsEditable="True" 
                                IsSynchronizedWithCurrentItem="False"  
                                Name="InstanceComboBox">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Name="comboBoxItem" MaxWidth="400" Text="{Binding InstanceName}" TextTrimming="CharacterEllipsis" MouseEnter="ComboBoxItem_OnMouseEnter" MouseLeave="ComboBoxItem_OnMouseLeave"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        <!--<TextBlock Style="{DynamicResource BreadcrumbStyle}" Margin="5,0,0,0" VerticalAlignment="Center" Text="" 
                           Visibility="{Binding Path=ChildBreadcrumbVisible, Converter={StaticResource VisibilityConverter}}"></TextBlock>
                            <TextBlock Style="{DynamicResource BreadcrumbStyle}" MouseUp="ParentBreadcrumbLabel_MouseUp" Margin="5,0,0,0"
                           VerticalAlignment="Center" Text="{Binding ParentBreadcrumb}"></TextBlock>
                            <TextBlock Style="{DynamicResource BreadcrumbStyle}" Margin="5,0,0,0" VerticalAlignment="Center" Text=">" 
                           Visibility="{Binding Path=ChildBreadcrumbVisible, Converter={StaticResource VisibilityConverter}}"></TextBlock>
                            <TextBlock Style="{DynamicResource BreadcrumbStyle}" Margin="5,0,0,0" VerticalAlignment="Center" 
                           Text="{Binding ChildBreadcrumb}"  
                           Visibility="{Binding Path=ChildBreadcrumbVisible, Converter={StaticResource VisibilityConverter}}"></TextBlock>
                        -->
                    </StackPanel>
                    <!-- hiding this textblock because we do not use it in new 10.6 design-->
                    <TextBlock TextAlignment="Right" VerticalAlignment="Center" FontFamily="Arial" FontWeight="Bold" Visibility="Collapsed"
                               Grid.Column="2" FontSize="15.75" Margin="0,0,7,0" Foreground="#FF4B4B4B" 
                               Name="historyTimestampLabel" TextTrimming="CharacterEllipsis">History Timestamp</TextBlock>

                        <Button Name="LaunchSWA" VerticalAlignment="Top" HorizontalAlignment="Right" Grid.Column="3" Style="{StaticResource buttonItemStyle}" Width="Auto" Height="25" Click="OnClickLaunchSWA" Visibility="Hidden" Grid.ColumnSpan="2">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="16" Height="16" Source="/SQLdmDesktopClient;component/Resources/16x16/SWA_Icon.png"></Image>
                                <TextBlock Foreground="White" FontSize="11" Text=" Launch SWA" Background="Transparent">
                                </TextBlock>
                            </StackPanel>
                        </Button>
                    </Grid>
                </StackPanel>
                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal"  VerticalAlignment="Center" Margin="0,0,15,0" 
                         Visibility="{Binding Path=QuickHistoricalSnapshotVisible, Converter={StaticResource VisibilityConverter}}">
                    <Button x:Name="showPreviousSnapshotButton"  Width="16" Height="16" BorderThickness="0" Margin="0,0,3,0" 
                             Style="{StaticResource QuickHistorySnapshotNavButtonStyle}"
                             Click="OnToolClick" IsEnabled="{Binding Path=HistoryBrowserEnablePrevious}">
                        <Button.Background>
                            <ImageBrush ImageSource="/SQLdmDesktopClient;component/Resources/back16x16.png"></ImageBrush>
                        </Button.Background>
                    </Button>

                    <ComboBox Name="QuickHistoricalSnapshotComboBox" 
                          BorderThickness="0, 0, 0, 1" BorderBrush="#979797" Foreground="#5f95c5" 
                          FontFamily="{StaticResource SourceSansPro}" FontSize="12"
                          IsEditable="True" IsReadOnly="True"
                          IsSynchronizedWithCurrentItem="False"
                          SelectionChanged="QuickHistoricalSnapshotCombobox_SelectionChanged"
                          Text="{Binding Path=QuickHistoricalSnapshotText}"
                          Style="{Binding Path=QuickHistoricalSnapshotText, Converter={StaticResource StyleConverterBold}}">
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="15">Show last 15 minutes of data</ComboBoxItem>
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="30">Show last 30 minutes of data</ComboBoxItem>
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="60">Show last hour of data</ComboBoxItem>
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="120">Show last 2 hours of data</ComboBoxItem>
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="240">Show last 4 hours of data</ComboBoxItem>
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="360">Show last 6 hours of data</ComboBoxItem>
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="480">Show last 8 hours of data</ComboBoxItem>
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="1440">Show last day of data</ComboBoxItem>
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="7200">Show last 5 days of data</ComboBoxItem>
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="-1">Enter a Custom Time Range</ComboBoxItem>
                        <ComboBoxItem FontSize="10" FontWeight="Normal" Tag="0">Real Time</ComboBoxItem>
                    </ComboBox>

                    <Button x:Name="showNextSnapshotButton"  Width="16" Height="16" BorderThickness="0" Margin="5,0,0,0"
                            Style="{StaticResource QuickHistorySnapshotNavButtonStyle}" 
                            Click="OnToolClick" IsEnabled="{Binding Path=HistoryBrowserEnableNext}">
                        <Button.Background>
                            <ImageBrush ImageSource="/SQLdmDesktopClient;component/Resources/forward16x16.png"></ImageBrush>
                        </Button.Background>
                    </Button>
                </StackPanel>
            </DockPanel>
            <ScrollViewer Style="{StaticResource TabScrollViewer}">
                <StackPanel x:Name="serverMenuControls"  Margin="0,9,0,0" DockPanel.Dock="Left" Orientation="Vertical" HorizontalAlignment="Stretch">
                    <Grid x:Name="overviewTabControlPanel"
                        Margin="15, 10, 0, 0" Visibility="Collapsed">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"></ColumnDefinition>
                            <ColumnDefinition MaxWidth="24"></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                    <TabControl Grid.Column="0" Name="overviewTabControl" SelectionChanged="OnToolClick">
                            <TabItem x:Name="overviewTabSummaryViewButton" Tag="overviewDashboard" Visibility="{Binding Path=VisibilityOverviewDashboard, Mode=TwoWay}">
                            <TabItem.Header>
                                Dashboard
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="overviewTabDetailsViewButton" Tag="overviewDetails" Visibility="{Binding Path=VisibilityOverviewDetails, Mode=TwoWay}">
                            <TabItem.Header>
                                Details
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="overviewTabConfigurationViewButton" Tag="overviewConfiguration" Visibility="{Binding Path=VisibilityOverviewConfiguration,Mode=TwoWay}">
                            <TabItem.Header>
                                Configuration
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="overviewTabAlertsViewButton" Tag="overviewActiveAlerts" Visibility="{Binding Path=VisibilityOverviewActiveAlerts, Mode=TwoWay}">
                            <TabItem.Header>
                                Active Alerts
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="overviewTabTimelineViewButton" Tag="overviewTimeline" Visibility="{Binding Path=VisibilityOverviewTimeline, Mode=TwoWay}">
                            <TabItem.Header>
                                Timeline
                            </TabItem.Header>
                        </TabItem>
                    </TabControl>
                </Grid>
                <Popup x:Name="overviewAddTabPopup"  StaysOpen="False"
                       IsOpen="{Binding ElementName=removeOverviewTabButton, Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=removeOverviewTabButton}" Placement="Right" 
                       VerticalOffset="18" HorizontalOffset="137" PopupAnimation="Slide" Margin="5,5,5,5" AllowsTransparency="True">
                        <Border BorderBrush="{DynamicResource RightFlyoutBorder}" BorderThickness="2">
                            <StackPanel Orientation="Vertical" Background="{DynamicResource BodyBackgroundColor}" HorizontalAlignment="Left">
                                <ToggleButton x:Name="addOverviewDashboardTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}" >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                           Visibility="{Binding Path=VisibilityOverviewDashboard, Mode=Default}"></Image>
                                        <TextBlock Text="Dashboard" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addOverviewDetailsTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                           Visibility="{Binding Path=VisibilityOverviewDetails, Mode=Default}"></Image>
                                        <TextBlock Text="Details" Tag="Details" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addOverviewConfigurationTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}"  Height="16" Width="16"
                                           Visibility="{Binding Path=VisibilityOverviewConfiguration, Mode=Default}"></Image>
                                        <TextBlock Text="Configuration" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addOverviewActiveAlertTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                           Visibility="{Binding Path=VisibilityOverviewActiveAlerts, Mode=Default}"></Image>
                                        <TextBlock Text="Active Alerts"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addOverviewTimelineTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                           Visibility="{Binding Path=VisibilityOverviewTimeline, Mode=Default}"></Image>
                                        <TextBlock Text="Timeline" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                            </StackPanel>
                        </Border>
                    </Popup>

                    <Grid x:Name="sessionsTabControlPanel"
                        Margin="15, 10, 0, 0" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition MaxWidth="24"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TabControl Grid.Column="0" Name="sessionsTabControl" SelectionChanged="OnToolClick">
                            <TabItem x:Name="sessionsTabSummaryViewButton" Tag="sessionsSummary" Visibility="{Binding Path=VisibilitySessionsSummary, Mode=TwoWay}">
                            <TabItem.Header>
                                Summary
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="sessionsTabDetailsViewButton" Tag="sessionsDetails"  Visibility="{Binding Path=VisibilitySessionsDetails, Mode=TwoWay}">
                            <TabItem.Header>
                                Details
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="sessionsTabLocksViewButton" Tag="sessionsLocks" Visibility="{Binding Path=VisibilitySessionsLocks,Mode=TwoWay}">
                            <TabItem.Header>
                                Locks
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="sessionsTabBlockingViewButton" Tag="sessionsBlocking" Visibility="{Binding Path=VisibilitySessionsBlocking,Mode=TwoWay}">
                            <TabItem.Header>
                                Blocking
                            </TabItem.Header>
                        </TabItem>
                    </TabControl>
                    <!--
                    <ToggleButton Grid.Column="1" x:Name="removeSessionsTabButton" Click="AddTabButton_Click"
                        Style="{StaticResource activeAddToggleButtonStyle}" IsEnabled="{Binding Path=CanAddSessionsTab, Mode=Default}">
                        <ToggleButton.Content>
                            <ContentControl>
                                <Image Source="{StaticResource add_iconDrawingImage}" >
                                    <Image.ToolTip>
                                        Add a tab
                                    </Image.ToolTip>
                                </Image>
                            </ContentControl>
                        </ToggleButton.Content>
                    </ToggleButton>
                    -->
                </Grid>
                <Popup x:Name="sessionsAddTabPopup" StaysOpen="False"
                       IsOpen="{Binding ElementName=removeSessionsTabButton, Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=removeSessionsTabButton}" Placement="Right" 
                       VerticalOffset="18" HorizontalOffset="137" PopupAnimation="Slide" Margin="5,5,5,5" AllowsTransparency="True">
                        <Border BorderBrush="#eeeff2" BorderThickness="2">
                            <StackPanel Orientation="Vertical" Background="White" HorizontalAlignment="Left">
                                <ToggleButton x:Name="addSessionsSummaryTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}" >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                           Visibility="{Binding Path=VisibilitySessionsSummary, Mode=Default}"></Image>
                                        <TextBlock Text="Summary" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addSessionsDetailsTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                           Visibility="{Binding Path=VisibilitySessionsDetails, Mode=Default}"></Image>
                                        <TextBlock Text="Details" Tag="SessionDetails" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addSessionsLocksTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}"  Height="16" Width="16"
                                           Visibility="{Binding Path=VisibilitySessionsLocks, Mode=Default}"></Image>
                                        <TextBlock Text="Locks" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addSessionsBlockingTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                           Visibility="{Binding Path=VisibilitySessionsBlocking, Mode=Default}"></Image>
                                        <TextBlock Text="Blocking"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                            </StackPanel>
                        </Border>
                    </Popup>

                    <Grid x:Name="queriesTabControlPanel"
                    Margin="15, 10, 0, 0" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition MaxWidth="24"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TabControl Grid.Column="0" Name="queriesTabControl" SelectionChanged="OnToolClick">
                            <TabItem x:Name="queriesTabSignatureModeViewButton" Tag="queriesSignatureMode" Visibility="{Binding Path=VisibilityQueriesSignatureMode, Mode=TwoWay}">
                            <TabItem.Header>
                                Signature Mode
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="queriesTabStatementModeViewButton" Tag="queriesStatementMode" Visibility="{Binding Path=VisibilityQueriesStatementMode, Mode=TwoWay}">
                            <TabItem.Header>
                                Statement Mode
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="queriesTabHistoryModeViewButton" Tag="queriesQueryHistory" Visibility="{Binding Path=VisibilityQueriesQueryHistory, Mode=TwoWay}">
                            <TabItem.Header>
                                Query History
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="queriesActiveWaitsConfigureButton" Tag="queriesQueryWaits" Visibility="{Binding Path=VisibilityQueriesQueryWaits, Mode=TwoWay}">
                            <TabItem.Header>
                                Query Waits
                            </TabItem.Header>
                        </TabItem>
                    </TabControl>
                    <!--
                    <ToggleButton Grid.Column="1" x:Name="removeQueriesTabButton"  Click="AddTabButton_Click"
                    Style="{StaticResource activeAddToggleButtonStyle}" IsEnabled="{Binding Path=CanAddQueriesTab, Mode=Default}">
                        <ToggleButton.Content>
                            <ContentControl>
                                <Image Source="{StaticResource add_iconDrawingImage}" ></Image>
                            </ContentControl>
                        </ToggleButton.Content>
                    </ToggleButton>
                    -->
                </Grid>
                <Popup x:Name="queriesAddTabPopup" StaysOpen="False"
                       IsOpen="{Binding ElementName=removeQueriesTabButton, Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=removeQueriesTabButton}" Placement="Right" 
                       VerticalOffset="18" HorizontalOffset="137" PopupAnimation="Slide" Margin="5,5,5,5" AllowsTransparency="True">
                        <Border BorderBrush="#eeeff2" BorderThickness="2">
                            <StackPanel Orientation="Vertical" Background="White" HorizontalAlignment="Left">
                                <ToggleButton x:Name="addQueriesSignatureModeTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}" >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityQueriesSignatureMode, Mode=Default}"></Image>
                                        <TextBlock Text="Signature Mode" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addQueriesStatementModeTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityQueriesStatementMode, Mode=Default}"></Image>
                                        <TextBlock Text="Statement Mode" Tag="SessionDetails" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addQueriesQueryHistoryTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}"  Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityQueriesQueryHistory, Mode=Default}"></Image>
                                        <TextBlock Text="Query History" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addQueriesQueryWaitTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityQueriesQueryWaits, Mode=Default}"></Image>
                                        <TextBlock Text="Query Waits"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                            </StackPanel>
                        </Border>
                    </Popup>

                    <Grid x:Name="resourcesTabControlPanel" 
                        Margin="15, 10, 0, 0" Visibility="Collapsed" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition MaxWidth="24"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TabControl Grid.Column="0" Name="resourcesTabControl" SelectionChanged="OnToolClick">
                        <TabItem  x:Name="resourcesTabSummaryViewButton" Tag="resourcesSummary" Visibility="{Binding Path=VisibilityResourcesSummary,Mode=TwoWay}">
                            <TabItem.Header>
                                Summary
                            </TabItem.Header>
                        </TabItem>
                            <TabItem  x:Name="resourcesTabCpuViewButton" Tag="resourcesCPU" Visibility="{Binding Path=VisibilityResourcesCPU,Mode=TwoWay}">
                            <TabItem.Header>
                                CPU
                            </TabItem.Header>
                        </TabItem>
                            <TabItem  x:Name="resourcesTabMemoryViewButton" Tag="resourcesMemory" Visibility="{Binding Path=VisibilityResourcesMemory,Mode=TwoWay}">
                            <TabItem.Header>
                                Memory
                            </TabItem.Header>
                        </TabItem>
                            <TabItem  x:Name="resourcesTabDiskViewButton" Tag="resourcesDisk" Visibility="{Binding Path=VisibilityResourcesDisk,Mode=TwoWay}">
                            <TabItem.Header>
                                Disk
                            </TabItem.Header>
                        </TabItem>
                            <TabItem  x:Name="resourcesTabDiskSizeViewButton" Tag="resourcesDiskSize" Visibility="{Binding Path=VisibilityResourcesDiskSize,Mode=TwoWay}">
                            <TabItem.Header>
                                Disk Size
                            </TabItem.Header>
                        </TabItem>
                            <TabItem  x:Name="resourcesTabFileActivityViewButton" Tag="resourcesFileActivity" Visibility="{Binding Path=VisibilityResourcesFileActivity,Mode=TwoWay}">
                            <TabItem.Header>
                                File Activity
                            </TabItem.Header>
                        </TabItem>
                            <TabItem  x:Name="resourcesTabProcedureCacheViewButton" Tag="resourcesProcedureCache" Visibility="{Binding Path=VisibilityResourcesProcedureCache,Mode=TwoWay}">
                            <TabItem.Header>
                                Procedure Cache
                            </TabItem.Header>
                        </TabItem>
                            <TabItem  x:Name="resourcesTabWaitStatsViewButton" Tag="resourcesServerWaits" Visibility="{Binding Path=VisibilityResourcesServerWaits,Mode=TwoWay}">
                            <TabItem.Header>
                                Server Waits
                            </TabItem.Header>
                        </TabItem>
                    </TabControl>
                    <!--
                    <ToggleButton Grid.Column="1" x:Name="removeResourcesTabButton" Click="AddTabButton_Click"
                    Style="{StaticResource activeAddToggleButtonStyle}" IsEnabled="{Binding Path=CanAddResourcesTab, Mode=Default}">
                        <ToggleButton.Content>
                            <ContentControl>
                                <Image Source="{StaticResource add_iconDrawingImage}" ></Image>
                            </ContentControl>
                        </ToggleButton.Content>
                    </ToggleButton>
                    -->
                </Grid>
                <Popup x:Name="resourcesAddTabPopup" StaysOpen="False"
                       IsOpen="{Binding ElementName=removeResourcesTabButton, Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=removeResourcesTabButton}" Placement="Right" 
                       VerticalOffset="18" HorizontalOffset="137" PopupAnimation="Slide" Margin="5,5,5,5" AllowsTransparency="True">
                        <Border BorderBrush="#eeeff2" BorderThickness="2">
                            <StackPanel Orientation="Vertical" Background="White" HorizontalAlignment="Left">
                                <ToggleButton x:Name="addResourcesSummaryTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}" >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityResourcesSummary, Mode=Default}"></Image>
                                        <TextBlock Text="Summary" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addResourcesCPUTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityResourcesCPU, Mode=Default}"></Image>
                                        <TextBlock Text="CPU" Tag="resourcesCPU" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addResourcesMemoryTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}"  Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityResourcesMemory, Mode=Default}"></Image>
                                        <TextBlock Text="Memory" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addResourcesDiskTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityResourcesDisk, Mode=Default}"></Image>
                                        <TextBlock Text="Disk"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addResourcesDiskSizeTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityResourcesDiskSize, Mode=Default}"></Image>
                                        <TextBlock Text="Disk Size"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addResourcesFileActivityTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityResourcesFileActivity, Mode=Default}"></Image>
                                        <TextBlock Text="File Activity"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addResourcesProcedureCacheTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityResourcesProcedureCache, Mode=Default}"></Image>
                                        <TextBlock Text="Procedure Cache"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addResourcesWaitStatsTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityResourcesWaitStats, Mode=Default}"></Image>
                                        <TextBlock Text="Server Waits"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                            </StackPanel>
                        </Border>
                    </Popup>
                    <Grid x:Name="databaseTabControlPanel"
                        Margin="15, 0, 0, 0" Visibility="Collapsed">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto"></ColumnDefinition>
                        <ColumnDefinition MaxWidth="24"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TabControl Grid.Column="0" Name="databaseTabControl" SelectionChanged="OnToolClick">
                            <TabItem x:Name="databasesTabSummaryViewButton" Tag="databasesSummary"  Visibility="{Binding Path=VisibilityDatabaseSummary,Mode=TwoWay}">
                            <TabItem.Header>
                                Summary
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="databasesTabAlwaysOnViewButton" Tag="databasesAvailabilityGroup"  Visibility="{Binding Path=VisibilityDatabaseAvailabilityGroup,Mode=TwoWay}">
                            <TabItem.Header>
                                Availability Group
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="databasesTabTempdbSummaryViewButton" Tag="databasesTempDBSummary" Visibility="{Binding Path=VisibilityDatabaseTempdbSummary,Mode=TwoWay}">
                            <TabItem.Header>
                                TempDB Summary
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="databasesTabConfigurationViewButton" Tag="databasesConfiguration"  Visibility="{Binding Path=VisibilityDatabaseConfiguration,Mode=TwoWay}">
                            <TabItem.Header>
                                Configuration
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="databasesTabFilesViewButton" Tag="databasesFiles" Visibility="{Binding Path=VisibilityDatabaseFiles,Mode=TwoWay}">
                            <TabItem.Header>
                                Files
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="databasesTabBackupRestoreHistoryViewButton" Tag="databasesBackupRestore" Visibility="{Binding Path=VisibilityDatabaseBackupRestore,Mode=TwoWay}">
                            <TabItem.Header>
                                Backup &amp; Restore
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="databasesTabTablesIndexesViewButton" Tag="databasesTablesIndexes" Visibility="{Binding Path=VisibilityDatabaseTablesIndexes,Mode=TwoWay}">
                            <TabItem.Header>
                                Tables &amp; Indexes
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="databasesTabMirroringViewButton" Tag="databasesMirroring" Visibility="{Binding Path=VisibilityDatabaseMirroring,Mode=TwoWay}">
                            <TabItem.Header>
                                Mirroring
                            </TabItem.Header>
                        </TabItem>
                    </TabControl>
                    <!--<ToggleButton Grid.Column="1" x:Name="removeDatabaseTabButton" Click="AddTabButton_Click"
                    Style="{StaticResource activeAddToggleButtonStyle}" IsEnabled="{Binding Path=CanAddDatabaseTab, Mode=Default}" >
                            <ToggleButton.Content>
                            <ContentControl>
                                <Image Source="{StaticResource add_iconDrawingImage}" ></Image>
                            </ContentControl>
                        </ToggleButton.Content>
                    </ToggleButton>
                    -->
                </Grid>
                  
                <Popup x:Name="databaseAddTabPopup" StaysOpen="False"
                       IsOpen="{Binding ElementName=removeDatabaseTabButton, Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=removeDatabaseTabButton}" Placement="Right" 
                       VerticalOffset="18" HorizontalOffset="137" PopupAnimation="Slide" Margin="5,5,5,5" AllowsTransparency="True">
                        <Border BorderBrush="#eeeff2" BorderThickness="2">
                            <StackPanel Orientation="Vertical" Background="White" HorizontalAlignment="Left">
                                <ToggleButton x:Name="addDatabasesSummaryTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}" >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityDatabaseSummary, Mode=Default}"></Image>
                                        <TextBlock Text="Summary" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addDatabasesAlwaysOnTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityDatabaseAvailabilityGroup}"></Image>
                                        <TextBlock Text="Availability Group" Tag="SessionDetails" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addDatabasesTempdbTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}"  Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityDatabaseTempdbSummary, Mode=Default}"></Image>
                                        <TextBlock Text="TempDB Summary" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addDatabasesConfigurationTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityDatabaseConfiguration, Mode=Default}"></Image>
                                        <TextBlock Text="Configuration"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addDatabasesFilesTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityDatabaseFiles, Mode=Default}"></Image>
                                        <TextBlock Text="Files"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addDatabasesBackupRestoreTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityDatabaseBackupRestore, Mode=Default}"></Image>
                                        <TextBlock Text="Backup &amp; Restore"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addDatabasesTablesIndexesTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityDatabaseTablesIndexes, Mode=Default}"></Image>
                                        <TextBlock Text="Tables &amp; Indexes"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addDatabasesMirroringTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityDatabaseMirroring, Mode=Default}"></Image>
                                        <TextBlock Text="Mirroring"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                            </StackPanel>
                        </Border>
                    </Popup>

                    <Grid x:Name="servicesTabControlPanel" 
                        Margin="15, 10, 0, 0" Visibility="Collapsed" >
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition MaxWidth="24"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <TabControl Grid.Column="0" Name="servicesTabControl" SelectionChanged="OnToolClick">
                            <TabItem x:Name="servicesTabSummaryViewButton" Tag="servicesSummary" Visibility="{Binding Path=VisibilityServicesSummary,Mode=TwoWay}">
                            <TabItem.Header>
                                Summary
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="servicesTabSqlAgentJobsViewButton" Tag="servicesSQLAgentJobs" Visibility="{Binding Path=VisibilityServicesSQLAgentJobs,Mode=TwoWay}">
                            <TabItem.Header>
                                SQL Agent Jobs
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="servicesTabFullTextSearchViewButton" Tag="servicesFullTextSearch" Visibility="{Binding Path=VisibilityServicesFullTextSearch,Mode=TwoWay}">
                            <TabItem.Header>
                                Full-Text Search
                            </TabItem.Header>
                        </TabItem>
                            <TabItem x:Name="servicesTabReplicationViewButton" Tag="servicesReplication" Visibility="{Binding Path=VisibilityServicesReplication,Mode=TwoWay}">
                            <TabItem.Header>
                                Replication
                            </TabItem.Header>
                        </TabItem>
                    </TabControl>
                    <!--
                    <ToggleButton Grid.Column="1" x:Name="removeServicesTabButton" Click="AddTabButton_Click"
                    Style="{StaticResource activeAddToggleButtonStyle}" IsEnabled="{Binding Path=CanAddServicesTab, Mode=Default}">
                        <ToggleButton.Content>
                            <ContentControl>
                                <Image Source="{StaticResource add_iconDrawingImage}" ></Image>
                            </ContentControl>
                        </ToggleButton.Content>
                    </ToggleButton>
                    -->
                </Grid>
                <Popup x:Name="servicesAddTabPopup" StaysOpen="False"
                       IsOpen="{Binding ElementName=removeServicesTabButton, Path=IsChecked}"
                       PlacementTarget="{Binding ElementName=removeServicesTabButton}" Placement="Right" 
                       VerticalOffset="18" HorizontalOffset="137" PopupAnimation="Slide" Margin="5,5,5,5" AllowsTransparency="True">
                        <Border BorderBrush="#eeeff2" BorderThickness="2">
                            <StackPanel Orientation="Vertical" Background="White" HorizontalAlignment="Left">
                                <ToggleButton x:Name="addServicesSummaryTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}" >
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityServicesSummary, Mode=Default}"></Image>
                                        <TextBlock Text="Summary" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addSqlAgentJobsTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityServicesSQLAgentJobs, Mode=Default}"></Image>
                                        <TextBlock Text="SQL Agent Jobs" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addServicesFullTextSearchTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}"  Height="16" Width="16"
                                               Visibility="{Binding Path=VisibilityServicesFullTextSearch, Mode=Default}"></Image>
                                        <TextBlock Text="Full Text Search" Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                                <ToggleButton x:Name="addServicesReplicationTab" Click="AddTab_Click" Style="{StaticResource activeAddToggleButtonMenuStyle}">
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{DynamicResource check_circle_iconDrawingImage}" Height="16" Width="16" 
                                               Visibility="{Binding Path=VisibilityServicesReplication, Mode=Default}"></Image>
                                        <TextBlock Text="Replication"  Style="{DynamicResource AddTabPopupText}"></TextBlock>
                                    </StackPanel>
                                </ToggleButton>
                            </StackPanel>
                        </Border>
                    </Popup>

                </StackPanel>
            </ScrollViewer>
    
            <TextBlock x:Name="CustomizeDashboardText" DockPanel.Dock="Top" Margin="10,10,23,10" Foreground="#006089" FontFamily="{StaticResource SourceSansPro}" 
                               Visibility="Collapsed" FontWeight="Bold" FontSize="18" VerticalAlignment="Center" >Customize Dashboard</TextBlock>

        </DockPanel>

        <GridSplitter Grid.Column="1" Grid.Row="1" Width="3" Name="historyBrowserSplitter" ResizeBehavior="PreviousAndNext" Visibility="{Binding Path=HistoryBrowserVisible, Converter={StaticResource VisibilityConverter}}" ShowsPreview="True" />

        <WindowsFormsHost Grid.Column="2" Grid.Row="1" Name="historyBrowserControlHost" 
                          Visibility="{Binding Path=HistoryBrowserVisible, Converter={StaticResource VisibilityConverter}}" 
                          IsVisibleChanged="historyBrowserControl_IsVisibleChanged">
            <b:HistoryBrowserControl x:Name="historyBrowserControl" CloseButtonClicked="historyBrowserControl_CloseButtonClicked"/>
        </WindowsFormsHost>
        <Border Name="ContentAreaBorder" Background="{DynamicResource ContentAreaBackground}" 
                Padding="10, 10, 10, 20" Grid.Row="1" Grid.Column="0">
            <Border.Resources>
                <c:BoolToVisibilityConverter x:Key="VisibilityConverter"/>
            </Border.Resources>
            <DockPanel>
                <DockPanel x:Name="customDashboardControls" DockPanel.Dock="Top" Visibility="Collapsed" Margin="0,0,0,10" VerticalAlignment="Center" LastChildFill="False">
                    <TextBlock DockPanel.Dock="Left" Margin="0,0,9,0" Foreground="#006089" FontFamily="{StaticResource SourceSansPro}" 
                               FontWeight="Bold" FontSize="14" VerticalAlignment="Center">Select Layout</TextBlock>
                    <Button Background="Transparent" x:Name="layoutButton" Width="16" Height="16" BorderBrush="Transparent" Margin="0,0,9,0" Tag="DashboardLayoutTwoByTwo" Click="LayoutButton_Click">
                        <Image Source="/SQLdmDesktopClient;component/Resources/Grid_2x2.png"></Image>
                    </Button>
                    <Button Background="Transparent" Width="16" Height="16" Margin="0,0,9,0" BorderBrush="Transparent" Tag="DashboardLayoutTwoByThree" Click="LayoutButton_Click">
                        <Image Source="/SQLdmDesktopClient;component/Resources/Grid_2x3.png"></Image>
                    </Button>
                    <Button Background="Transparent" Width="16" Height="16" Margin="0,0,9,0" BorderBrush="Transparent" Tag="DashboardLayoutTwoByFour" Click="LayoutButton_Click">
                        <Image Source="/SQLdmDesktopClient;component/Resources/Grid_2x4.png"></Image>
                    </Button>
                    <Button Background="Transparent" Width="16" Height="16" Margin="0,0,9,0" BorderBrush="Transparent" Tag="DashboardLayoutTwoByFive" Click="LayoutButton_Click">
                        <Image Source="/SQLdmDesktopClient;component/Resources/Grid_2x5.png"></Image>
                    </Button>
                    <Button Background="Transparent" Width="16" Height="16" Margin="0,0,9,0" BorderBrush="Transparent" Tag="DashboardLayoutThreeByTwo" Click="LayoutButton_Click">
                        <Image Source="/SQLdmDesktopClient;component/Resources/Grid_3x2.png"></Image>
                    </Button>
                    <Button Background="Transparent" Width="16" Height="16" Margin="0,0,9,0" BorderBrush="Transparent" Tag="DashboardLayoutThreeByThree" Click="LayoutButton_Click">
                        <Image Source="/SQLdmDesktopClient;component/Resources/Grid_3x3.png"></Image>
                    </Button>
                    <Button Background="Transparent" Width="16" Height="16" Margin="0,0,9,0" BorderBrush="Transparent" Tag="DashboardLayoutThreeByFour" Click="LayoutButton_Click">
                        <Image Source="/SQLdmDesktopClient;component/Resources/Grid_3x4.png"></Image>
                    </Button>
                    <Button Background="Transparent" Width="16" Height="16" Margin="0,0,9,0" BorderBrush="Transparent" Tag="DashboardLayoutFourByTwo" Click="LayoutButton_Click">
                        <Image Source="/SQLdmDesktopClient;component/Resources/Grid_4x2.png"></Image>
                    </Button>
                    <Button Background="Transparent" Width="16" Height="16" Margin="0,0,9,0" BorderBrush="Transparent" Tag="DashboardLayoutFourByThree" Click="LayoutButton_Click">
                        <Image Source="/SQLdmDesktopClient;component/Resources/Grid_4x3.png"></Image>
                    </Button>
                    <ToggleButton x:Name="dashboardGalleryButton" DockPanel.Dock="Left"
                                  Style="{StaticResource CustomizeDashboardToggleButtonStyle}" Click="OnToolClick"
                                  Margin="0,0,9,0">Select a Dashboard</ToggleButton>
                    <ToggleButton x:Name="togglePanelGalleryButton" DockPanel.Dock="Left"
                                  Style="{StaticResource CustomizeDashboardToggleButtonStyle}" Click="OnToolClick"
                                  Margin="0,0,9,0">View Panel Gallery</ToggleButton>

                    <ToggleButton DockPanel.Dock="Right" Click="customizeDashBoardSave_Click" Style="{StaticResource CustomizeDashboardToggleButtonStyle}"
                                  Margin="0,0,9,0" Height="24" FontStretch="SemiExpanded">Save</ToggleButton>
                    <ToggleButton DockPanel.Dock="Right" Click="customizeDashBoardCancel_Click" Style="{StaticResource CustomizeDashboardToggleButtonStyle}"
                                  Margin="0,0,9,0" Height="24">Cancel</ToggleButton>
                </DockPanel>

                <StackPanel DockPanel.Dock="Top" Margin="0,10,0,20" Orientation="Horizontal" FlowDirection="RightToLeft" Visibility="{Binding Path=ShowDashGalleryButtons, Converter={StaticResource VisibilityConverter}}">
                    <Button Click="DashGallerySelect_Click" Style="{DynamicResource TabActionButtonStyle}" Height="24" FontStretch="SemiExpanded">Save</Button>
                    <Button Click="DashGalleryClose_Click" Style="{DynamicResource TabActionButtonStyle}" Height="24">Cancel</Button>
                </StackPanel>

                <StackPanel DockPanel.Dock="Top">
                    <Grid x:Name="viewHistoryControls">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="1.5*"/>
                        </Grid.ColumnDefinitions>
                        <WrapPanel Grid.Column="0" MaxWidth="{Binding ActualWidth, ElementName=ContentAreaBorder, Mode=OneWay}" Orientation="Horizontal" DockPanel.Dock="Top" Visibility="Visible" Margin="0,0,0,10" VerticalAlignment="Center">
                            <StackPanel Visibility="Collapsed"  Orientation="Horizontal" Margin="0,10,0,10" >
                                <TextBlock 
                               Foreground="{DynamicResource SecondToolbarColor}"  FontSize="16" FontWeight="Bold" FontFamily="{StaticResource SourceSansPro}"
                               Margin="0,0,9,10" VerticalAlignment="Center">View History</TextBlock>
                        <DatePicker x:Name="startDate"  Margin="0,0,9,10"
                                BorderThickness="0,0,0,2" BorderBrush="#00a1dd" IsEnabled="{Binding ShowCustomControls}">
                            <DatePicker.Resources>
                                <Style TargetType="{x:Type DatePickerTextBox}">
                                    <Setter Property="Text" Value="{Binding Mode=TwoWay, Path=StartHistoryDate, StringFormat='{x:Static root:ApplicationModel.DateFormat}'}"></Setter>
                                    <Setter Property="BorderThickness" Value="0"></Setter>
                                    <Setter Property="Background" Value="#eeeff4"></Setter>
                                    <Setter Property="Foreground" Value="Red"/>
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="FontSize" Value="16"></Setter>
                                    <Setter Property="FontFamily" Value="{StaticResource SourceSansPro}"></Setter>
                                    <Setter Property="FontStretch" Value="Normal"></Setter>
                                    <Setter Property="FontStyle" Value="Normal"></Setter>
                                    <Setter Property="FontWeight" Value="Normal"></Setter>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                                                <Grid>
                                                    <Grid.Resources>
                                                        <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                                                    </Grid.Resources>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0"/>
                                                                <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ContentElement"/>
                                                                    <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="watermark_decorator"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="WatermarkStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Unwatermarked"/>
                                                            <VisualState x:Name="Watermarked">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Unfocused"/>
                                                            <VisualState x:Name="Focused">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">
                                                        <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                            <Border x:Name="ContentElement" BorderBrush="#FFFFFFFF" BorderThickness="1" Visibility="Hidden"/>
                                                            <Border x:Name="watermark_decorator" BorderBrush="#FFFFFFFF" BorderThickness="0" Visibility="Visible">
                                                                <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" Padding="2"/>
                                                            </Border>
                                                            <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                                        </Grid>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DatePicker.Resources>
                        </DatePicker>
                        <igEditors:XamDateTimeEditor x:Name="startTime" Mask="hh:mm tt"  Margin="0,0,9,10" Width="85"  
                                                 IsEnabled="{Binding ShowCustomControls}"
                                                 Background="#eeeff4" BorderThickness="0,0,0,2" BorderBrush="#00a1dd"
                                                 Foreground="#006089"  FontSize="16" FontFamily="{StaticResource SourceSansPro}">
                        </igEditors:XamDateTimeEditor>
                        <TextBlock  Foreground="#006089"  FontSize="16" FontFamily="{StaticResource SourceSansPro}"
                               Margin="0,0,9,10" VerticalAlignment="Center">To</TextBlock>
                        <DatePicker Name="endDate" Margin="0,0,9,10"  IsEnabled="{Binding ShowCustomControls}"
                                BorderThickness="0,0,0,2" BorderBrush="#00a1dd">
                            <DatePicker.Resources>
                                <Style TargetType="{x:Type DatePickerTextBox}">
                                    <Setter Property="Text" Value="{Binding Mode=TwoWay, Path=EndHistoryDate, StringFormat='{x:Static root:ApplicationModel.DateFormat}'}"></Setter>
                                    <Setter Property="BorderThickness" Value="0"></Setter>
                                    <Setter Property="Background" Value="#eeeff4"></Setter>
                                    <Setter Property="Foreground" Value="#006089"/>
                                    <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                    <Setter Property="FontSize" Value="16"></Setter>
                                    <Setter Property="FontFamily" Value="{StaticResource SourceSansPro}"></Setter>
                                    <Setter Property="FontStretch" Value="Normal"></Setter>
                                    <Setter Property="FontStyle" Value="Normal"></Setter>
                                    <Setter Property="FontWeight" Value="Normal"></Setter>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DatePickerTextBox}">
                                                <Grid>
                                                    <Grid.Resources>
                                                        <SolidColorBrush x:Key="WatermarkBrush" Color="#FFAAAAAA"/>
                                                    </Grid.Resources>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0"/>
                                                                <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="MouseOver">
                                                                <Storyboard>
                                                                    <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="ContentElement"/>
                                                                    <ColorAnimation Duration="0" To="#FF99C1E2" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" Storyboard.TargetName="watermark_decorator"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="WatermarkStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Unwatermarked"/>
                                                            <VisualState x:Name="Watermarked">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="ContentElement"/>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_Watermark"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                        <VisualStateGroup x:Name="FocusStates">
                                                            <VisualStateGroup.Transitions>
                                                                <VisualTransition GeneratedDuration="0"/>
                                                            </VisualStateGroup.Transitions>
                                                            <VisualState x:Name="Unfocused"/>
                                                            <VisualState x:Name="Focused">
                                                                <Storyboard>
                                                                    <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="FocusVisual"/>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="1" Opacity="1" Padding="{TemplateBinding Padding}">
                                                        <Grid x:Name="WatermarkContent" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                                            <Border x:Name="ContentElement" BorderBrush="#FFFFFFFF" BorderThickness="1" Visibility="Hidden"/>
                                                            <Border x:Name="watermark_decorator" BorderBrush="#FFFFFFFF" BorderThickness="0" Visibility="Visible">
                                                                <ContentControl x:Name="PART_Watermark" Focusable="False" IsHitTestVisible="False" Opacity="0" Padding="2"/>
                                                            </Border>
                                                            <ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            <Border x:Name="FocusVisual" BorderBrush="#FF45D6FA" CornerRadius="1" IsHitTestVisible="False" Opacity="0"/>
                                                        </Grid>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DatePicker.Resources>
                        </DatePicker>
                        <igEditors:XamDateTimeEditor x:Name="endTime" Mask="hh:mm tt" Margin="0,0,9,10" Width="85" IsEnabled="{Binding ShowCustomControls}"
                                                 Background="#eeeff4" BorderThickness="0,0,0,2" BorderBrush="#00a1dd"
                                                 Foreground="#006089"  FontSize="16" FontFamily="{StaticResource SourceSansPro}">
                        </igEditors:XamDateTimeEditor>
                        <ComboBox 
                                Margin="0,0,9,10" 
                                BorderThickness="0, 0, 0, 2" 
                                BorderBrush="Red" 
                                Foreground="#006089"
                                FontFamily="{StaticResource SourceSansPro}" 
                                FontSize="16"
                                IsTextSearchEnabled="False" 
                                IsEditable="False" 
                                IsSynchronizedWithCurrentItem="False"  
                                Width="100" 
                                Name="historySelectionCombobox" SelectionChanged="HistorySelectionCombobox_SelectionChanged">
                            <ComboBoxItem Name="LiveHistoryComboBoxItem"  Tag="0" IsSelected="True">Live</ComboBoxItem>
                            <ComboBoxItem Tag="40320">4 Weeks</ComboBoxItem>
                            <ComboBoxItem Tag="7200">5 Days</ComboBoxItem>
                            <ComboBoxItem Tag="1440">1 Day</ComboBoxItem>
                            <ComboBoxItem Tag="480">8 Hours</ComboBoxItem>
                            <ComboBoxItem Tag="240">4 Hours</ComboBoxItem>
                            <ComboBoxItem Tag="60">1 Hour</ComboBoxItem>
                            <ComboBoxItem Tag="30">30 Minutes</ComboBoxItem>
                            <ComboBoxItem Tag="15">15 Minutes</ComboBoxItem>
                            <ComboBoxItem Name="CustomHistoryComboBoxItem" Tag="-1">Custom</ComboBoxItem>
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Margin="0,10,0,0" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button  Click="OverviewMaintenanceMode_Click" Style="{DynamicResource TabActionButtonStyle}" 
                            Visibility="{Binding Path=ShowMaintenanceModeButton, Converter={StaticResource VisibilityConverter}}">Maintenance Mode</Button>
                            <Button  Click="OverviewBaselineVisualizer_Click" Style="{DynamicResource TabActionButtonStyle}" 
                            Visibility="{Binding Path=ShowBaselineVisualizerButton, Converter={StaticResource VisibilityConverter}}">Baseline Visualizer</Button>
                            <Button  Click="SessionsTraceSession_Click" Style="{DynamicResource TabActionButtonStyle}" 
                            Visibility="{Binding Path=ShowTraceSessionButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableTraceSessionButton}">Trace Session</Button>
                            <Button  Click="SessionsKillSession_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowKillSessionButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableKillSessionButton}">Kill Session</Button>
                            <Menu Style="{DynamicResource TabActionMenuStyle}" Visibility="{Binding Path=ShowBlockingTreeButton, Converter={StaticResource VisibilityConverter}}">
                                <MenuItem Style="{DynamicResource TabActionMenuItemStyle}">
                                    <MenuItem.Header>
                                        <StackPanel>
                                            <TextBlock Text="Blocking Tree" Margin="0,0,0,0" Cursor="Arrow" Style="{DynamicResource TabActionMenuTextStyle}"></TextBlock>

                                            <Image Margin="60,-10,0,0" Source="{StaticResource down_arrow_wht_icon_2DrawingImage}" Height="5" Width="10" VerticalAlignment="Center"></Image>

                                        </StackPanel>
                                    </MenuItem.Header>
                                    <MenuItem x:Name="showSessionsBlockingBySessionButton" Header="By Session" Click="OnToolClick" Style="{DynamicResource LeftFlyoutMenu}" IsCheckable="True" IsChecked="{Binding ShowBtBySession}">
                                    </MenuItem>
                                    <MenuItem x:Name="showSessionsBlockingByLockButton" Header="By Lock" Click="OnToolClick" Style="{DynamicResource LeftFlyoutMenu}" IsCheckable="True" IsChecked="{Binding ShowBtByLock}" >
                                    </MenuItem>
                                </MenuItem>
                            </Menu>
                            <Button  Click="QueriesConfigQueryMonitor_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowConfigureQueryMonitorButton, Converter={StaticResource VisibilityConverter}}">Configure Query Monitor</Button>
                            <Button  Click="ClearCache_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowClearCacheButton, Converter={StaticResource VisibilityConverter}}">Clear Cache</Button>
                            <Button  Click="UpdateStats_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowUpdateStatisticsButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableDatabaseStats}">Update Statistics</Button>
                            <Button  Click="RebuildIndices_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowRebuildIndexesButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableRebuildIndices}">Rebuild Indexes</Button>
                            <Button  Click="FailOver_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowFailOverButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableFailOver}">Fail Over</Button>
                            <Button  Click="SuspendResume_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowSuspendResumeButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableSuspendResume}">Suspend/Resume</Button>
                                <Button  Click="QueriesConfig_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowQueriesConfigureButton, Converter={StaticResource VisibilityConverter}}">Configure</Button>
                                <Button  Click="AnalyzeBlock_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowAnalyzeActionButtons, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableAnalyzeBlockButton}">Block</Button>
                                <Button  Click="AnalyzeExport_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowAnalyzeActionButtons, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableAnalyzeExportButton}">Export</Button>
                                <Button  Click="AnalyzeCopy_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowAnalyzeActionButtons, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableAnalyzeCopyButton}">Copy</Button>
                                <Button  Click="AnalyzeEmail_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowAnalyzeActionButtons, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableAnalyzeEmailButton}">Email</Button>
                            </StackPanel>
                            <StackPanel Margin="0,10,0,0" Orientation="Horizontal" HorizontalAlignment="Right">
                                <StackPanel.Resources>
                                    <CollectionViewSource Source="{Binding ShowHideItems}" x:Key="ShowHideItemsResource"/>
                                </StackPanel.Resources>
                                <Button  Click="Filter_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowFilterDialogButton, Converter={StaticResource VisibilityConverter}}">Filter</Button>
                            <Menu Style="{DynamicResource TabActionMenuStyle}"   Visibility="{Binding Path=ShowShowHideButton, Converter={StaticResource VisibilityConverter}}">
                                <MenuItem Style="{DynamicResource TabActionMenuItemStyle}">
                                    <MenuItem.Header>
                                            <StackPanel>
                                                <TextBlock Text="Show/Hide" Margin="0,0,0,0" Cursor="Arrow" Style="{DynamicResource TabActionMenuTextStyle}"></TextBlock>
                                                
                                                <Image Margin="50,-10,0,0" Source="{StaticResource down_arrow_wht_icon_2DrawingImage}" Height="5" Width="10" VerticalAlignment="Center"></Image>
                                               
                                            </StackPanel>
                                        
                                    </MenuItem.Header>
                                    
                                    <MenuItem.ItemsSource>
                                        <CompositeCollection>
                                            <CollectionContainer Collection="{Binding Source={StaticResource ShowHideItemsResource}}" />
                                        </CompositeCollection>
                                    </MenuItem.ItemsSource>
                                    <MenuItem.ItemContainerStyle>
                                        <Style>
                                            <Setter Property="MenuItem.Header" Value="{Binding Name}"/>
                                            <Setter Property="MenuItem.Background" Value="{DynamicResource RightFlyoutBackground}"></Setter>
                                            <Setter Property="MenuItem.Foreground" Value="{DynamicResource RightFlyoutForeground}"></Setter>
                                            <Setter Property="MenuItem.BorderThickness" Value="0"></Setter>
                                            <Setter Property="MenuItem.FontFamily" Value="{StaticResource SourceSansPro}"></Setter>
                                            <Setter Property="MenuItem.FontSize" Value="10px"></Setter>
                                            <Setter Property="MenuItem.Margin" Value="1,0,0,0"></Setter>
                                            <Setter Property="MenuItem.IsCheckable" Value="True"></Setter>
                                            <Setter Property="MenuItem.IsChecked" Value="{Binding Checked}"></Setter>
                                            <Setter Property="MenuItem.CommandParameter" Value="{Binding IsChecked,RelativeSource={RelativeSource Self}}"></Setter>
                                            <Setter Property="MenuItem.Command" Value="{Binding ShowHideCommand}"></Setter>
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                </MenuItem>
                            </Menu>
                            <Menu Style="{DynamicResource TabActionMenuStyle}"   Visibility="{Binding Path=ShowBasicFilterButton, Converter={StaticResource VisibilityConverter}}">
                                <MenuItem  Style="{DynamicResource TabActionMenuItemStyle}">
                                    <MenuItem.Header>
                                            <StackPanel>
                                                <TextBlock Text="Filter" Margin="0,0,0,0" Cursor="Arrow" Style="{DynamicResource TabActionMenuTextStyle}"></TextBlock>

                                                <Image Margin="26,-10,0,0" Source="{StaticResource down_arrow_wht_icon_2DrawingImage}" Height="5" Width="10" VerticalAlignment="Center"></Image>

                                            </StackPanel>
                                        </MenuItem.Header>
                                    <MenuItem Visibility="{Binding Path=ShowBasicFilter_OvDetailsButton, Converter={StaticResource VisibilityConverter}}"
                                      Header="Show All" Click="OvDetailsShowAll_Click" Style="{DynamicResource LeftFlyoutMenu}" IsCheckable="True" IsChecked="{Binding ShowOvDetailsShowAll}">
                                    </MenuItem>
                                    <MenuItem Visibility="{Binding Path=ShowBasicFilter_OvDetailsButton, Converter={StaticResource VisibilityConverter}}"
                                      Header="Custom Counter" Click="OvDetailsCustomCounter_Click" Style="{DynamicResource LeftFlyoutMenu}" IsCheckable="True" IsChecked="{Binding ShowOvDetailsCustomCounter}">
                                    </MenuItem>
                                    <MenuItem Visibility="{Binding Path=ShowBasicFilter_DbIndexButton, Converter={StaticResource VisibilityConverter}}"
                                      Header="User Databases Only" Click="DbUserDatabases_Click" Style="{DynamicResource LeftFlyoutMenu}" IsCheckable="True" IsChecked="{Binding ShowDbUserDatabases}">
                                    </MenuItem>
                                    <MenuItem Visibility="{Binding Path=ShowBasicFilter_DbIndexButton, Converter={StaticResource VisibilityConverter}}"
                                      Header="User Table Only" Click="DbUserTables_Click" Style="{DynamicResource LeftFlyoutMenu}" IsCheckable="True" IsChecked="{Binding ShowDbUserTables}">
                                    </MenuItem>
                                    <MenuItem Height="30" Name="OvTimelineFilter" Visibility="{Binding Path=ShowBasicFilter_OvTimelineButton, Converter={StaticResource VisibilityConverter}}" Style="{DynamicResource TabMenuItemStyle}">
                                        <MenuItem.Header>
                                            <Grid HorizontalAlignment="Stretch">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="40"></RowDefinition>
                                                    <RowDefinition Height="30"></RowDefinition>
                                                </Grid.RowDefinitions>
                                                <igEditors:XamComboEditor Grid.Row="0" SelectedIndex="0" Name="activityTimelineRange" VerticalAlignment="Center" HorizontalAlignment="Left" ValueChanged="ComboEditorTool_ValueChanged">
                                                    <igEditors:XamComboEditor.ItemsProvider>
                                                        <igEditors:ComboBoxItemsProvider>
                                                            <igEditors:ComboBoxItemsProvider.Items>
                                                                <igEditors:ComboBoxDataItem DisplayText="Today" Value="0"/>
                                                                <igEditors:ComboBoxDataItem DisplayText="Yesterday" Value="1"/>
                                                                <igEditors:ComboBoxDataItem DisplayText="Last 7 Days" Value="2"/>
                                                                <igEditors:ComboBoxDataItem DisplayText="Last 14 Days" Value="3"/>
                                                                <igEditors:ComboBoxDataItem DisplayText="Pick a Day" Value="4"/>
                                                            </igEditors:ComboBoxItemsProvider.Items>
                                                        </igEditors:ComboBoxItemsProvider>
                                                    </igEditors:XamComboEditor.ItemsProvider>
                                                </igEditors:XamComboEditor>
                                                <StackPanel Orientation="Horizontal" Grid.Row="1">
                                                    <Label Name="label1" Content="Day:" VerticalAlignment="Center" />
                                                    <igEditors:XamDateTimeEditor VerticalAlignment="Center" Name="activityTimelineStart" DisplayMode="IncludeLiteralsWithPadding" UseLayoutRounding="False" Mask="{}{date}" AutoFillDate="None" AlwaysValidate="True" SpinButtonDisplayMode="Never" ToolTip="Select a start date"  VerticalContentAlignment="Top" ValueChanged="activityTimelineStart_ValueChanged" InvalidValueBehavior="RevertValue">
                                                        <igEditors:XamDateTimeEditor.ValueConstraint>
                                                            <igEditors:ValueConstraint Nullable="False" ValidateAsType="DateTime" />
                                                        </igEditors:XamDateTimeEditor.ValueConstraint>
                                                    </igEditors:XamDateTimeEditor>
                                                </StackPanel>
                                            </Grid>
                                        </MenuItem.Header>
                                    </MenuItem>
                                </MenuItem>
                            </Menu>
                        </StackPanel>
                        <StackPanel Margin="0,10,0,0" Orientation="Horizontal" HorizontalAlignment="Right">
                            <Button  Click="Start_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowStartButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableStartButton}">Start</Button>
                                <Button  Click="Stop_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowStopButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableStopButton}">Stop</Button>
                                <Button  Click="StartService_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowStartServiceButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableStartServiceButton}">Start Service</Button>
                                <Button  Click="StopService_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowStopServiceButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableStopServiceButton}">Stop Service</Button>
                                <Button  Click="StartJob_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowStartJobButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableStartJobButton}">Start Job</Button>
                                <Button  Click="StopJob_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowStopJobButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableStopJobButton}">Stop Job</Button>
                                <Button  Click="Optimize_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowOptimizeButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableOptimizeButton}">Optimize</Button>
                                <Button  Click="Rebuild_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowRebuildButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableRebuildButton}">Rebuild</Button>
                                <Button  Click="Repopulate_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowRepopulateButton, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableRepopulateButton}">Repopulate</Button>
                                <Button  Click="CycleLogs_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowCycleLogsButton, Converter={StaticResource VisibilityConverter}}">Cycle Server Log</Button>
                                <Button  Click="LogsConfigure_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowLogsConfigureButton, Converter={StaticResource VisibilityConverter}}">Configure</Button>
                                <Button  Click="AnalyzeUndo_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowAnalyzeActionButtons, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableAnalyzeUndoButton}">Undo</Button>
                                <Button  Click="AnalyzeRun_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowAnalyzeActionButtons, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableAnalyzeRunButton}">Run</Button>
                                <Button  Click="AnalyzeShowProblem_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowAnalyzeActionButtons, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableAnalyzeShowProblemButton}">Show Problem</Button>
                                <Button  Click="AnalyzeUndoScript_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowAnalyzeActionButtons, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableAnalyzeUndoScriptButton}">Undo Script</Button>
                                <Button  Click="AnalyzeOptimizeScript_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowAnalyzeActionButtons, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableAnalyzeOptimizeScriptButton}">Optimize Script</Button>
                                <Button x:Name="refreshView"   Click="OnToolClick" 
                            IsEnabled="{Binding Path=IsRefreshOptionsEnabled}" 
                            Width="16" Height="16" BorderThickness="0" Margin="0, -8, 9, 0" Style="{StaticResource NavButtonButtonStyle}"
                            ToolTip="Refresh View">
                                <Button.Background>
                                    <ImageBrush ImageSource="/SQLdmDesktopClient;component/Resources/ToolbarRefresh.png"></ImageBrush>
                                </Button.Background>
                            </Button>
                            <ToggleButton x:Name="pauseAutoRefreshView"  Click="OnToolClick" 
                            IsEnabled="{Binding Path=IsRefreshOptionsEnabled}" 
                            IsChecked="{Binding Path=IsForegroundRefreshEnabled, Mode=TwoWay, NotifyOnTargetUpdated=True, Converter={StaticResource NotConverter}}" 
                            ToolTip="Pause Automatic View Refresh"
                            Width="16" Height="16" 
                            BorderThickness="0" Margin="0, -8, 10, 0" Style="{StaticResource activeAddToggleButtonStyle}">
                                <ToggleButton.Background>
                                    <ImageBrush ImageSource="/SQLdmDesktopClient;component/Resources/ToolbarPause.png"></ImageBrush>
                                </ToggleButton.Background>
                            </ToggleButton>
							<!--SQLDM-31035-->
                             <Button  Click="AnalyzeBack_Click" Style="{DynamicResource TabActionButtonStyle}"  
                            Visibility="{Binding Path=ShowAnalyzeActionButtons, Converter={StaticResource VisibilityConverter}}" IsEnabled="{Binding Path=EnableAnalyzeBackButton}">Back</Button>
                             <!--SQLDM-31035-->

         
                        </StackPanel>

                            
                        </WrapPanel>
                        <ToggleButton Grid.Column="1" x:Name="toggleCustomDashboard" Margin="0,-8,9,0" Height="24" Width="48" 
                                      IsChecked="False" Click="OnToolClick" Style="{StaticResource toggleCustomDashboardStyle}" 
                                      Visibility="{Binding Path=ShowCustomizeDashboardButton, Converter={StaticResource VisibilityConverter}}"
                                      HorizontalAlignment="Right">
                            <ToggleButton.Background>
                                <ImageBrush ImageSource="/SQLdmDesktopClient;component/Resources/Customize16x16.png"></ImageBrush>
                            </ToggleButton.Background>
                        </ToggleButton>

                        <ToggleButton Grid.Column="2" x:Name="toggleHistoryBrowserButton" Margin="0,-8,9,0" HorizontalAlignment="Right"
                              Click="OnToolClick" IsChecked="{Binding Path=HistoryBrowserVisible, Mode=TwoWay}"
                              Style="{StaticResource HistoryBrowserToggleButtonStyle}"
                              Visibility="{Binding Path=QuickHistoricalSnapshotVisible, Converter={StaticResource VisibilityConverter}}">History Browser</ToggleButton>

                    </Grid>
                </StackPanel>


                <root:ViewContainer x:Name="viewHost" DockPanel.Dock="Top" />
            </DockPanel>

        </Border>

    </Grid>
</UserControl>