//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3603
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 
namespace Idera.SQLdm.PrescriptiveAnalyzer.Common.ShowPlan
{
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", IsNullable=false)]
    public partial class ShowPlanXML {
        
        private StmtBlockType[][] batchSequenceField;
        
        private string versionField;
        
        private string buildField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Batch", IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Statements", IsNullable=false, NestingLevel=1)]
        public StmtBlockType[][] BatchSequence {
            get {
                return this.batchSequenceField;
            }
            set {
                this.batchSequenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Build {
            get {
                return this.buildField;
            }
            set {
                this.buildField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtBlockType {
        
        private BaseStmtInfoType[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("StmtCond", typeof(StmtCondType))]
        [System.Xml.Serialization.XmlElementAttribute("StmtCursor", typeof(StmtCursorType))]
        [System.Xml.Serialization.XmlElementAttribute("StmtReceive", typeof(StmtReceiveType))]
        [System.Xml.Serialization.XmlElementAttribute("StmtSimple", typeof(StmtSimpleType))]
        [System.Xml.Serialization.XmlElementAttribute("StmtUseDb", typeof(StmtUseDbType))]
        public BaseStmtInfoType[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtCondType : BaseStmtInfoType {
        
        private StmtCondTypeCondition conditionField;
        
        private StmtCondTypeThen thenField;
        
        private StmtCondTypeElse elseField;
        
        /// <remarks/>
        public StmtCondTypeCondition Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        public StmtCondTypeThen Then {
            get {
                return this.thenField;
            }
            set {
                this.thenField = value;
            }
        }
        
        /// <remarks/>
        public StmtCondTypeElse Else {
            get {
                return this.elseField;
            }
            set {
                this.elseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtCondTypeCondition {
        
        private QueryPlanType queryPlanField;
        
        private FunctionType[] uDFField;
        
        /// <remarks/>
        public QueryPlanType QueryPlan {
            get {
                return this.queryPlanField;
            }
            set {
                this.queryPlanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UDF")]
        public FunctionType[] UDF {
            get {
                return this.uDFField;
            }
            set {
                this.uDFField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class QueryPlanType {
        
        private InternalInfoType internalInfoField;
        
        private MissingIndexGroupType[] missingIndexesField;
        
        private RelOpType relOpField;
        
        private ColumnReferenceType[] parameterListField;
        
        private int degreeOfParallelismField;
        
        private bool degreeOfParallelismFieldSpecified;
        
        private ulong memoryGrantField;
        
        private bool memoryGrantFieldSpecified;
        
        private ulong cachedPlanSizeField;
        
        private bool cachedPlanSizeFieldSpecified;
        
        private bool usePlanField;
        
        private bool usePlanFieldSpecified;
        
        /// <remarks/>
        public InternalInfoType InternalInfo {
            get {
                return this.internalInfoField;
            }
            set {
                this.internalInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("MissingIndexGroup", IsNullable=false)]
        public MissingIndexGroupType[] MissingIndexes {
            get {
                return this.missingIndexesField;
            }
            set {
                this.missingIndexesField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] ParameterList {
            get {
                return this.parameterListField;
            }
            set {
                this.parameterListField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int DegreeOfParallelism {
            get {
                return this.degreeOfParallelismField;
            }
            set {
                this.degreeOfParallelismField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool DegreeOfParallelismSpecified {
            get {
                return this.degreeOfParallelismFieldSpecified;
            }
            set {
                this.degreeOfParallelismFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ulong MemoryGrant {
            get {
                return this.memoryGrantField;
            }
            set {
                this.memoryGrantField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool MemoryGrantSpecified {
            get {
                return this.memoryGrantFieldSpecified;
            }
            set {
                this.memoryGrantFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ulong CachedPlanSize {
            get {
                return this.cachedPlanSizeField;
            }
            set {
                this.cachedPlanSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CachedPlanSizeSpecified {
            get {
                return this.cachedPlanSizeFieldSpecified;
            }
            set {
                this.cachedPlanSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool UsePlan {
            get {
                return this.usePlanField;
            }
            set {
                this.usePlanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool UsePlanSpecified {
            get {
                return this.usePlanFieldSpecified;
            }
            set {
                this.usePlanFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class InternalInfoType {
        
        private System.Xml.XmlElement[] anyField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyElementAttribute()]
        public System.Xml.XmlElement[] Any {
            get {
                return this.anyField;
            }
            set {
                this.anyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CursorPlanType {
        
        private CursorPlanTypeOperation[] operationField;
        
        private string cursorNameField;
        
        private CursorType cursorActualTypeField;
        
        private bool cursorActualTypeFieldSpecified;
        
        private CursorType cursorRequestedTypeField;
        
        private bool cursorRequestedTypeFieldSpecified;
        
        private CursorPlanTypeCursorConcurrency cursorConcurrencyField;
        
        private bool cursorConcurrencyFieldSpecified;
        
        private bool forwardOnlyField;
        
        private bool forwardOnlyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Operation")]
        public CursorPlanTypeOperation[] Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string CursorName {
            get {
                return this.cursorNameField;
            }
            set {
                this.cursorNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CursorType CursorActualType {
            get {
                return this.cursorActualTypeField;
            }
            set {
                this.cursorActualTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CursorActualTypeSpecified {
            get {
                return this.cursorActualTypeFieldSpecified;
            }
            set {
                this.cursorActualTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CursorType CursorRequestedType {
            get {
                return this.cursorRequestedTypeField;
            }
            set {
                this.cursorRequestedTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CursorRequestedTypeSpecified {
            get {
                return this.cursorRequestedTypeFieldSpecified;
            }
            set {
                this.cursorRequestedTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CursorPlanTypeCursorConcurrency CursorConcurrency {
            get {
                return this.cursorConcurrencyField;
            }
            set {
                this.cursorConcurrencyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CursorConcurrencySpecified {
            get {
                return this.cursorConcurrencyFieldSpecified;
            }
            set {
                this.cursorConcurrencyFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ForwardOnly {
            get {
                return this.forwardOnlyField;
            }
            set {
                this.forwardOnlyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForwardOnlySpecified {
            get {
                return this.forwardOnlyFieldSpecified;
            }
            set {
                this.forwardOnlyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CursorPlanTypeOperation {
        
        private QueryPlanType queryPlanField;
        
        private FunctionType[] uDFField;
        
        private CursorPlanTypeOperationOperationType operationTypeField;
        
        /// <remarks/>
        public QueryPlanType QueryPlan {
            get {
                return this.queryPlanField;
            }
            set {
                this.queryPlanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UDF")]
        public FunctionType[] UDF {
            get {
                return this.uDFField;
            }
            set {
                this.uDFField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CursorPlanTypeOperationOperationType OperationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class FunctionType {
        
        private StmtBlockType statementsField;
        
        private string procNameField;
        
        /// <remarks/>
        public StmtBlockType Statements {
            get {
                return this.statementsField;
            }
            set {
                this.statementsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ProcName {
            get {
                return this.procNameField;
            }
            set {
                this.procNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CursorPlanTypeOperationOperationType {
        
        /// <remarks/>
        FetchQuery,
        
        /// <remarks/>
        PopulateQuery,
        
        /// <remarks/>
        RefreshQuery,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CursorType {
        
        /// <remarks/>
        Dynamic,
        
        /// <remarks/>
        FastForward,
        
        /// <remarks/>
        Keyset,
        
        /// <remarks/>
        SnapShot,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CursorPlanTypeCursorConcurrency {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Read Only")]
        ReadOnly,
        
        /// <remarks/>
        Pessimistic,
        
        /// <remarks/>
        Optimistic,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StarJoinInfoType {
        
        private bool rootField;
        
        private bool rootFieldSpecified;
        
        private StarJoinInfoTypeOperationType operationTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Root {
            get {
                return this.rootField;
            }
            set {
                this.rootField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RootSpecified {
            get {
                return this.rootFieldSpecified;
            }
            set {
                this.rootFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public StarJoinInfoTypeOperationType OperationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum StarJoinInfoTypeOperationType {
        
        /// <remarks/>
        Fetch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Intersection")]
        IndexIntersection,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Filter")]
        IndexFilter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Lookup")]
        IndexLookup,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScanRangeType {
        
        private ColumnReferenceType[] rangeColumnsField;
        
        private ScalarType[] rangeExpressionsField;
        
        private CompareOpType scanTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] RangeColumns {
            get {
                return this.rangeColumnsField;
            }
            set {
                this.rangeColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ScalarOperator", IsNullable=false)]
        public ScalarType[] RangeExpressions {
            get {
                return this.rangeExpressionsField;
            }
            set {
                this.rangeExpressionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CompareOpType ScanType {
            get {
                return this.scanTypeField;
            }
            set {
                this.scanTypeField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ColumnReferenceType {
        
        private ScalarType scalarOperatorField;
        
        private string serverField;
        
        private string databaseField;
        
        private string schemaField;
        
        private string tableField;
        
        private string aliasField;
        
        private string columnField;
        
        private bool computedColumnField;
        
        private bool computedColumnFieldSpecified;
        
        private string parameterCompiledValueField;
        
        private string parameterRuntimeValueField;
        
        /// <remarks/>
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema {
            get {
                return this.schemaField;
            }
            set {
                this.schemaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ComputedColumn {
            get {
                return this.computedColumnField;
            }
            set {
                this.computedColumnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ComputedColumnSpecified {
            get {
                return this.computedColumnFieldSpecified;
            }
            set {
                this.computedColumnFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ParameterCompiledValue {
            get {
                return this.parameterCompiledValueField;
            }
            set {
                this.parameterCompiledValueField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ParameterRuntimeValue {
            get {
                return this.parameterRuntimeValueField;
            }
            set {
                this.parameterRuntimeValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScalarType {
        
        private object itemField;
        
        private InternalInfoType internalInfoField;
        
        private string scalarStringField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Aggregate", typeof(AggregateType))]
        [System.Xml.Serialization.XmlElementAttribute("Arithmetic", typeof(ArithmeticType))]
        [System.Xml.Serialization.XmlElementAttribute("Assign", typeof(AssignType))]
        [System.Xml.Serialization.XmlElementAttribute("Compare", typeof(CompareType))]
        [System.Xml.Serialization.XmlElementAttribute("Const", typeof(ConstType))]
        [System.Xml.Serialization.XmlElementAttribute("Convert", typeof(ConvertType))]
        [System.Xml.Serialization.XmlElementAttribute("IF", typeof(ConditionalType))]
        [System.Xml.Serialization.XmlElementAttribute("Identifier", typeof(IdentType))]
        [System.Xml.Serialization.XmlElementAttribute("Intrinsic", typeof(IntrinsicType))]
        [System.Xml.Serialization.XmlElementAttribute("Logical", typeof(LogicalType))]
        [System.Xml.Serialization.XmlElementAttribute("MultipleAssign", typeof(MultAssignType))]
        [System.Xml.Serialization.XmlElementAttribute("ScalarExpressionList", typeof(ScalarExpressionListType))]
        [System.Xml.Serialization.XmlElementAttribute("Sequence", typeof(ScalarSequenceType))]
        [System.Xml.Serialization.XmlElementAttribute("Subquery", typeof(SubqueryType))]
        [System.Xml.Serialization.XmlElementAttribute("UDTMethod", typeof(UDTMethodType))]
        [System.Xml.Serialization.XmlElementAttribute("UserDefinedAggregate", typeof(UDAggregateType))]
        [System.Xml.Serialization.XmlElementAttribute("UserDefinedFunction", typeof(UDFType))]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        public InternalInfoType InternalInfo {
            get {
                return this.internalInfoField;
            }
            set {
                this.internalInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ScalarString {
            get {
                return this.scalarStringField;
            }
            set {
                this.scalarStringField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class AggregateType {
        
        private ScalarType[] scalarOperatorField;
        
        private string aggTypeField;
        
        private bool distinctField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string AggType {
            get {
                return this.aggTypeField;
            }
            set {
                this.aggTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Distinct {
            get {
                return this.distinctField;
            }
            set {
                this.distinctField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ArithmeticType {
        
        private ScalarType[] scalarOperatorField;
        
        private ArithmeticOperationType operationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ArithmeticOperationType Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum ArithmeticOperationType {
        
        /// <remarks/>
        ADD,
        
        /// <remarks/>
        BIT_ADD,
        
        /// <remarks/>
        BIT_AND,
        
        /// <remarks/>
        BIT_COMBINE,
        
        /// <remarks/>
        BIT_NOT,
        
        /// <remarks/>
        BIT_OR,
        
        /// <remarks/>
        BIT_XOR,
        
        /// <remarks/>
        DIV,
        
        /// <remarks/>
        HASH,
        
        /// <remarks/>
        MINUS,
        
        /// <remarks/>
        MOD,
        
        /// <remarks/>
        MULT,
        
        /// <remarks/>
        SUB,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class AssignType {
        
        private object itemField;
        
        private ScalarType scalarOperatorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference", typeof(ColumnReferenceType), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator", typeof(ScalarType), Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CompareType {
        
        private ScalarType[] scalarOperatorField;
        
        private CompareOpType compareOpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public CompareOpType CompareOp {
            get {
                return this.compareOpField;
            }
            set {
                this.compareOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum CompareOpType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("BINARY IS")]
        BINARYIS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("BOTH NULL")]
        BOTHNULL,
        
        /// <remarks/>
        EQ,
        
        /// <remarks/>
        GE,
        
        /// <remarks/>
        GT,
        
        /// <remarks/>
        IS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IS NOT")]
        ISNOT,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IS NOT NULL")]
        ISNOTNULL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IS NULL")]
        ISNULL,
        
        /// <remarks/>
        LE,
        
        /// <remarks/>
        LT,
        
        /// <remarks/>
        NE,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ONE NULL")]
        ONENULL,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ConstType {
        
        private string constValueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string ConstValue {
            get {
                return this.constValueField;
            }
            set {
                this.constValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ConvertType {
        
        private ScalarExpressionType styleField;
        
        private ScalarType scalarOperatorField;
        
        private string dataTypeField;
        
        private int lengthField;
        
        private bool lengthFieldSpecified;
        
        private int precisionField;
        
        private bool precisionFieldSpecified;
        
        private int scaleField;
        
        private bool scaleFieldSpecified;
        
        private int style1Field;
        
        private bool implicitField;
        
        /// <remarks/>
        public ScalarExpressionType Style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
            }
        }
        
        /// <remarks/>
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LengthSpecified {
            get {
                return this.lengthFieldSpecified;
            }
            set {
                this.lengthFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Precision {
            get {
                return this.precisionField;
            }
            set {
                this.precisionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrecisionSpecified {
            get {
                return this.precisionFieldSpecified;
            }
            set {
                this.precisionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Scale {
            get {
                return this.scaleField;
            }
            set {
                this.scaleField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScaleSpecified {
            get {
                return this.scaleFieldSpecified;
            }
            set {
                this.scaleFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("Style")]
        public int Style1 {
            get {
                return this.style1Field;
            }
            set {
                this.style1Field = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Implicit {
            get {
                return this.implicitField;
            }
            set {
                this.implicitField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScalarExpressionType {
        
        private ScalarType scalarOperatorField;
        
        /// <remarks/>
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ConditionalType {
        
        private ScalarExpressionType conditionField;
        
        private ScalarExpressionType thenField;
        
        private ScalarExpressionType elseField;
        
        /// <remarks/>
        public ScalarExpressionType Condition {
            get {
                return this.conditionField;
            }
            set {
                this.conditionField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType Then {
            get {
                return this.thenField;
            }
            set {
                this.thenField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType Else {
            get {
                return this.elseField;
            }
            set {
                this.elseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class IdentType {
        
        private ColumnReferenceType columnReferenceField;
        
        private string tableField;
        
        /// <remarks/>
        public ColumnReferenceType ColumnReference {
            get {
                return this.columnReferenceField;
            }
            set {
                this.columnReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class IntrinsicType {
        
        private ScalarType[] scalarOperatorField;
        
        private string functionNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FunctionName {
            get {
                return this.functionNameField;
            }
            set {
                this.functionNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class LogicalType {
        
        private ScalarType[] scalarOperatorField;
        
        private LogicalOperationType operationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LogicalOperationType Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum LogicalOperationType {
        
        /// <remarks/>
        AND,
        
        /// <remarks/>
        IMPLIES,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IS NOT NULL")]
        ISNOTNULL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("IS NULL")]
        ISNULL,
        
        /// <remarks/>
        IS,
        
        /// <remarks/>
        IsFalseOrNull,
        
        /// <remarks/>
        NOT,
        
        /// <remarks/>
        OR,
        
        /// <remarks/>
        XOR,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MultAssignType {
        
        private AssignType[] assignField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Assign")]
        public AssignType[] Assign {
            get {
                return this.assignField;
            }
            set {
                this.assignField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScalarExpressionListType {
        
        private ScalarType[] scalarOperatorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScalarSequenceType {
        
        private string functionNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FunctionName {
            get {
                return this.functionNameField;
            }
            set {
                this.functionNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SubqueryType {
        
        private ScalarType scalarOperatorField;
        
        private RelOpType relOpField;
        
        private SubqueryOperationType operationField;
        
        /// <remarks/>
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public SubqueryOperationType Operation {
            get {
                return this.operationField;
            }
            set {
                this.operationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RelOpType {
        
        private ColumnReferenceType[] outputListField;
        
        private WarningsType warningsField;
        
        private MemoryFractionsType memoryFractionsField;
        
        private RunTimeInformationTypeRunTimeCountersPerThread[] runTimeInformationField;
        
        private InternalInfoType internalInfoField;
        
        private RelOpBaseType itemField;
        
        private ItemChoiceType itemElementNameField;
        
        private double avgRowSizeField;
        
        private double estimateCPUField;
        
        private double estimateIOField;
        
        private double estimateRebindsField;
        
        private double estimateRewindsField;
        
        private double estimateRowsField;
        
        private LogicalOpType logicalOpField;
        
        private int nodeIdField;
        
        private bool parallelField;
        
        private PhysicalOpType physicalOpField;
        
        private double estimatedTotalSubtreeCostField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] OutputList {
            get {
                return this.outputListField;
            }
            set {
                this.outputListField = value;
            }
        }
        
        /// <remarks/>
        public WarningsType Warnings {
            get {
                return this.warningsField;
            }
            set {
                this.warningsField = value;
            }
        }
        
        /// <remarks/>
        public MemoryFractionsType MemoryFractions {
            get {
                return this.memoryFractionsField;
            }
            set {
                this.memoryFractionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("RunTimeCountersPerThread", IsNullable=false)]
        public RunTimeInformationTypeRunTimeCountersPerThread[] RunTimeInformation {
            get {
                return this.runTimeInformationField;
            }
            set {
                this.runTimeInformationField = value;
            }
        }
        
        /// <remarks/>
        public InternalInfoType InternalInfo {
            get {
                return this.internalInfoField;
            }
            set {
                this.internalInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Assert", typeof(FilterType))]
        [System.Xml.Serialization.XmlElementAttribute("Bitmap", typeof(BitmapType))]
        [System.Xml.Serialization.XmlElementAttribute("Collapse", typeof(CollapseType))]
        [System.Xml.Serialization.XmlElementAttribute("ComputeScalar", typeof(ComputeScalarType))]
        [System.Xml.Serialization.XmlElementAttribute("Concat", typeof(ConcatType))]
        [System.Xml.Serialization.XmlElementAttribute("ConstantScan", typeof(ConstantScanType))]
        [System.Xml.Serialization.XmlElementAttribute("CreateIndex", typeof(CreateIndexType))]
        [System.Xml.Serialization.XmlElementAttribute("DeletedScan", typeof(RowsetType))]
        [System.Xml.Serialization.XmlElementAttribute("Extension", typeof(UDXType))]
        [System.Xml.Serialization.XmlElementAttribute("Filter", typeof(FilterType))]
        [System.Xml.Serialization.XmlElementAttribute("Generic", typeof(GenericType))]
        [System.Xml.Serialization.XmlElementAttribute("Hash", typeof(HashType))]
        [System.Xml.Serialization.XmlElementAttribute("IndexScan", typeof(IndexScanType))]
        [System.Xml.Serialization.XmlElementAttribute("InsertedScan", typeof(RowsetType))]
        [System.Xml.Serialization.XmlElementAttribute("LogRowScan", typeof(RelOpBaseType))]
        [System.Xml.Serialization.XmlElementAttribute("Merge", typeof(MergeType))]
        [System.Xml.Serialization.XmlElementAttribute("MergeInterval", typeof(SimpleIteratorOneChildType))]
        [System.Xml.Serialization.XmlElementAttribute("NestedLoops", typeof(NestedLoopsType))]
        [System.Xml.Serialization.XmlElementAttribute("OnlineIndex", typeof(CreateIndexType))]
        [System.Xml.Serialization.XmlElementAttribute("Parallelism", typeof(ParallelismType))]
        [System.Xml.Serialization.XmlElementAttribute("ParameterTableScan", typeof(RelOpBaseType))]
        [System.Xml.Serialization.XmlElementAttribute("PrintDataflow", typeof(RelOpBaseType))]
        [System.Xml.Serialization.XmlElementAttribute("RemoteFetch", typeof(RemoteFetchType))]
        [System.Xml.Serialization.XmlElementAttribute("RemoteModify", typeof(RemoteModifyType))]
        [System.Xml.Serialization.XmlElementAttribute("RemoteQuery", typeof(RemoteQueryType))]
        [System.Xml.Serialization.XmlElementAttribute("RemoteRange", typeof(RemoteType))]
        [System.Xml.Serialization.XmlElementAttribute("RemoteScan", typeof(RemoteType))]
        [System.Xml.Serialization.XmlElementAttribute("RowCountSpool", typeof(SpoolType))]
        [System.Xml.Serialization.XmlElementAttribute("ScalarInsert", typeof(ScalarInsertType))]
        [System.Xml.Serialization.XmlElementAttribute("Segment", typeof(SegmentType))]
        [System.Xml.Serialization.XmlElementAttribute("Sequence", typeof(SequenceType))]
        [System.Xml.Serialization.XmlElementAttribute("SequenceProject", typeof(ComputeScalarType))]
        [System.Xml.Serialization.XmlElementAttribute("SimpleUpdate", typeof(SimpleUpdateType))]
        [System.Xml.Serialization.XmlElementAttribute("Sort", typeof(SortType))]
        [System.Xml.Serialization.XmlElementAttribute("Split", typeof(SplitType))]
        [System.Xml.Serialization.XmlElementAttribute("Spool", typeof(SpoolType))]
        [System.Xml.Serialization.XmlElementAttribute("StreamAggregate", typeof(StreamAggregateType))]
        [System.Xml.Serialization.XmlElementAttribute("Switch", typeof(ConcatType))]
        [System.Xml.Serialization.XmlElementAttribute("TableScan", typeof(TableScanType))]
        [System.Xml.Serialization.XmlElementAttribute("TableValuedFunction", typeof(TableValuedFunctionType))]
        [System.Xml.Serialization.XmlElementAttribute("Top", typeof(TopType))]
        [System.Xml.Serialization.XmlElementAttribute("TopSort", typeof(TopSortType))]
        [System.Xml.Serialization.XmlElementAttribute("Update", typeof(UpdateType))]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public RelOpBaseType Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double AvgRowSize {
            get {
                return this.avgRowSizeField;
            }
            set {
                this.avgRowSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double EstimateCPU {
            get {
                return this.estimateCPUField;
            }
            set {
                this.estimateCPUField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double EstimateIO {
            get {
                return this.estimateIOField;
            }
            set {
                this.estimateIOField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double EstimateRebinds {
            get {
                return this.estimateRebindsField;
            }
            set {
                this.estimateRebindsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double EstimateRewinds {
            get {
                return this.estimateRewindsField;
            }
            set {
                this.estimateRewindsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double EstimateRows {
            get {
                return this.estimateRowsField;
            }
            set {
                this.estimateRowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public LogicalOpType LogicalOp {
            get {
                return this.logicalOpField;
            }
            set {
                this.logicalOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int NodeId {
            get {
                return this.nodeIdField;
            }
            set {
                this.nodeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Parallel {
            get {
                return this.parallelField;
            }
            set {
                this.parallelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PhysicalOpType PhysicalOp {
            get {
                return this.physicalOpField;
            }
            set {
                this.physicalOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double EstimatedTotalSubtreeCost {
            get {
                return this.estimatedTotalSubtreeCostField;
            }
            set {
                this.estimatedTotalSubtreeCostField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class WarningsType {
        
        private ColumnReferenceType[] columnsWithNoStatisticsField;
        
        private bool noJoinPredicateField;
        
        private bool noJoinPredicateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] ColumnsWithNoStatistics {
            get {
                return this.columnsWithNoStatisticsField;
            }
            set {
                this.columnsWithNoStatisticsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool NoJoinPredicate {
            get {
                return this.noJoinPredicateField;
            }
            set {
                this.noJoinPredicateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoJoinPredicateSpecified {
            get {
                return this.noJoinPredicateFieldSpecified;
            }
            set {
                this.noJoinPredicateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MemoryFractionsType {
        
        private double inputField;
        
        private double outputField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Input {
            get {
                return this.inputField;
            }
            set {
                this.inputField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Output {
            get {
                return this.outputField;
            }
            set {
                this.outputField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RunTimeInformationTypeRunTimeCountersPerThread {
        
        private int threadField;
        
        private ulong actualRebindsField;
        
        private bool actualRebindsFieldSpecified;
        
        private ulong actualRewindsField;
        
        private bool actualRewindsFieldSpecified;
        
        private ulong actualRowsField;
        
        private ulong actualEndOfScansField;
        
        private ulong actualExecutionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Thread {
            get {
                return this.threadField;
            }
            set {
                this.threadField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ulong ActualRebinds {
            get {
                return this.actualRebindsField;
            }
            set {
                this.actualRebindsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualRebindsSpecified {
            get {
                return this.actualRebindsFieldSpecified;
            }
            set {
                this.actualRebindsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ulong ActualRewinds {
            get {
                return this.actualRewindsField;
            }
            set {
                this.actualRewindsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ActualRewindsSpecified {
            get {
                return this.actualRewindsFieldSpecified;
            }
            set {
                this.actualRewindsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ulong ActualRows {
            get {
                return this.actualRowsField;
            }
            set {
                this.actualRowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ulong ActualEndOfScans {
            get {
                return this.actualEndOfScansField;
            }
            set {
                this.actualEndOfScansField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ulong ActualExecutions {
            get {
                return this.actualExecutionsField;
            }
            set {
                this.actualExecutionsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class FilterType : RelOpBaseType {
        
        private RelOpType relOpField;
        
        private ScalarExpressionType predicateField;
        
        private bool startupExpressionField;
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool StartupExpression {
            get {
                return this.startupExpressionField;
            }
            set {
                this.startupExpressionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(GenericType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteQueryType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteModifyType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteFetchType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SpoolType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UDXType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TopType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SplitType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SequenceType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SegmentType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(NestedLoopsType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(MergeType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConcatType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CollapseType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(BitmapType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SortType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TopSortType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StreamAggregateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ParallelismType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ComputeScalarType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(HashType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TableValuedFunctionType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RowsetType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScalarInsertType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateIndexType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleUpdateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IndexScanType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TableScanType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ConstantScanType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(FilterType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleIteratorOneChildType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RelOpBaseType {
        
        private DefinedValuesListTypeDefinedValue[] definedValuesField;
        
        private InternalInfoType internalInfoField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("DefinedValue", IsNullable=false)]
        public DefinedValuesListTypeDefinedValue[] DefinedValues {
            get {
                return this.definedValuesField;
            }
            set {
                this.definedValuesField = value;
            }
        }
        
        /// <remarks/>
        public InternalInfoType InternalInfo {
            get {
                return this.internalInfoField;
            }
            set {
                this.internalInfoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class DefinedValuesListTypeDefinedValue {
        
        private object itemField;
        
        private object[] itemsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference", typeof(ColumnReferenceType), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("ValueVector", typeof(DefinedValuesListTypeDefinedValueValueVector), Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference", typeof(ColumnReferenceType), Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator", typeof(ScalarType), Order=1)]
        public object[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class DefinedValuesListTypeDefinedValueValueVector {
        
        private ColumnReferenceType[] columnReferenceField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnReference")]
        public ColumnReferenceType[] ColumnReference {
            get {
                return this.columnReferenceField;
            }
            set {
                this.columnReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class GenericType : RelOpBaseType {
        
        private RelOpType[] relOpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteQueryType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteModifyType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(RemoteFetchType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RemoteType : RelOpBaseType {
        
        private string remoteSourceField;
        
        private string remoteObjectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RemoteSource {
            get {
                return this.remoteSourceField;
            }
            set {
                this.remoteSourceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RemoteObject {
            get {
                return this.remoteObjectField;
            }
            set {
                this.remoteObjectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RemoteQueryType : RemoteType {
        
        private string remoteQueryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string RemoteQuery {
            get {
                return this.remoteQueryField;
            }
            set {
                this.remoteQueryField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RemoteModifyType : RemoteType {
        
        private ScalarExpressionType setPredicateField;
        
        private RelOpType relOpField;
        
        /// <remarks/>
        public ScalarExpressionType SetPredicate {
            get {
                return this.setPredicateField;
            }
            set {
                this.setPredicateField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RemoteFetchType : RemoteType {
        
        private RelOpType relOpField;
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SpoolType : RelOpBaseType {
        
        private SeekPredicateType seekPredicateField;
        
        private RelOpType relOpField;
        
        private bool stackField;
        
        private bool stackFieldSpecified;
        
        private int primaryNodeIdField;
        
        private bool primaryNodeIdFieldSpecified;
        
        /// <remarks/>
        public SeekPredicateType SeekPredicate {
            get {
                return this.seekPredicateField;
            }
            set {
                this.seekPredicateField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Stack {
            get {
                return this.stackField;
            }
            set {
                this.stackField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StackSpecified {
            get {
                return this.stackFieldSpecified;
            }
            set {
                this.stackFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int PrimaryNodeId {
            get {
                return this.primaryNodeIdField;
            }
            set {
                this.primaryNodeIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PrimaryNodeIdSpecified {
            get {
                return this.primaryNodeIdFieldSpecified;
            }
            set {
                this.primaryNodeIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SeekPredicateType {
        
        private ScanRangeType prefixField;
        
        private ScanRangeType startRangeField;
        
        private ScanRangeType endRangeField;
        
        private SingleColumnReferenceType isNotNullField;
        
        /// <remarks/>
        public ScanRangeType Prefix {
            get {
                return this.prefixField;
            }
            set {
                this.prefixField = value;
            }
        }
        
        /// <remarks/>
        public ScanRangeType StartRange {
            get {
                return this.startRangeField;
            }
            set {
                this.startRangeField = value;
            }
        }
        
        /// <remarks/>
        public ScanRangeType EndRange {
            get {
                return this.endRangeField;
            }
            set {
                this.endRangeField = value;
            }
        }
        
        /// <remarks/>
        public SingleColumnReferenceType IsNotNull {
            get {
                return this.isNotNullField;
            }
            set {
                this.isNotNullField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SingleColumnReferenceType {
        
        private ColumnReferenceType columnReferenceField;
        
        /// <remarks/>
        public ColumnReferenceType ColumnReference {
            get {
                return this.columnReferenceField;
            }
            set {
                this.columnReferenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UDXType : RelOpBaseType {
        
        private ColumnReferenceType[] usedUDXColumnsField;
        
        private RelOpType relOpField;
        
        private string uDXNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] UsedUDXColumns {
            get {
                return this.usedUDXColumnsField;
            }
            set {
                this.usedUDXColumnsField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string UDXName {
            get {
                return this.uDXNameField;
            }
            set {
                this.uDXNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class TopType : RelOpBaseType {
        
        private ColumnReferenceType[] tieColumnsField;
        
        private ScalarExpressionType topExpressionField;
        
        private RelOpType relOpField;
        
        private bool rowCountField;
        
        private bool rowCountFieldSpecified;
        
        private int rowsField;
        
        private bool rowsFieldSpecified;
        
        private bool isPercentField;
        
        private bool isPercentFieldSpecified;
        
        private bool withTiesField;
        
        private bool withTiesFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] TieColumns {
            get {
                return this.tieColumnsField;
            }
            set {
                this.tieColumnsField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType TopExpression {
            get {
                return this.topExpressionField;
            }
            set {
                this.topExpressionField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool RowCount {
            get {
                return this.rowCountField;
            }
            set {
                this.rowCountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowCountSpecified {
            get {
                return this.rowCountFieldSpecified;
            }
            set {
                this.rowCountFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Rows {
            get {
                return this.rowsField;
            }
            set {
                this.rowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool RowsSpecified {
            get {
                return this.rowsFieldSpecified;
            }
            set {
                this.rowsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsPercent {
            get {
                return this.isPercentField;
            }
            set {
                this.isPercentField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsPercentSpecified {
            get {
                return this.isPercentFieldSpecified;
            }
            set {
                this.isPercentFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool WithTies {
            get {
                return this.withTiesField;
            }
            set {
                this.withTiesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithTiesSpecified {
            get {
                return this.withTiesFieldSpecified;
            }
            set {
                this.withTiesFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SplitType : RelOpBaseType {
        
        private SingleColumnReferenceType actionColumnField;
        
        private RelOpType relOpField;
        
        /// <remarks/>
        public SingleColumnReferenceType ActionColumn {
            get {
                return this.actionColumnField;
            }
            set {
                this.actionColumnField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SequenceType : RelOpBaseType {
        
        private RelOpType[] relOpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SegmentType : RelOpBaseType {
        
        private ColumnReferenceType[] groupByField;
        
        private SingleColumnReferenceType segmentColumnField;
        
        private RelOpType relOpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] GroupBy {
            get {
                return this.groupByField;
            }
            set {
                this.groupByField = value;
            }
        }
        
        /// <remarks/>
        public SingleColumnReferenceType SegmentColumn {
            get {
                return this.segmentColumnField;
            }
            set {
                this.segmentColumnField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class NestedLoopsType : RelOpBaseType {
        
        private ScalarExpressionType predicateField;
        
        private ScalarExpressionType passThruField;
        
        private ColumnReferenceType[] outerReferencesField;
        
        private SingleColumnReferenceType partitionIdField;
        
        private SingleColumnReferenceType probeColumnField;
        
        private StarJoinInfoType starJoinInfoField;
        
        private RelOpType[] relOpField;
        
        private bool optimizedField;
        
        private bool withOrderedPrefetchField;
        
        private bool withOrderedPrefetchFieldSpecified;
        
        private bool withUnorderedPrefetchField;
        
        private bool withUnorderedPrefetchFieldSpecified;
        
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType PassThru {
            get {
                return this.passThruField;
            }
            set {
                this.passThruField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] OuterReferences {
            get {
                return this.outerReferencesField;
            }
            set {
                this.outerReferencesField = value;
            }
        }
        
        /// <remarks/>
        public SingleColumnReferenceType PartitionId {
            get {
                return this.partitionIdField;
            }
            set {
                this.partitionIdField = value;
            }
        }
        
        /// <remarks/>
        public SingleColumnReferenceType ProbeColumn {
            get {
                return this.probeColumnField;
            }
            set {
                this.probeColumnField = value;
            }
        }
        
        /// <remarks/>
        public StarJoinInfoType StarJoinInfo {
            get {
                return this.starJoinInfoField;
            }
            set {
                this.starJoinInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Optimized {
            get {
                return this.optimizedField;
            }
            set {
                this.optimizedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool WithOrderedPrefetch {
            get {
                return this.withOrderedPrefetchField;
            }
            set {
                this.withOrderedPrefetchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithOrderedPrefetchSpecified {
            get {
                return this.withOrderedPrefetchFieldSpecified;
            }
            set {
                this.withOrderedPrefetchFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool WithUnorderedPrefetch {
            get {
                return this.withUnorderedPrefetchField;
            }
            set {
                this.withUnorderedPrefetchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithUnorderedPrefetchSpecified {
            get {
                return this.withUnorderedPrefetchFieldSpecified;
            }
            set {
                this.withUnorderedPrefetchFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MergeType : RelOpBaseType {
        
        private ColumnReferenceType[] innerSideJoinColumnsField;
        
        private ColumnReferenceType[] outerSideJoinColumnsField;
        
        private ScalarExpressionType residualField;
        
        private ScalarExpressionType passThruField;
        
        private StarJoinInfoType starJoinInfoField;
        
        private RelOpType[] relOpField;
        
        private bool manyToManyField;
        
        private bool manyToManyFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] InnerSideJoinColumns {
            get {
                return this.innerSideJoinColumnsField;
            }
            set {
                this.innerSideJoinColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] OuterSideJoinColumns {
            get {
                return this.outerSideJoinColumnsField;
            }
            set {
                this.outerSideJoinColumnsField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType Residual {
            get {
                return this.residualField;
            }
            set {
                this.residualField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType PassThru {
            get {
                return this.passThruField;
            }
            set {
                this.passThruField = value;
            }
        }
        
        /// <remarks/>
        public StarJoinInfoType StarJoinInfo {
            get {
                return this.starJoinInfoField;
            }
            set {
                this.starJoinInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ManyToMany {
            get {
                return this.manyToManyField;
            }
            set {
                this.manyToManyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ManyToManySpecified {
            get {
                return this.manyToManyFieldSpecified;
            }
            set {
                this.manyToManyFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ConcatType : RelOpBaseType {
        
        private RelOpType[] relOpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CollapseType : RelOpBaseType {
        
        private ColumnReferenceType[] groupByField;
        
        private RelOpType relOpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] GroupBy {
            get {
                return this.groupByField;
            }
            set {
                this.groupByField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class BitmapType : RelOpBaseType {
        
        private ColumnReferenceType[] hashKeysField;
        
        private RelOpType relOpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] HashKeys {
            get {
                return this.hashKeysField;
            }
            set {
                this.hashKeysField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TopSortType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SortType : RelOpBaseType {
        
        private OrderByTypeOrderByColumn[] orderByField;
        
        private RelOpType relOpField;
        
        private bool distinctField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("OrderByColumn", IsNullable=false)]
        public OrderByTypeOrderByColumn[] OrderBy {
            get {
                return this.orderByField;
            }
            set {
                this.orderByField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Distinct {
            get {
                return this.distinctField;
            }
            set {
                this.distinctField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class OrderByTypeOrderByColumn {
        
        private ColumnReferenceType columnReferenceField;
        
        private bool ascendingField;
        
        /// <remarks/>
        public ColumnReferenceType ColumnReference {
            get {
                return this.columnReferenceField;
            }
            set {
                this.columnReferenceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Ascending {
            get {
                return this.ascendingField;
            }
            set {
                this.ascendingField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class TopSortType : SortType {
        
        private int rowsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int Rows {
            get {
                return this.rowsField;
            }
            set {
                this.rowsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StreamAggregateType : RelOpBaseType {
        
        private ColumnReferenceType[] groupByField;
        
        private RelOpType relOpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] GroupBy {
            get {
                return this.groupByField;
            }
            set {
                this.groupByField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ParallelismType : RelOpBaseType {
        
        private ColumnReferenceType[] partitionColumnsField;
        
        private OrderByTypeOrderByColumn[] orderByField;
        
        private ColumnReferenceType[] hashKeysField;
        
        private SingleColumnReferenceType probeColumnField;
        
        private RelOpType relOpField;
        
        private PartitionType partitioningTypeField;
        
        private bool partitioningTypeFieldSpecified;
        
        private bool inRowField;
        
        private bool inRowFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] PartitionColumns {
            get {
                return this.partitionColumnsField;
            }
            set {
                this.partitionColumnsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("OrderByColumn", IsNullable=false)]
        public OrderByTypeOrderByColumn[] OrderBy {
            get {
                return this.orderByField;
            }
            set {
                this.orderByField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] HashKeys {
            get {
                return this.hashKeysField;
            }
            set {
                this.hashKeysField = value;
            }
        }
        
        /// <remarks/>
        public SingleColumnReferenceType ProbeColumn {
            get {
                return this.probeColumnField;
            }
            set {
                this.probeColumnField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public PartitionType PartitioningType {
            get {
                return this.partitioningTypeField;
            }
            set {
                this.partitioningTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PartitioningTypeSpecified {
            get {
                return this.partitioningTypeFieldSpecified;
            }
            set {
                this.partitioningTypeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool InRow {
            get {
                return this.inRowField;
            }
            set {
                this.inRowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool InRowSpecified {
            get {
                return this.inRowFieldSpecified;
            }
            set {
                this.inRowFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum PartitionType {
        
        /// <remarks/>
        Broadcast,
        
        /// <remarks/>
        Demand,
        
        /// <remarks/>
        DemandParallel,
        
        /// <remarks/>
        Hash,
        
        /// <remarks/>
        NoPartitioning,
        
        /// <remarks/>
        Range,
        
        /// <remarks/>
        RoundRobin,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ComputeScalarType : RelOpBaseType {
        
        private RelOpType relOpField;
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class HashType : RelOpBaseType {
        
        private ColumnReferenceType[] hashKeysBuildField;
        
        private ColumnReferenceType[] hashKeysProbeField;
        
        private ScalarExpressionType buildResidualField;
        
        private ScalarExpressionType probeResidualField;
        
        private StarJoinInfoType starJoinInfoField;
        
        private RelOpType[] relOpField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] HashKeysBuild {
            get {
                return this.hashKeysBuildField;
            }
            set {
                this.hashKeysBuildField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ColumnReference", IsNullable=false)]
        public ColumnReferenceType[] HashKeysProbe {
            get {
                return this.hashKeysProbeField;
            }
            set {
                this.hashKeysProbeField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType BuildResidual {
            get {
                return this.buildResidualField;
            }
            set {
                this.buildResidualField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType ProbeResidual {
            get {
                return this.probeResidualField;
            }
            set {
                this.probeResidualField = value;
            }
        }
        
        /// <remarks/>
        public StarJoinInfoType StarJoinInfo {
            get {
                return this.starJoinInfoField;
            }
            set {
                this.starJoinInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("RelOp")]
        public RelOpType[] RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class TableValuedFunctionType : RelOpBaseType {
        
        private ObjectType objectField;
        
        private ScalarExpressionType predicateField;
        
        private ScalarType[] parameterListField;
        
        /// <remarks/>
        public ObjectType Object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("ScalarOperator", IsNullable=false)]
        public ScalarType[] ParameterList {
            get {
                return this.parameterListField;
            }
            set {
                this.parameterListField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ObjectType {
        
        private string serverField;
        
        private string databaseField;
        
        private string schemaField;
        
        private string tableField;
        
        private string indexField;
        
        private string aliasField;
        
        private int tableReferenceIdField;
        
        private bool tableReferenceIdFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Server {
            get {
                return this.serverField;
            }
            set {
                this.serverField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema {
            get {
                return this.schemaField;
            }
            set {
                this.schemaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Index {
            get {
                return this.indexField;
            }
            set {
                this.indexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int TableReferenceId {
            get {
                return this.tableReferenceIdField;
            }
            set {
                this.tableReferenceIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TableReferenceIdSpecified {
            get {
                return this.tableReferenceIdFieldSpecified;
            }
            set {
                this.tableReferenceIdFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ScalarInsertType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CreateIndexType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UpdateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(SimpleUpdateType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(IndexScanType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TableScanType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class RowsetType : RelOpBaseType {
        
        private ObjectType[] objectField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Object")]
        public ObjectType[] Object {
            get {
                return this.objectField;
            }
            set {
                this.objectField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ScalarInsertType : RowsetType {
        
        private ScalarExpressionType setPredicateField;
        
        /// <remarks/>
        public ScalarExpressionType SetPredicate {
            get {
                return this.setPredicateField;
            }
            set {
                this.setPredicateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CreateIndexType : RowsetType {
        
        private RelOpType relOpField;
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UpdateType : RowsetType {
        
        private ScalarExpressionType setPredicateField;
        
        private RelOpType relOpField;
        
        private bool withOrderedPrefetchField;
        
        private bool withOrderedPrefetchFieldSpecified;
        
        private bool withUnorderedPrefetchField;
        
        private bool withUnorderedPrefetchFieldSpecified;
        
        /// <remarks/>
        public ScalarExpressionType SetPredicate {
            get {
                return this.setPredicateField;
            }
            set {
                this.setPredicateField = value;
            }
        }
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool WithOrderedPrefetch {
            get {
                return this.withOrderedPrefetchField;
            }
            set {
                this.withOrderedPrefetchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithOrderedPrefetchSpecified {
            get {
                return this.withOrderedPrefetchFieldSpecified;
            }
            set {
                this.withOrderedPrefetchFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool WithUnorderedPrefetch {
            get {
                return this.withUnorderedPrefetchField;
            }
            set {
                this.withUnorderedPrefetchField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool WithUnorderedPrefetchSpecified {
            get {
                return this.withUnorderedPrefetchFieldSpecified;
            }
            set {
                this.withUnorderedPrefetchFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SimpleUpdateType : RowsetType {
        
        private SeekPredicateType seekPredicateField;
        
        private ScalarExpressionType setPredicateField;
        
        /// <remarks/>
        public SeekPredicateType SeekPredicate {
            get {
                return this.seekPredicateField;
            }
            set {
                this.seekPredicateField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType SetPredicate {
            get {
                return this.setPredicateField;
            }
            set {
                this.setPredicateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class IndexScanType : RowsetType {
        
        private SeekPredicateType[] seekPredicatesField;
        
        private ScalarExpressionType predicateField;
        
        private SingleColumnReferenceType partitionIdField;
        
        private ObjectType[] indexedViewInfoField;
        
        private bool lookupField;
        
        private bool lookupFieldSpecified;
        
        private bool orderedField;
        
        private OrderType scanDirectionField;
        
        private bool scanDirectionFieldSpecified;
        
        private bool forcedIndexField;
        
        private bool forcedIndexFieldSpecified;
        
        private bool noExpandHintField;
        
        private bool noExpandHintFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("SeekPredicate", IsNullable=false)]
        public SeekPredicateType[] SeekPredicates {
            get {
                return this.seekPredicatesField;
            }
            set {
                this.seekPredicatesField = value;
            }
        }
        
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
        
        /// <remarks/>
        public SingleColumnReferenceType PartitionId {
            get {
                return this.partitionIdField;
            }
            set {
                this.partitionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Object", IsNullable=false)]
        public ObjectType[] IndexedViewInfo {
            get {
                return this.indexedViewInfoField;
            }
            set {
                this.indexedViewInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Lookup {
            get {
                return this.lookupField;
            }
            set {
                this.lookupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool LookupSpecified {
            get {
                return this.lookupFieldSpecified;
            }
            set {
                this.lookupFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Ordered {
            get {
                return this.orderedField;
            }
            set {
                this.orderedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public OrderType ScanDirection {
            get {
                return this.scanDirectionField;
            }
            set {
                this.scanDirectionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ScanDirectionSpecified {
            get {
                return this.scanDirectionFieldSpecified;
            }
            set {
                this.scanDirectionFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ForcedIndex {
            get {
                return this.forcedIndexField;
            }
            set {
                this.forcedIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForcedIndexSpecified {
            get {
                return this.forcedIndexFieldSpecified;
            }
            set {
                this.forcedIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool NoExpandHint {
            get {
                return this.noExpandHintField;
            }
            set {
                this.noExpandHintField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoExpandHintSpecified {
            get {
                return this.noExpandHintFieldSpecified;
            }
            set {
                this.noExpandHintFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum OrderType {
        
        /// <remarks/>
        BACKWARD,
        
        /// <remarks/>
        FORWARD,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class TableScanType : RowsetType {
        
        private ScalarExpressionType predicateField;
        
        private SingleColumnReferenceType partitionIdField;
        
        private ObjectType[] indexedViewInfoField;
        
        private bool orderedField;
        
        private bool forcedIndexField;
        
        private bool forcedIndexFieldSpecified;
        
        private bool noExpandHintField;
        
        private bool noExpandHintFieldSpecified;
        
        /// <remarks/>
        public ScalarExpressionType Predicate {
            get {
                return this.predicateField;
            }
            set {
                this.predicateField = value;
            }
        }
        
        /// <remarks/>
        public SingleColumnReferenceType PartitionId {
            get {
                return this.partitionIdField;
            }
            set {
                this.partitionIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Object", IsNullable=false)]
        public ObjectType[] IndexedViewInfo {
            get {
                return this.indexedViewInfoField;
            }
            set {
                this.indexedViewInfoField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Ordered {
            get {
                return this.orderedField;
            }
            set {
                this.orderedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ForcedIndex {
            get {
                return this.forcedIndexField;
            }
            set {
                this.forcedIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ForcedIndexSpecified {
            get {
                return this.forcedIndexFieldSpecified;
            }
            set {
                this.forcedIndexFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool NoExpandHint {
            get {
                return this.noExpandHintField;
            }
            set {
                this.noExpandHintField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NoExpandHintSpecified {
            get {
                return this.noExpandHintFieldSpecified;
            }
            set {
                this.noExpandHintFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ConstantScanType : RelOpBaseType {
        
        private ScalarType[][] valuesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Row", IsNullable=false)]
        [System.Xml.Serialization.XmlArrayItemAttribute("ScalarOperator", IsNullable=false, NestingLevel=1)]
        public ScalarType[][] Values {
            get {
                return this.valuesField;
            }
            set {
                this.valuesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SimpleIteratorOneChildType : RelOpBaseType {
        
        private RelOpType relOpField;
        
        /// <remarks/>
        public RelOpType RelOp {
            get {
                return this.relOpField;
            }
            set {
                this.relOpField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        Assert,
        
        /// <remarks/>
        Bitmap,
        
        /// <remarks/>
        Collapse,
        
        /// <remarks/>
        ComputeScalar,
        
        /// <remarks/>
        Concat,
        
        /// <remarks/>
        ConstantScan,
        
        /// <remarks/>
        CreateIndex,
        
        /// <remarks/>
        DeletedScan,
        
        /// <remarks/>
        Extension,
        
        /// <remarks/>
        Filter,
        
        /// <remarks/>
        Generic,
        
        /// <remarks/>
        Hash,
        
        /// <remarks/>
        IndexScan,
        
        /// <remarks/>
        InsertedScan,
        
        /// <remarks/>
        LogRowScan,
        
        /// <remarks/>
        Merge,
        
        /// <remarks/>
        MergeInterval,
        
        /// <remarks/>
        NestedLoops,
        
        /// <remarks/>
        OnlineIndex,
        
        /// <remarks/>
        Parallelism,
        
        /// <remarks/>
        ParameterTableScan,
        
        /// <remarks/>
        PrintDataflow,
        
        /// <remarks/>
        RemoteFetch,
        
        /// <remarks/>
        RemoteModify,
        
        /// <remarks/>
        RemoteQuery,
        
        /// <remarks/>
        RemoteRange,
        
        /// <remarks/>
        RemoteScan,
        
        /// <remarks/>
        RowCountSpool,
        
        /// <remarks/>
        ScalarInsert,
        
        /// <remarks/>
        Segment,
        
        /// <remarks/>
        Sequence,
        
        /// <remarks/>
        SequenceProject,
        
        /// <remarks/>
        SimpleUpdate,
        
        /// <remarks/>
        Sort,
        
        /// <remarks/>
        Split,
        
        /// <remarks/>
        Spool,
        
        /// <remarks/>
        StreamAggregate,
        
        /// <remarks/>
        Switch,
        
        /// <remarks/>
        TableScan,
        
        /// <remarks/>
        TableValuedFunction,
        
        /// <remarks/>
        Top,
        
        /// <remarks/>
        TopSort,
        
        /// <remarks/>
        Update,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum LogicalOpType {
        
        /// <remarks/>
        Aggregate,
        
        /// <remarks/>
        Assert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Async Concat")]
        AsyncConcat,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Bitmap Create")]
        BitmapCreate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Scan")]
        ClusteredIndexScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Seek")]
        ClusteredIndexSeek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Update")]
        ClusteredUpdate,
        
        /// <remarks/>
        Collapse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Compute Scalar")]
        ComputeScalar,
        
        /// <remarks/>
        Concatenation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Constant Scan")]
        ConstantScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Cross Join")]
        CrossJoin,
        
        /// <remarks/>
        Delete,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Deleted Scan")]
        DeletedScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Distinct Sort")]
        DistinctSort,
        
        /// <remarks/>
        Distinct,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Distribute Streams")]
        DistributeStreams,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Eager Spool")]
        EagerSpool,
        
        /// <remarks/>
        Filter,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Flow Distinct")]
        FlowDistinct,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Full Outer Join")]
        FullOuterJoin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Gather Streams")]
        GatherStreams,
        
        /// <remarks/>
        Generic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Scan")]
        IndexScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Seek")]
        IndexSeek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inner Join")]
        InnerJoin,
        
        /// <remarks/>
        Insert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inserted Scan")]
        InsertedScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Lazy Spool")]
        LazySpool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Left Anti Semi Join")]
        LeftAntiSemiJoin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Left Outer Join")]
        LeftOuterJoin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Left Semi Join")]
        LeftSemiJoin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Log Row Scan")]
        LogRowScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Merge Interval")]
        MergeInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Parameter Table Scan")]
        ParameterTableScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Partial Aggregate")]
        PartialAggregate,
        
        /// <remarks/>
        Print,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Remote Delete")]
        RemoteDelete,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Remote Insert")]
        RemoteInsert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Remote Query")]
        RemoteQuery,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Remote Scan")]
        RemoteScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Remote Update")]
        RemoteUpdate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Repartition Streams")]
        RepartitionStreams,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("RID Lookup")]
        RIDLookup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Right Anti Semi Join")]
        RightAntiSemiJoin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Right Outer Join")]
        RightOuterJoin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Right Semi Join")]
        RightSemiJoin,
        
        /// <remarks/>
        Segment,
        
        /// <remarks/>
        Sequence,
        
        /// <remarks/>
        Sort,
        
        /// <remarks/>
        Split,
        
        /// <remarks/>
        Switch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Table-valued function")]
        Tablevaluedfunction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Table Scan")]
        TableScan,
        
        /// <remarks/>
        Top,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("TopN Sort")]
        TopNSort,
        
        /// <remarks/>
        UDX,
        
        /// <remarks/>
        Union,
        
        /// <remarks/>
        Update,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum PhysicalOpType {
        
        /// <remarks/>
        Assert,
        
        /// <remarks/>
        Bitmap,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Delete")]
        ClusteredIndexDelete,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Insert")]
        ClusteredIndexInsert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Scan")]
        ClusteredIndexScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Seek")]
        ClusteredIndexSeek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Index Update")]
        ClusteredIndexUpdate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Clustered Update")]
        ClusteredUpdate,
        
        /// <remarks/>
        Collapse,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Compute Scalar")]
        ComputeScalar,
        
        /// <remarks/>
        Concatenation,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Constant Scan")]
        ConstantScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Deleted Scan")]
        DeletedScan,
        
        /// <remarks/>
        Filter,
        
        /// <remarks/>
        Generic,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Hash Match")]
        HashMatch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Delete")]
        IndexDelete,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Insert")]
        IndexInsert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Scan")]
        IndexScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Seek")]
        IndexSeek,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Spool")]
        IndexSpool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Index Update")]
        IndexUpdate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Inserted Scan")]
        InsertedScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Log Row Scan")]
        LogRowScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Merge Interval")]
        MergeInterval,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Merge Join")]
        MergeJoin,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Nested Loops")]
        NestedLoops,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Online Index Insert")]
        OnlineIndexInsert,
        
        /// <remarks/>
        Parallelism,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Parameter Table Scan")]
        ParameterTableScan,
        
        /// <remarks/>
        Print,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Remote Delete")]
        RemoteDelete,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Remote Insert")]
        RemoteInsert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Remote Query")]
        RemoteQuery,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Remote Scan")]
        RemoteScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Remote Update")]
        RemoteUpdate,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("RID Lookup")]
        RIDLookup,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Row Count Spool")]
        RowCountSpool,
        
        /// <remarks/>
        Segment,
        
        /// <remarks/>
        Sequence,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Sequence Project")]
        SequenceProject,
        
        /// <remarks/>
        Sort,
        
        /// <remarks/>
        Split,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Stream Aggregate")]
        StreamAggregate,
        
        /// <remarks/>
        Switch,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Table-valued function")]
        Tablevaluedfunction,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Table Delete")]
        TableDelete,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Table Insert")]
        TableInsert,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Table Scan")]
        TableScan,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Table Spool")]
        TableSpool,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("Table Update")]
        TableUpdate,
        
        /// <remarks/>
        Top,
        
        /// <remarks/>
        UDX,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum SubqueryOperationType {
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EQ ALL")]
        EQALL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("EQ ANY")]
        EQANY,
        
        /// <remarks/>
        EXISTS,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("GE ALL")]
        GEALL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("GE ANY")]
        GEANY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("GT ALL")]
        GTALL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("GT ANY")]
        GTANY,
        
        /// <remarks/>
        IN,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("LE ALL")]
        LEALL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("LE ANY")]
        LEANY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("LT ALL")]
        LTALL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("LT ANY")]
        LTANY,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NE ALL")]
        NEALL,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("NE ANY")]
        NEANY,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UDTMethodType {
        
        private CLRFunctionType cLRFunctionField;
        
        private ScalarType[] scalarOperatorField;
        
        /// <remarks/>
        public CLRFunctionType CLRFunction {
            get {
                return this.cLRFunctionField;
            }
            set {
                this.cLRFunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class CLRFunctionType {
        
        private string assemblyField;
        
        private string classField;
        
        private string methodField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Assembly {
            get {
                return this.assemblyField;
            }
            set {
                this.assemblyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Class {
            get {
                return this.classField;
            }
            set {
                this.classField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Method {
            get {
                return this.methodField;
            }
            set {
                this.methodField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UDAggregateType {
        
        private ObjectType uDAggObjectField;
        
        private ScalarType scalarOperatorField;
        
        private bool distinctField;
        
        /// <remarks/>
        public ObjectType UDAggObject {
            get {
                return this.uDAggObjectField;
            }
            set {
                this.uDAggObjectField = value;
            }
        }
        
        /// <remarks/>
        public ScalarType ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool Distinct {
            get {
                return this.distinctField;
            }
            set {
                this.distinctField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class UDFType {
        
        private ScalarType[] scalarOperatorField;
        
        private CLRFunctionType cLRFunctionField;
        
        private string functionNameField;
        
        private bool isClrFunctionField;
        
        private bool isClrFunctionFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ScalarOperator")]
        public ScalarType[] ScalarOperator {
            get {
                return this.scalarOperatorField;
            }
            set {
                this.scalarOperatorField = value;
            }
        }
        
        /// <remarks/>
        public CLRFunctionType CLRFunction {
            get {
                return this.cLRFunctionField;
            }
            set {
                this.cLRFunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string FunctionName {
            get {
                return this.functionNameField;
            }
            set {
                this.functionNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool IsClrFunction {
            get {
                return this.isClrFunctionField;
            }
            set {
                this.isClrFunctionField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool IsClrFunctionSpecified {
            get {
                return this.isClrFunctionFieldSpecified;
            }
            set {
                this.isClrFunctionFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ColumnType {
        
        private string nameField;
        
        private int columnIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int ColumnId {
            get {
                return this.columnIdField;
            }
            set {
                this.columnIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ColumnGroupType {
        
        private ColumnType[] columnField;
        
        private ColumnGroupTypeUsage usageField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Column")]
        public ColumnType[] Column {
            get {
                return this.columnField;
            }
            set {
                this.columnField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ColumnGroupTypeUsage Usage {
            get {
                return this.usageField;
            }
            set {
                this.usageField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum ColumnGroupTypeUsage {
        
        /// <remarks/>
        EQUALITY,
        
        /// <remarks/>
        INEQUALITY,
        
        /// <remarks/>
        INCLUDE,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MissingIndexType {
        
        private ColumnGroupType[] columnGroupField;
        
        private string databaseField;
        
        private string schemaField;
        
        private string tableField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ColumnGroup")]
        public ColumnGroupType[] ColumnGroup {
            get {
                return this.columnGroupField;
            }
            set {
                this.columnGroupField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Schema {
            get {
                return this.schemaField;
            }
            set {
                this.schemaField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Table {
            get {
                return this.tableField;
            }
            set {
                this.tableField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class MissingIndexGroupType {
        
        private MissingIndexType[] missingIndexField;
        
        private double impactField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("MissingIndex")]
        public MissingIndexType[] MissingIndex {
            get {
                return this.missingIndexField;
            }
            set {
                this.missingIndexField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double Impact {
            get {
                return this.impactField;
            }
            set {
                this.impactField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class SetOptionsType {
        
        private bool aNSI_NULLSField;
        
        private bool aNSI_NULLSFieldSpecified;
        
        private bool aNSI_PADDINGField;
        
        private bool aNSI_PADDINGFieldSpecified;
        
        private bool aNSI_WARNINGSField;
        
        private bool aNSI_WARNINGSFieldSpecified;
        
        private bool aRITHABORTField;
        
        private bool aRITHABORTFieldSpecified;
        
        private bool cONCAT_NULL_YIELDS_NULLField;
        
        private bool cONCAT_NULL_YIELDS_NULLFieldSpecified;
        
        private bool nUMERIC_ROUNDABORTField;
        
        private bool nUMERIC_ROUNDABORTFieldSpecified;
        
        private bool qUOTED_IDENTIFIERField;
        
        private bool qUOTED_IDENTIFIERFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ANSI_NULLS {
            get {
                return this.aNSI_NULLSField;
            }
            set {
                this.aNSI_NULLSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ANSI_NULLSSpecified {
            get {
                return this.aNSI_NULLSFieldSpecified;
            }
            set {
                this.aNSI_NULLSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ANSI_PADDING {
            get {
                return this.aNSI_PADDINGField;
            }
            set {
                this.aNSI_PADDINGField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ANSI_PADDINGSpecified {
            get {
                return this.aNSI_PADDINGFieldSpecified;
            }
            set {
                this.aNSI_PADDINGFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ANSI_WARNINGS {
            get {
                return this.aNSI_WARNINGSField;
            }
            set {
                this.aNSI_WARNINGSField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ANSI_WARNINGSSpecified {
            get {
                return this.aNSI_WARNINGSFieldSpecified;
            }
            set {
                this.aNSI_WARNINGSFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool ARITHABORT {
            get {
                return this.aRITHABORTField;
            }
            set {
                this.aRITHABORTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool ARITHABORTSpecified {
            get {
                return this.aRITHABORTFieldSpecified;
            }
            set {
                this.aRITHABORTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool CONCAT_NULL_YIELDS_NULL {
            get {
                return this.cONCAT_NULL_YIELDS_NULLField;
            }
            set {
                this.cONCAT_NULL_YIELDS_NULLField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CONCAT_NULL_YIELDS_NULLSpecified {
            get {
                return this.cONCAT_NULL_YIELDS_NULLFieldSpecified;
            }
            set {
                this.cONCAT_NULL_YIELDS_NULLFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool NUMERIC_ROUNDABORT {
            get {
                return this.nUMERIC_ROUNDABORTField;
            }
            set {
                this.nUMERIC_ROUNDABORTField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool NUMERIC_ROUNDABORTSpecified {
            get {
                return this.nUMERIC_ROUNDABORTFieldSpecified;
            }
            set {
                this.nUMERIC_ROUNDABORTFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public bool QUOTED_IDENTIFIER {
            get {
                return this.qUOTED_IDENTIFIERField;
            }
            set {
                this.qUOTED_IDENTIFIERField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool QUOTED_IDENTIFIERSpecified {
            get {
                return this.qUOTED_IDENTIFIERFieldSpecified;
            }
            set {
                this.qUOTED_IDENTIFIERFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StmtReceiveType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StmtCursorType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StmtCondType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StmtUseDbType))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(StmtSimpleType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class BaseStmtInfoType {
        
        private SetOptionsType statementSetOptionsField;
        
        private int statementCompIdField;
        
        private bool statementCompIdFieldSpecified;
        
        private double statementEstRowsField;
        
        private bool statementEstRowsFieldSpecified;
        
        private int statementIdField;
        
        private bool statementIdFieldSpecified;
        
        private string statementOptmLevelField;
        
        private BaseStmtInfoTypeStatementOptmEarlyAbortReason statementOptmEarlyAbortReasonField;
        
        private bool statementOptmEarlyAbortReasonFieldSpecified;
        
        private double statementSubTreeCostField;
        
        private bool statementSubTreeCostFieldSpecified;
        
        private string statementTextField;
        
        private string statementTypeField;
        
        private string templatePlanGuideDBField;
        
        private string templatePlanGuideNameField;
        
        private string planGuideDBField;
        
        private string planGuideNameField;
        
        /// <remarks/>
        public SetOptionsType StatementSetOptions {
            get {
                return this.statementSetOptionsField;
            }
            set {
                this.statementSetOptionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int StatementCompId {
            get {
                return this.statementCompIdField;
            }
            set {
                this.statementCompIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementCompIdSpecified {
            get {
                return this.statementCompIdFieldSpecified;
            }
            set {
                this.statementCompIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double StatementEstRows {
            get {
                return this.statementEstRowsField;
            }
            set {
                this.statementEstRowsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementEstRowsSpecified {
            get {
                return this.statementEstRowsFieldSpecified;
            }
            set {
                this.statementEstRowsFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public int StatementId {
            get {
                return this.statementIdField;
            }
            set {
                this.statementIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementIdSpecified {
            get {
                return this.statementIdFieldSpecified;
            }
            set {
                this.statementIdFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StatementOptmLevel {
            get {
                return this.statementOptmLevelField;
            }
            set {
                this.statementOptmLevelField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public BaseStmtInfoTypeStatementOptmEarlyAbortReason StatementOptmEarlyAbortReason {
            get {
                return this.statementOptmEarlyAbortReasonField;
            }
            set {
                this.statementOptmEarlyAbortReasonField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementOptmEarlyAbortReasonSpecified {
            get {
                return this.statementOptmEarlyAbortReasonFieldSpecified;
            }
            set {
                this.statementOptmEarlyAbortReasonFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public double StatementSubTreeCost {
            get {
                return this.statementSubTreeCostField;
            }
            set {
                this.statementSubTreeCostField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool StatementSubTreeCostSpecified {
            get {
                return this.statementSubTreeCostFieldSpecified;
            }
            set {
                this.statementSubTreeCostFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StatementText {
            get {
                return this.statementTextField;
            }
            set {
                this.statementTextField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string StatementType {
            get {
                return this.statementTypeField;
            }
            set {
                this.statementTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TemplatePlanGuideDB {
            get {
                return this.templatePlanGuideDBField;
            }
            set {
                this.templatePlanGuideDBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string TemplatePlanGuideName {
            get {
                return this.templatePlanGuideNameField;
            }
            set {
                this.templatePlanGuideNameField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PlanGuideDB {
            get {
                return this.planGuideDBField;
            }
            set {
                this.planGuideDBField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string PlanGuideName {
            get {
                return this.planGuideNameField;
            }
            set {
                this.planGuideNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum BaseStmtInfoTypeStatementOptmEarlyAbortReason {
        
        /// <remarks/>
        TimeOut,
        
        /// <remarks/>
        MemoryLimitExceeded,
        
        /// <remarks/>
        GoodEnoughPlanFound,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtReceiveType : BaseStmtInfoType {
        
        private ReceivePlanTypeOperation[] receivePlanField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayItemAttribute("Operation", IsNullable=false)]
        public ReceivePlanTypeOperation[] ReceivePlan {
            get {
                return this.receivePlanField;
            }
            set {
                this.receivePlanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class ReceivePlanTypeOperation {
        
        private QueryPlanType queryPlanField;
        
        private ReceivePlanTypeOperationOperationType operationTypeField;
        
        private bool operationTypeFieldSpecified;
        
        /// <remarks/>
        public QueryPlanType QueryPlan {
            get {
                return this.queryPlanField;
            }
            set {
                this.queryPlanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public ReceivePlanTypeOperationOperationType OperationType {
            get {
                return this.operationTypeField;
            }
            set {
                this.operationTypeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool OperationTypeSpecified {
            get {
                return this.operationTypeFieldSpecified;
            }
            set {
                this.operationTypeFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public enum ReceivePlanTypeOperationOperationType {
        
        /// <remarks/>
        ReceivePlanSelect,
        
        /// <remarks/>
        ReceivePlanUpdate,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtCursorType : BaseStmtInfoType {
        
        private CursorPlanType cursorPlanField;
        
        /// <remarks/>
        public CursorPlanType CursorPlan {
            get {
                return this.cursorPlanField;
            }
            set {
                this.cursorPlanField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtUseDbType : BaseStmtInfoType {
        
        private string databaseField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtSimpleType : BaseStmtInfoType {
        
        private QueryPlanType queryPlanField;
        
        private FunctionType[] uDFField;
        
        private FunctionType storedProcField;
        
        /// <remarks/>
        public QueryPlanType QueryPlan {
            get {
                return this.queryPlanField;
            }
            set {
                this.queryPlanField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("UDF")]
        public FunctionType[] UDF {
            get {
                return this.uDFField;
            }
            set {
                this.uDFField = value;
            }
        }
        
        /// <remarks/>
        public FunctionType StoredProc {
            get {
                return this.storedProcField;
            }
            set {
                this.storedProcField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtCondTypeThen {
        
        private StmtBlockType statementsField;
        
        /// <remarks/>
        public StmtBlockType Statements {
            get {
                return this.statementsField;
            }
            set {
                this.statementsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/sqlserver/2004/07/showplan")]
    public partial class StmtCondTypeElse {
        
        private StmtBlockType statementsField;
        
        /// <remarks/>
        public StmtBlockType Statements {
            get {
                return this.statementsField;
            }
            set {
                this.statementsField = value;
            }
        }
    }
}
