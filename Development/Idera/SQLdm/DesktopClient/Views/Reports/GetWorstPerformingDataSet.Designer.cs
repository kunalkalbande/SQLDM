//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.832
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Idera.SQLdm.DesktopClient.Views.Reports {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("GetWorstPerformingDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class GetWorstPerformingDataSet : System.Data.DataSet {
        
        private p_GetWorstPerformingReportTempDataTable tablep_GetWorstPerformingReportTemp;
        
        private p_GetMostFrequentReportTempDataTable tablep_GetMostFrequentReportTemp;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public GetWorstPerformingDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected GetWorstPerformingDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["p_GetWorstPerformingReportTemp"] != null)) {
                    base.Tables.Add(new p_GetWorstPerformingReportTempDataTable(ds.Tables["p_GetWorstPerformingReportTemp"]));
                }
                if ((ds.Tables["p_GetMostFrequentReportTemp"] != null)) {
                    base.Tables.Add(new p_GetMostFrequentReportTempDataTable(ds.Tables["p_GetMostFrequentReportTemp"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public p_GetWorstPerformingReportTempDataTable p_GetWorstPerformingReportTemp {
            get {
                return this.tablep_GetWorstPerformingReportTemp;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public p_GetMostFrequentReportTempDataTable p_GetMostFrequentReportTemp {
            get {
                return this.tablep_GetMostFrequentReportTemp;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            GetWorstPerformingDataSet cln = ((GetWorstPerformingDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["p_GetWorstPerformingReportTemp"] != null)) {
                    base.Tables.Add(new p_GetWorstPerformingReportTempDataTable(ds.Tables["p_GetWorstPerformingReportTemp"]));
                }
                if ((ds.Tables["p_GetMostFrequentReportTemp"] != null)) {
                    base.Tables.Add(new p_GetMostFrequentReportTempDataTable(ds.Tables["p_GetMostFrequentReportTemp"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tablep_GetWorstPerformingReportTemp = ((p_GetWorstPerformingReportTempDataTable)(base.Tables["p_GetWorstPerformingReportTemp"]));
            if ((initTable == true)) {
                if ((this.tablep_GetWorstPerformingReportTemp != null)) {
                    this.tablep_GetWorstPerformingReportTemp.InitVars();
                }
            }
            this.tablep_GetMostFrequentReportTemp = ((p_GetMostFrequentReportTempDataTable)(base.Tables["p_GetMostFrequentReportTemp"]));
            if ((initTable == true)) {
                if ((this.tablep_GetMostFrequentReportTemp != null)) {
                    this.tablep_GetMostFrequentReportTemp.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "GetWorstPerformingDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/GetWorstPerformingDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tablep_GetWorstPerformingReportTemp = new p_GetWorstPerformingReportTempDataTable();
            base.Tables.Add(this.tablep_GetWorstPerformingReportTemp);
            this.tablep_GetMostFrequentReportTemp = new p_GetMostFrequentReportTempDataTable();
            base.Tables.Add(this.tablep_GetMostFrequentReportTemp);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializep_GetWorstPerformingReportTemp() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializep_GetMostFrequentReportTemp() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            GetWorstPerformingDataSet ds = new GetWorstPerformingDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void p_GetWorstPerformingReportTempRowChangeEventHandler(object sender, p_GetWorstPerformingReportTempRowChangeEvent e);
        
        public delegate void p_GetMostFrequentReportTempRowChangeEventHandler(object sender, p_GetMostFrequentReportTempRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class p_GetWorstPerformingReportTempDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSQLServerID;
            
            private System.Data.DataColumn columnInstanceName;
            
            private System.Data.DataColumn columnStatementText;
            
            private System.Data.DataColumn columnStatementType;
            
            private System.Data.DataColumn columnStatementID;
            
            private System.Data.DataColumn columnStatementNumber;
            
            private System.Data.DataColumn columnCount;
            
            private System.Data.DataColumn columnStartTime;
            
            private System.Data.DataColumn columnEndTime;
            
            private System.Data.DataColumn columnDatabaseName;
            
            private System.Data.DataColumn columnNtUserName;
            
            private System.Data.DataColumn columnSqlUserName;
            
            private System.Data.DataColumn columnClientComputerName;
            
            private System.Data.DataColumn columnApplicationName;
            
            private System.Data.DataColumn columnAverageDuration;
            
            private System.Data.DataColumn columnDuration;
            
            private System.Data.DataColumn columnCPU;
            
            private System.Data.DataColumn columnReads;
            
            private System.Data.DataColumn columnWrites;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetWorstPerformingReportTempDataTable() {
                this.TableName = "p_GetWorstPerformingReportTemp";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal p_GetWorstPerformingReportTempDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected p_GetWorstPerformingReportTempDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SQLServerIDColumn {
                get {
                    return this.columnSQLServerID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InstanceNameColumn {
                get {
                    return this.columnInstanceName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatementTextColumn {
                get {
                    return this.columnStatementText;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatementTypeColumn {
                get {
                    return this.columnStatementType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatementIDColumn {
                get {
                    return this.columnStatementID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatementNumberColumn {
                get {
                    return this.columnStatementNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CountColumn {
                get {
                    return this.columnCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DatabaseNameColumn {
                get {
                    return this.columnDatabaseName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NtUserNameColumn {
                get {
                    return this.columnNtUserName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SqlUserNameColumn {
                get {
                    return this.columnSqlUserName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientComputerNameColumn {
                get {
                    return this.columnClientComputerName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApplicationNameColumn {
                get {
                    return this.columnApplicationName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AverageDurationColumn {
                get {
                    return this.columnAverageDuration;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DurationColumn {
                get {
                    return this.columnDuration;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CPUColumn {
                get {
                    return this.columnCPU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReadsColumn {
                get {
                    return this.columnReads;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WritesColumn {
                get {
                    return this.columnWrites;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetWorstPerformingReportTempRow this[int index] {
                get {
                    return ((p_GetWorstPerformingReportTempRow)(this.Rows[index]));
                }
            }
            
            public event p_GetWorstPerformingReportTempRowChangeEventHandler p_GetWorstPerformingReportTempRowChanging;
            
            public event p_GetWorstPerformingReportTempRowChangeEventHandler p_GetWorstPerformingReportTempRowChanged;
            
            public event p_GetWorstPerformingReportTempRowChangeEventHandler p_GetWorstPerformingReportTempRowDeleting;
            
            public event p_GetWorstPerformingReportTempRowChangeEventHandler p_GetWorstPerformingReportTempRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addp_GetWorstPerformingReportTempRow(p_GetWorstPerformingReportTempRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetWorstPerformingReportTempRow Addp_GetWorstPerformingReportTempRow(
                        int SQLServerID, 
                        string InstanceName, 
                        string StatementText, 
                        int StatementType, 
                        int StatementID, 
                        int StatementNumber, 
                        int Count, 
                        System.DateTime StartTime, 
                        System.DateTime EndTime, 
                        string DatabaseName, 
                        string NtUserName, 
                        string SqlUserName, 
                        string ClientComputerName, 
                        string ApplicationName, 
                        long AverageDuration, 
                        long Duration, 
                        long CPU, 
                        long Reads, 
                        long Writes) {
                p_GetWorstPerformingReportTempRow rowp_GetWorstPerformingReportTempRow = ((p_GetWorstPerformingReportTempRow)(this.NewRow()));
                rowp_GetWorstPerformingReportTempRow.ItemArray = new object[] {
                        SQLServerID,
                        InstanceName,
                        StatementText,
                        StatementType,
                        StatementID,
                        StatementNumber,
                        Count,
                        StartTime,
                        EndTime,
                        DatabaseName,
                        NtUserName,
                        SqlUserName,
                        ClientComputerName,
                        ApplicationName,
                        AverageDuration,
                        Duration,
                        CPU,
                        Reads,
                        Writes};
                this.Rows.Add(rowp_GetWorstPerformingReportTempRow);
                return rowp_GetWorstPerformingReportTempRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                p_GetWorstPerformingReportTempDataTable cln = ((p_GetWorstPerformingReportTempDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new p_GetWorstPerformingReportTempDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSQLServerID = base.Columns["SQLServerID"];
                this.columnInstanceName = base.Columns["InstanceName"];
                this.columnStatementText = base.Columns["StatementText"];
                this.columnStatementType = base.Columns["StatementType"];
                this.columnStatementID = base.Columns["StatementID"];
                this.columnStatementNumber = base.Columns["StatementNumber"];
                this.columnCount = base.Columns["Count"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnDatabaseName = base.Columns["DatabaseName"];
                this.columnNtUserName = base.Columns["NtUserName"];
                this.columnSqlUserName = base.Columns["SqlUserName"];
                this.columnClientComputerName = base.Columns["ClientComputerName"];
                this.columnApplicationName = base.Columns["ApplicationName"];
                this.columnAverageDuration = base.Columns["AverageDuration"];
                this.columnDuration = base.Columns["Duration"];
                this.columnCPU = base.Columns["CPU"];
                this.columnReads = base.Columns["Reads"];
                this.columnWrites = base.Columns["Writes"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSQLServerID = new System.Data.DataColumn("SQLServerID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQLServerID);
                this.columnInstanceName = new System.Data.DataColumn("InstanceName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstanceName);
                this.columnStatementText = new System.Data.DataColumn("StatementText", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementText);
                this.columnStatementType = new System.Data.DataColumn("StatementType", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementType);
                this.columnStatementID = new System.Data.DataColumn("StatementID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementID);
                this.columnStatementNumber = new System.Data.DataColumn("StatementNumber", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementNumber);
                this.columnCount = new System.Data.DataColumn("Count", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCount);
                this.columnStartTime = new System.Data.DataColumn("StartTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new System.Data.DataColumn("EndTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnDatabaseName = new System.Data.DataColumn("DatabaseName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatabaseName);
                this.columnNtUserName = new System.Data.DataColumn("NtUserName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNtUserName);
                this.columnSqlUserName = new System.Data.DataColumn("SqlUserName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSqlUserName);
                this.columnClientComputerName = new System.Data.DataColumn("ClientComputerName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientComputerName);
                this.columnApplicationName = new System.Data.DataColumn("ApplicationName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationName);
                this.columnAverageDuration = new System.Data.DataColumn("AverageDuration", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverageDuration);
                this.columnDuration = new System.Data.DataColumn("Duration", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuration);
                this.columnCPU = new System.Data.DataColumn("CPU", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPU);
                this.columnReads = new System.Data.DataColumn("Reads", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReads);
                this.columnWrites = new System.Data.DataColumn("Writes", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWrites);
                this.columnSQLServerID.AllowDBNull = false;
                this.columnInstanceName.AllowDBNull = false;
                this.columnInstanceName.MaxLength = 256;
                this.columnStatementText.MaxLength = 4000;
                this.columnStatementID.ReadOnly = true;
                this.columnStatementNumber.ReadOnly = true;
                this.columnCount.ReadOnly = true;
                this.columnStartTime.ReadOnly = true;
                this.columnEndTime.ReadOnly = true;
                this.columnDatabaseName.ReadOnly = true;
                this.columnDatabaseName.MaxLength = 256;
                this.columnNtUserName.ReadOnly = true;
                this.columnNtUserName.MaxLength = 256;
                this.columnSqlUserName.ReadOnly = true;
                this.columnSqlUserName.MaxLength = 256;
                this.columnClientComputerName.ReadOnly = true;
                this.columnClientComputerName.MaxLength = 256;
                this.columnApplicationName.ReadOnly = true;
                this.columnApplicationName.MaxLength = 256;
                this.columnAverageDuration.ReadOnly = true;
                this.columnDuration.ReadOnly = true;
                this.columnCPU.ReadOnly = true;
                this.columnReads.ReadOnly = true;
                this.columnWrites.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetWorstPerformingReportTempRow Newp_GetWorstPerformingReportTempRow() {
                return ((p_GetWorstPerformingReportTempRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new p_GetWorstPerformingReportTempRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(p_GetWorstPerformingReportTempRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.p_GetWorstPerformingReportTempRowChanged != null)) {
                    this.p_GetWorstPerformingReportTempRowChanged(this, new p_GetWorstPerformingReportTempRowChangeEvent(((p_GetWorstPerformingReportTempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.p_GetWorstPerformingReportTempRowChanging != null)) {
                    this.p_GetWorstPerformingReportTempRowChanging(this, new p_GetWorstPerformingReportTempRowChangeEvent(((p_GetWorstPerformingReportTempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.p_GetWorstPerformingReportTempRowDeleted != null)) {
                    this.p_GetWorstPerformingReportTempRowDeleted(this, new p_GetWorstPerformingReportTempRowChangeEvent(((p_GetWorstPerformingReportTempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.p_GetWorstPerformingReportTempRowDeleting != null)) {
                    this.p_GetWorstPerformingReportTempRowDeleting(this, new p_GetWorstPerformingReportTempRowChangeEvent(((p_GetWorstPerformingReportTempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removep_GetWorstPerformingReportTempRow(p_GetWorstPerformingReportTempRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                GetWorstPerformingDataSet ds = new GetWorstPerformingDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "p_GetWorstPerformingReportTempDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class p_GetMostFrequentReportTempDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSQLServerID;
            
            private System.Data.DataColumn columnInstanceName;
            
            private System.Data.DataColumn columnStatementText;
            
            private System.Data.DataColumn columnStatementType;
            
            private System.Data.DataColumn columnStatementID;
            
            private System.Data.DataColumn columnStatementNumber;
            
            private System.Data.DataColumn columnCount;
            
            private System.Data.DataColumn columnStartTime;
            
            private System.Data.DataColumn columnEndTime;
            
            private System.Data.DataColumn columnDatabaseName;
            
            private System.Data.DataColumn columnNtUserName;
            
            private System.Data.DataColumn columnSqlUserName;
            
            private System.Data.DataColumn columnClientComputerName;
            
            private System.Data.DataColumn columnApplicationName;
            
            private System.Data.DataColumn columnDuration;
            
            private System.Data.DataColumn columnCPU;
            
            private System.Data.DataColumn columnReads;
            
            private System.Data.DataColumn columnWrites;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetMostFrequentReportTempDataTable() {
                this.TableName = "p_GetMostFrequentReportTemp";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal p_GetMostFrequentReportTempDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected p_GetMostFrequentReportTempDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SQLServerIDColumn {
                get {
                    return this.columnSQLServerID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn InstanceNameColumn {
                get {
                    return this.columnInstanceName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatementTextColumn {
                get {
                    return this.columnStatementText;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatementTypeColumn {
                get {
                    return this.columnStatementType;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatementIDColumn {
                get {
                    return this.columnStatementID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StatementNumberColumn {
                get {
                    return this.columnStatementNumber;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CountColumn {
                get {
                    return this.columnCount;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StartTimeColumn {
                get {
                    return this.columnStartTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EndTimeColumn {
                get {
                    return this.columnEndTime;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DatabaseNameColumn {
                get {
                    return this.columnDatabaseName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NtUserNameColumn {
                get {
                    return this.columnNtUserName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SqlUserNameColumn {
                get {
                    return this.columnSqlUserName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ClientComputerNameColumn {
                get {
                    return this.columnClientComputerName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ApplicationNameColumn {
                get {
                    return this.columnApplicationName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DurationColumn {
                get {
                    return this.columnDuration;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CPUColumn {
                get {
                    return this.columnCPU;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ReadsColumn {
                get {
                    return this.columnReads;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn WritesColumn {
                get {
                    return this.columnWrites;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetMostFrequentReportTempRow this[int index] {
                get {
                    return ((p_GetMostFrequentReportTempRow)(this.Rows[index]));
                }
            }
            
            public event p_GetMostFrequentReportTempRowChangeEventHandler p_GetMostFrequentReportTempRowChanging;
            
            public event p_GetMostFrequentReportTempRowChangeEventHandler p_GetMostFrequentReportTempRowChanged;
            
            public event p_GetMostFrequentReportTempRowChangeEventHandler p_GetMostFrequentReportTempRowDeleting;
            
            public event p_GetMostFrequentReportTempRowChangeEventHandler p_GetMostFrequentReportTempRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Addp_GetMostFrequentReportTempRow(p_GetMostFrequentReportTempRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetMostFrequentReportTempRow Addp_GetMostFrequentReportTempRow(
                        int SQLServerID, 
                        string InstanceName, 
                        string StatementText, 
                        int StatementType, 
                        int StatementID, 
                        int StatementNumber, 
                        int Count, 
                        System.DateTime StartTime, 
                        System.DateTime EndTime, 
                        string DatabaseName, 
                        string NtUserName, 
                        string SqlUserName, 
                        string ClientComputerName, 
                        string ApplicationName, 
                        long Duration, 
                        long CPU, 
                        long Reads, 
                        long Writes) {
                p_GetMostFrequentReportTempRow rowp_GetMostFrequentReportTempRow = ((p_GetMostFrequentReportTempRow)(this.NewRow()));
                rowp_GetMostFrequentReportTempRow.ItemArray = new object[] {
                        SQLServerID,
                        InstanceName,
                        StatementText,
                        StatementType,
                        StatementID,
                        StatementNumber,
                        Count,
                        StartTime,
                        EndTime,
                        DatabaseName,
                        NtUserName,
                        SqlUserName,
                        ClientComputerName,
                        ApplicationName,
                        Duration,
                        CPU,
                        Reads,
                        Writes};
                this.Rows.Add(rowp_GetMostFrequentReportTempRow);
                return rowp_GetMostFrequentReportTempRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                p_GetMostFrequentReportTempDataTable cln = ((p_GetMostFrequentReportTempDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new p_GetMostFrequentReportTempDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSQLServerID = base.Columns["SQLServerID"];
                this.columnInstanceName = base.Columns["InstanceName"];
                this.columnStatementText = base.Columns["StatementText"];
                this.columnStatementType = base.Columns["StatementType"];
                this.columnStatementID = base.Columns["StatementID"];
                this.columnStatementNumber = base.Columns["StatementNumber"];
                this.columnCount = base.Columns["Count"];
                this.columnStartTime = base.Columns["StartTime"];
                this.columnEndTime = base.Columns["EndTime"];
                this.columnDatabaseName = base.Columns["DatabaseName"];
                this.columnNtUserName = base.Columns["NtUserName"];
                this.columnSqlUserName = base.Columns["SqlUserName"];
                this.columnClientComputerName = base.Columns["ClientComputerName"];
                this.columnApplicationName = base.Columns["ApplicationName"];
                this.columnDuration = base.Columns["Duration"];
                this.columnCPU = base.Columns["CPU"];
                this.columnReads = base.Columns["Reads"];
                this.columnWrites = base.Columns["Writes"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSQLServerID = new System.Data.DataColumn("SQLServerID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSQLServerID);
                this.columnInstanceName = new System.Data.DataColumn("InstanceName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnInstanceName);
                this.columnStatementText = new System.Data.DataColumn("StatementText", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementText);
                this.columnStatementType = new System.Data.DataColumn("StatementType", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementType);
                this.columnStatementID = new System.Data.DataColumn("StatementID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementID);
                this.columnStatementNumber = new System.Data.DataColumn("StatementNumber", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatementNumber);
                this.columnCount = new System.Data.DataColumn("Count", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCount);
                this.columnStartTime = new System.Data.DataColumn("StartTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartTime);
                this.columnEndTime = new System.Data.DataColumn("EndTime", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndTime);
                this.columnDatabaseName = new System.Data.DataColumn("DatabaseName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDatabaseName);
                this.columnNtUserName = new System.Data.DataColumn("NtUserName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNtUserName);
                this.columnSqlUserName = new System.Data.DataColumn("SqlUserName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSqlUserName);
                this.columnClientComputerName = new System.Data.DataColumn("ClientComputerName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientComputerName);
                this.columnApplicationName = new System.Data.DataColumn("ApplicationName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnApplicationName);
                this.columnDuration = new System.Data.DataColumn("Duration", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDuration);
                this.columnCPU = new System.Data.DataColumn("CPU", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCPU);
                this.columnReads = new System.Data.DataColumn("Reads", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnReads);
                this.columnWrites = new System.Data.DataColumn("Writes", typeof(long), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnWrites);
                this.columnSQLServerID.AllowDBNull = false;
                this.columnInstanceName.AllowDBNull = false;
                this.columnInstanceName.MaxLength = 256;
                this.columnStatementText.MaxLength = 4000;
                this.columnStatementID.ReadOnly = true;
                this.columnStatementNumber.ReadOnly = true;
                this.columnCount.ReadOnly = true;
                this.columnStartTime.ReadOnly = true;
                this.columnEndTime.ReadOnly = true;
                this.columnDatabaseName.ReadOnly = true;
                this.columnDatabaseName.MaxLength = 256;
                this.columnNtUserName.ReadOnly = true;
                this.columnNtUserName.MaxLength = 256;
                this.columnSqlUserName.ReadOnly = true;
                this.columnSqlUserName.MaxLength = 256;
                this.columnClientComputerName.ReadOnly = true;
                this.columnClientComputerName.MaxLength = 256;
                this.columnApplicationName.ReadOnly = true;
                this.columnApplicationName.MaxLength = 256;
                this.columnDuration.ReadOnly = true;
                this.columnCPU.ReadOnly = true;
                this.columnReads.ReadOnly = true;
                this.columnWrites.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetMostFrequentReportTempRow Newp_GetMostFrequentReportTempRow() {
                return ((p_GetMostFrequentReportTempRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new p_GetMostFrequentReportTempRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(p_GetMostFrequentReportTempRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.p_GetMostFrequentReportTempRowChanged != null)) {
                    this.p_GetMostFrequentReportTempRowChanged(this, new p_GetMostFrequentReportTempRowChangeEvent(((p_GetMostFrequentReportTempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.p_GetMostFrequentReportTempRowChanging != null)) {
                    this.p_GetMostFrequentReportTempRowChanging(this, new p_GetMostFrequentReportTempRowChangeEvent(((p_GetMostFrequentReportTempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.p_GetMostFrequentReportTempRowDeleted != null)) {
                    this.p_GetMostFrequentReportTempRowDeleted(this, new p_GetMostFrequentReportTempRowChangeEvent(((p_GetMostFrequentReportTempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.p_GetMostFrequentReportTempRowDeleting != null)) {
                    this.p_GetMostFrequentReportTempRowDeleting(this, new p_GetMostFrequentReportTempRowChangeEvent(((p_GetMostFrequentReportTempRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void Removep_GetMostFrequentReportTempRow(p_GetMostFrequentReportTempRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                GetWorstPerformingDataSet ds = new GetWorstPerformingDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "p_GetMostFrequentReportTempDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class p_GetWorstPerformingReportTempRow : System.Data.DataRow {
            
            private p_GetWorstPerformingReportTempDataTable tablep_GetWorstPerformingReportTemp;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal p_GetWorstPerformingReportTempRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablep_GetWorstPerformingReportTemp = ((p_GetWorstPerformingReportTempDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SQLServerID {
                get {
                    return ((int)(this[this.tablep_GetWorstPerformingReportTemp.SQLServerIDColumn]));
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.SQLServerIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstanceName {
                get {
                    return ((string)(this[this.tablep_GetWorstPerformingReportTemp.InstanceNameColumn]));
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.InstanceNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatementText {
                get {
                    try {
                        return ((string)(this[this.tablep_GetWorstPerformingReportTemp.StatementTextColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StatementText\' in table \'p_GetWorstPerformingReportTemp\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.StatementTextColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatementType {
                get {
                    try {
                        return ((int)(this[this.tablep_GetWorstPerformingReportTemp.StatementTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StatementType\' in table \'p_GetWorstPerformingReportTemp\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.StatementTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatementID {
                get {
                    try {
                        return ((int)(this[this.tablep_GetWorstPerformingReportTemp.StatementIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StatementID\' in table \'p_GetWorstPerformingReportTemp\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.StatementIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatementNumber {
                get {
                    try {
                        return ((int)(this[this.tablep_GetWorstPerformingReportTemp.StatementNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StatementNumber\' in table \'p_GetWorstPerformingReportTemp\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.StatementNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    try {
                        return ((int)(this[this.tablep_GetWorstPerformingReportTemp.CountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Count\' in table \'p_GetWorstPerformingReportTemp\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.CountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartTime {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablep_GetWorstPerformingReportTemp.StartTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StartTime\' in table \'p_GetWorstPerformingReportTemp\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.StartTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndTime {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablep_GetWorstPerformingReportTemp.EndTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EndTime\' in table \'p_GetWorstPerformingReportTemp\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.EndTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DatabaseName {
                get {
                    try {
                        return ((string)(this[this.tablep_GetWorstPerformingReportTemp.DatabaseNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DatabaseName\' in table \'p_GetWorstPerformingReportTemp\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.DatabaseNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NtUserName {
                get {
                    try {
                        return ((string)(this[this.tablep_GetWorstPerformingReportTemp.NtUserNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NtUserName\' in table \'p_GetWorstPerformingReportTemp\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.NtUserNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SqlUserName {
                get {
                    try {
                        return ((string)(this[this.tablep_GetWorstPerformingReportTemp.SqlUserNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SqlUserName\' in table \'p_GetWorstPerformingReportTemp\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.SqlUserNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientComputerName {
                get {
                    try {
                        return ((string)(this[this.tablep_GetWorstPerformingReportTemp.ClientComputerNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClientComputerName\' in table \'p_GetWorstPerformingReportTem" +
                                "p\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.ClientComputerNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplicationName {
                get {
                    try {
                        return ((string)(this[this.tablep_GetWorstPerformingReportTemp.ApplicationNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApplicationName\' in table \'p_GetWorstPerformingReportTemp\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.ApplicationNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long AverageDuration {
                get {
                    try {
                        return ((long)(this[this.tablep_GetWorstPerformingReportTemp.AverageDurationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'AverageDuration\' in table \'p_GetWorstPerformingReportTemp\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.AverageDurationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Duration {
                get {
                    try {
                        return ((long)(this[this.tablep_GetWorstPerformingReportTemp.DurationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Duration\' in table \'p_GetWorstPerformingReportTemp\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.DurationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CPU {
                get {
                    try {
                        return ((long)(this[this.tablep_GetWorstPerformingReportTemp.CPUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CPU\' in table \'p_GetWorstPerformingReportTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.CPUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Reads {
                get {
                    try {
                        return ((long)(this[this.tablep_GetWorstPerformingReportTemp.ReadsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Reads\' in table \'p_GetWorstPerformingReportTemp\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.ReadsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Writes {
                get {
                    try {
                        return ((long)(this[this.tablep_GetWorstPerformingReportTemp.WritesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Writes\' in table \'p_GetWorstPerformingReportTemp\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablep_GetWorstPerformingReportTemp.WritesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementTextNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.StatementTextColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementTextNull() {
                this[this.tablep_GetWorstPerformingReportTemp.StatementTextColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementTypeNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.StatementTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementTypeNull() {
                this[this.tablep_GetWorstPerformingReportTemp.StatementTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementIDNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.StatementIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementIDNull() {
                this[this.tablep_GetWorstPerformingReportTemp.StatementIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementNumberNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.StatementNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementNumberNull() {
                this[this.tablep_GetWorstPerformingReportTemp.StatementNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.CountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountNull() {
                this[this.tablep_GetWorstPerformingReportTemp.CountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.StartTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tablep_GetWorstPerformingReportTemp.StartTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.EndTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tablep_GetWorstPerformingReportTemp.EndTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatabaseNameNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.DatabaseNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatabaseNameNull() {
                this[this.tablep_GetWorstPerformingReportTemp.DatabaseNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNtUserNameNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.NtUserNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNtUserNameNull() {
                this[this.tablep_GetWorstPerformingReportTemp.NtUserNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSqlUserNameNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.SqlUserNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSqlUserNameNull() {
                this[this.tablep_GetWorstPerformingReportTemp.SqlUserNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientComputerNameNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.ClientComputerNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientComputerNameNull() {
                this[this.tablep_GetWorstPerformingReportTemp.ClientComputerNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationNameNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.ApplicationNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationNameNull() {
                this[this.tablep_GetWorstPerformingReportTemp.ApplicationNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAverageDurationNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.AverageDurationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAverageDurationNull() {
                this[this.tablep_GetWorstPerformingReportTemp.AverageDurationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDurationNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.DurationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDurationNull() {
                this[this.tablep_GetWorstPerformingReportTemp.DurationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPUNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.CPUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPUNull() {
                this[this.tablep_GetWorstPerformingReportTemp.CPUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReadsNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.ReadsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReadsNull() {
                this[this.tablep_GetWorstPerformingReportTemp.ReadsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWritesNull() {
                return this.IsNull(this.tablep_GetWorstPerformingReportTemp.WritesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWritesNull() {
                this[this.tablep_GetWorstPerformingReportTemp.WritesColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class p_GetMostFrequentReportTempRow : System.Data.DataRow {
            
            private p_GetMostFrequentReportTempDataTable tablep_GetMostFrequentReportTemp;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal p_GetMostFrequentReportTempRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tablep_GetMostFrequentReportTemp = ((p_GetMostFrequentReportTempDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SQLServerID {
                get {
                    return ((int)(this[this.tablep_GetMostFrequentReportTemp.SQLServerIDColumn]));
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.SQLServerIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string InstanceName {
                get {
                    return ((string)(this[this.tablep_GetMostFrequentReportTemp.InstanceNameColumn]));
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.InstanceNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StatementText {
                get {
                    try {
                        return ((string)(this[this.tablep_GetMostFrequentReportTemp.StatementTextColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StatementText\' in table \'p_GetMostFrequentReportTemp\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.StatementTextColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatementType {
                get {
                    try {
                        return ((int)(this[this.tablep_GetMostFrequentReportTemp.StatementTypeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StatementType\' in table \'p_GetMostFrequentReportTemp\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.StatementTypeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatementID {
                get {
                    try {
                        return ((int)(this[this.tablep_GetMostFrequentReportTemp.StatementIDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StatementID\' in table \'p_GetMostFrequentReportTemp\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.StatementIDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StatementNumber {
                get {
                    try {
                        return ((int)(this[this.tablep_GetMostFrequentReportTemp.StatementNumberColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StatementNumber\' in table \'p_GetMostFrequentReportTemp\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.StatementNumberColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Count {
                get {
                    try {
                        return ((int)(this[this.tablep_GetMostFrequentReportTemp.CountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Count\' in table \'p_GetMostFrequentReportTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.CountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime StartTime {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablep_GetMostFrequentReportTemp.StartTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StartTime\' in table \'p_GetMostFrequentReportTemp\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.StartTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime EndTime {
                get {
                    try {
                        return ((System.DateTime)(this[this.tablep_GetMostFrequentReportTemp.EndTimeColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EndTime\' in table \'p_GetMostFrequentReportTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.EndTimeColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string DatabaseName {
                get {
                    try {
                        return ((string)(this[this.tablep_GetMostFrequentReportTemp.DatabaseNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DatabaseName\' in table \'p_GetMostFrequentReportTemp\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.DatabaseNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string NtUserName {
                get {
                    try {
                        return ((string)(this[this.tablep_GetMostFrequentReportTemp.NtUserNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NtUserName\' in table \'p_GetMostFrequentReportTemp\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.NtUserNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SqlUserName {
                get {
                    try {
                        return ((string)(this[this.tablep_GetMostFrequentReportTemp.SqlUserNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'SqlUserName\' in table \'p_GetMostFrequentReportTemp\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.SqlUserNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ClientComputerName {
                get {
                    try {
                        return ((string)(this[this.tablep_GetMostFrequentReportTemp.ClientComputerNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ClientComputerName\' in table \'p_GetMostFrequentReportTemp\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.ClientComputerNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ApplicationName {
                get {
                    try {
                        return ((string)(this[this.tablep_GetMostFrequentReportTemp.ApplicationNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ApplicationName\' in table \'p_GetMostFrequentReportTemp\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.ApplicationNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Duration {
                get {
                    try {
                        return ((long)(this[this.tablep_GetMostFrequentReportTemp.DurationColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Duration\' in table \'p_GetMostFrequentReportTemp\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.DurationColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long CPU {
                get {
                    try {
                        return ((long)(this[this.tablep_GetMostFrequentReportTemp.CPUColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'CPU\' in table \'p_GetMostFrequentReportTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.CPUColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Reads {
                get {
                    try {
                        return ((long)(this[this.tablep_GetMostFrequentReportTemp.ReadsColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Reads\' in table \'p_GetMostFrequentReportTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.ReadsColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public long Writes {
                get {
                    try {
                        return ((long)(this[this.tablep_GetMostFrequentReportTemp.WritesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Writes\' in table \'p_GetMostFrequentReportTemp\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tablep_GetMostFrequentReportTemp.WritesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementTextNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.StatementTextColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementTextNull() {
                this[this.tablep_GetMostFrequentReportTemp.StatementTextColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementTypeNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.StatementTypeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementTypeNull() {
                this[this.tablep_GetMostFrequentReportTemp.StatementTypeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementIDNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.StatementIDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementIDNull() {
                this[this.tablep_GetMostFrequentReportTemp.StatementIDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStatementNumberNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.StatementNumberColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStatementNumberNull() {
                this[this.tablep_GetMostFrequentReportTemp.StatementNumberColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCountNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.CountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCountNull() {
                this[this.tablep_GetMostFrequentReportTemp.CountColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartTimeNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.StartTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartTimeNull() {
                this[this.tablep_GetMostFrequentReportTemp.StartTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndTimeNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.EndTimeColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndTimeNull() {
                this[this.tablep_GetMostFrequentReportTemp.EndTimeColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDatabaseNameNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.DatabaseNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDatabaseNameNull() {
                this[this.tablep_GetMostFrequentReportTemp.DatabaseNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNtUserNameNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.NtUserNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNtUserNameNull() {
                this[this.tablep_GetMostFrequentReportTemp.NtUserNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSqlUserNameNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.SqlUserNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSqlUserNameNull() {
                this[this.tablep_GetMostFrequentReportTemp.SqlUserNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsClientComputerNameNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.ClientComputerNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetClientComputerNameNull() {
                this[this.tablep_GetMostFrequentReportTemp.ClientComputerNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsApplicationNameNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.ApplicationNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetApplicationNameNull() {
                this[this.tablep_GetMostFrequentReportTemp.ApplicationNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDurationNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.DurationColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDurationNull() {
                this[this.tablep_GetMostFrequentReportTemp.DurationColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCPUNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.CPUColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCPUNull() {
                this[this.tablep_GetMostFrequentReportTemp.CPUColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsReadsNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.ReadsColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetReadsNull() {
                this[this.tablep_GetMostFrequentReportTemp.ReadsColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsWritesNull() {
                return this.IsNull(this.tablep_GetMostFrequentReportTemp.WritesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetWritesNull() {
                this[this.tablep_GetMostFrequentReportTemp.WritesColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class p_GetWorstPerformingReportTempRowChangeEvent : System.EventArgs {
            
            private p_GetWorstPerformingReportTempRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetWorstPerformingReportTempRowChangeEvent(p_GetWorstPerformingReportTempRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetWorstPerformingReportTempRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class p_GetMostFrequentReportTempRowChangeEvent : System.EventArgs {
            
            private p_GetMostFrequentReportTempRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetMostFrequentReportTempRowChangeEvent(p_GetMostFrequentReportTempRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public p_GetMostFrequentReportTempRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace Idera.SQLdm.DesktopClient.Views.Reports.GetWorstPerformingDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class p_GetWorstPerformingReportTempTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public p_GetWorstPerformingReportTempTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "p_GetWorstPerformingReportTemp";
            tableMapping.ColumnMappings.Add("SQLServerID", "SQLServerID");
            tableMapping.ColumnMappings.Add("InstanceName", "InstanceName");
            tableMapping.ColumnMappings.Add("StatementText", "StatementText");
            tableMapping.ColumnMappings.Add("StatementType", "StatementType");
            tableMapping.ColumnMappings.Add("StatementID", "StatementID");
            tableMapping.ColumnMappings.Add("StatementNumber", "StatementNumber");
            tableMapping.ColumnMappings.Add("Count", "Count");
            tableMapping.ColumnMappings.Add("StartTime", "StartTime");
            tableMapping.ColumnMappings.Add("EndTime", "EndTime");
            tableMapping.ColumnMappings.Add("DatabaseName", "DatabaseName");
            tableMapping.ColumnMappings.Add("NtUserName", "NtUserName");
            tableMapping.ColumnMappings.Add("SqlUserName", "SqlUserName");
            tableMapping.ColumnMappings.Add("ClientComputerName", "ClientComputerName");
            tableMapping.ColumnMappings.Add("ApplicationName", "ApplicationName");
            tableMapping.ColumnMappings.Add("AverageDuration", "AverageDuration");
            tableMapping.ColumnMappings.Add("Duration", "Duration");
            tableMapping.ColumnMappings.Add("CPU", "CPU");
            tableMapping.ColumnMappings.Add("Reads", "Reads");
            tableMapping.ColumnMappings.Add("Writes", "Writes");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=MLAURITSENL2;Initial Catalog=SQLdmRepository;Integrated Security=True" +
                "";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.p_GetWorstPerformingReportTemp";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GetWorstPerformingDataSet.p_GetWorstPerformingReportTempDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GetWorstPerformingDataSet.p_GetWorstPerformingReportTempDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GetWorstPerformingDataSet.p_GetWorstPerformingReportTempDataTable dataTable = new GetWorstPerformingDataSet.p_GetWorstPerformingReportTempDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class p_GetMostFrequentReportTempTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public p_GetMostFrequentReportTempTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "p_GetMostFrequentReportTemp";
            tableMapping.ColumnMappings.Add("SQLServerID", "SQLServerID");
            tableMapping.ColumnMappings.Add("InstanceName", "InstanceName");
            tableMapping.ColumnMappings.Add("StatementText", "StatementText");
            tableMapping.ColumnMappings.Add("StatementType", "StatementType");
            tableMapping.ColumnMappings.Add("StatementID", "StatementID");
            tableMapping.ColumnMappings.Add("StatementNumber", "StatementNumber");
            tableMapping.ColumnMappings.Add("Count", "Count");
            tableMapping.ColumnMappings.Add("StartTime", "StartTime");
            tableMapping.ColumnMappings.Add("EndTime", "EndTime");
            tableMapping.ColumnMappings.Add("DatabaseName", "DatabaseName");
            tableMapping.ColumnMappings.Add("NtUserName", "NtUserName");
            tableMapping.ColumnMappings.Add("SqlUserName", "SqlUserName");
            tableMapping.ColumnMappings.Add("ClientComputerName", "ClientComputerName");
            tableMapping.ColumnMappings.Add("ApplicationName", "ApplicationName");
            tableMapping.ColumnMappings.Add("Duration", "Duration");
            tableMapping.ColumnMappings.Add("CPU", "CPU");
            tableMapping.ColumnMappings.Add("Reads", "Reads");
            tableMapping.ColumnMappings.Add("Writes", "Writes");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = "Data Source=MLAURITSENL2;Initial Catalog=SQLdmRepository;Integrated Security=True" +
                "";
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.p_GetMostFrequentReportTemp";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(GetWorstPerformingDataSet.p_GetMostFrequentReportTempDataTable dataTable) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual GetWorstPerformingDataSet.p_GetMostFrequentReportTempDataTable GetData() {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            GetWorstPerformingDataSet.p_GetMostFrequentReportTempDataTable dataTable = new GetWorstPerformingDataSet.p_GetMostFrequentReportTempDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591