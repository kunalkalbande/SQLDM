// generated file - no tweaking by hand...


public enum class Facility : DWORD
{
    System = FACILITY_SYSTEM,
    General = FACILITY_GENERAL,
    Management = FACILITY_MANAGEMENT,
    Collection = FACILITY_COLLECTION,
    Client = FACILITY_CLIENT,
    Database = FACILITY_DATABASE,
    None = FACILITY_NONE
};

public enum class Severity : DWORD
{
    Success = STATUS_SEVERITY_SUCCESS,
    Informational = STATUS_SEVERITY_INFORMATIONAL,
    Warning = STATUS_SEVERITY_WARNING,
    Error = STATUS_SEVERITY_ERROR
};

public enum class Category : DWORD 
{
    General = CATEGORY_GENERAL,
    Audit = CATEGORY_AUDIT,
    Alert = CATEGORY_ALERT,
    Custom = CATEGORY_CUSTOM
};

public enum class Status : DWORD 
{
    SuccessGeneric = MSG_SUCCESS_GENERIC,
    Cpu = MSG_CPU,
    Connections = MSG_Connections,
    Tempdb = MSG_TempDB,
    Maxthreads = MSG_MaxThreads,
    Currentthreads = MSG_CurrentThreads,
    Raslots = MSG_RASlots,
    Nondistributed = MSG_NonDistributed,
    Nonsubscribed = MSG_NonSubscribed,
    Opentran = MSG_OpenTran,
    Reorg = MSG_Reorg,
    Dbsize = MSG_DBSize,
    Logfileautogrow = MSG_LogFileAutogrow,
    Datafileautogrow = MSG_DataFileAutogrow,
    Logsize = MSG_LogSize,
    Execrunning = MSG_ExecRunning,
    Execstopped = MSG_ExecStopped,
    Execother = MSG_ExecOther,
    Io = MSG_IO,
    Serverrunning = MSG_ServerRunning,
    Serverstopped = MSG_ServerStopped,
    Serverpaused = MSG_ServerPaused,
    Notadmin = MSG_NotAdmin,
    Servernotaccessible = MSG_ServerNotAccessible,
    Serverother = MSG_ServerOther,
    Memory = MSG_Memory,
    Dbstatus = MSG_DBStatus,
    Applicationstarted = MSG_ApplicationStarted,
    Applicationstopped = MSG_ApplicationStopped,
    Nonsubscribedtime = MSG_NonSubscribedTime,
    Dtcrunning = MSG_DTCRunning,
    Dtcstopped = MSG_DTCStopped,
    Dtcother = MSG_DTCOther,
    Fulltextrunning = MSG_FullTextRunning,
    Fulltextother = MSG_FullTextOther,
    Serverresponsetime = MSG_ServerResponseTime,
    Urlconnectionfailed = MSG_URLConnectionFailed,
    Urltimeout = MSG_URLTimeout,
    Resourcelimit = MSG_ResourceLimit,
    Blockingprocess = MSG_BlockingProcess,
    Deadlock = MSG_Deadlock,
    Longrunningjob = MSG_LongRunningJob,
    Bombedjob = MSG_BombedJob,
    Jobcompletion = MSG_JobCompletion,
    Maintenancemodestart = MSG_MaintenanceModeStart,
    Maintenancemodeend = MSG_MaintenanceModeEnd,
    Osmetricsstatusavail = MSG_OSMetricsStatusAvail,
    Osmetricsstatusother = MSG_OSMetricsStatusOther,
    Osmetricsstatusdisabled = MSG_OSMetricsStatusDisabled,
    Osmetricsstatusunavail = MSG_OSMetricsStatusUnavail,
    Osmemoryusedpct = MSG_OSMemoryUsedPct,
    Osmemorypagespersecond = MSG_OSMemoryPagesPerSecond,
    Oscpuprocessortime = MSG_OSCPUProcessorTime,
    Oscpuprivilegedtime = MSG_OSCPUPrivilegedTime,
    Oscpuusertime = MSG_OSCPUUserTime,
    Oscpuprocessorqueuelength = MSG_OSCPUProcessorQueueLength,
    Osdiskphysicaldisktime = MSG_OSDiskPhysicalDiskTime,
    Osdiskaveragediskqueuelength = MSG_OSDiskAverageDiskQueueLength,
    Osdiskfull = MSG_OSDiskFull,
    Osdisktimeperdisk = MSG_OSDiskTimePerDisk,
    Osdiskaveragediskqueuelengthperdisk = MSG_OSDiskAverageDiskQueueLengthPerDisk,
    Pagelifeexpectancy = MSG_PageLifeExpectancy,
    Proccachehitratio = MSG_ProcCacheHitRatio,
    Avgdiskmillisecondswrite = MSG_AvgDiskMillisecondsWrite,
    Avgdiskmillisecondstransfer = MSG_AvgDiskMillisecondsTransfer,
    Avgdiskmillisecondsread = MSG_AvgDiskMillisecondsRead,
    Diskreadspersecond = MSG_DiskReadsPerSecond,
    Disktransferspersecond = MSG_DiskTransfersPerSecond,
    Diskwritespersecond = MSG_DiskWritesPerSecond,
    Clrstatus = MSG_CLRStatus,
    Automationstatus = MSG_AutomationStatus,
    Querymonitorstatus = MSG_QueryMonitorStatus,
    Collectionservicestatus = MSG_CollectionServiceStatus,
    Managementservicestatus = MSG_ManagementServiceStatus,
    Agentxpstatus = MSG_AgentXPStatus,
    Wmistatus = MSG_WMIStatus,
    Xpcommandshellstatus = MSG_XPCommandShellStatus,
    Clientcomputers = MSG_ClientComputers,
    Blockingsessions = MSG_BlockingSessions,
    Datausedpercent = MSG_DataUsedPercent,
    Logusedpercent = MSG_LogUsedPercent,
    Customcounter = MSG_CustomCounter,
    Customcountererror = MSG_CustomCounterError,
    Errorlog = MSG_ErrorLog,
    Agentlog = MSG_AgentLog,
    Clusterfailover = MSG_ClusterFailover,
    Preferredclusternode = MSG_PreferredClusterNode,
    ManagementServiceStart = MSG_MANAGEMENT_SERVICE_START,
    ManagementServiceStop = MSG_MANAGEMENT_SERVICE_STOP,
    CollectionServiceStart = MSG_COLLECTION_SERVICE_START,
    CollectionServiceStop = MSG_COLLECTION_SERVICE_STOP,
    ManagementServiceStopFatal = MSG_MANAGEMENT_SERVICE_STOP_FATAL,
    CollectionServiceStopFatal = MSG_COLLECTION_SERVICE_STOP_FATAL,
    ManagementServiceRemotingConfigError = MSG_MANAGEMENT_SERVICE_REMOTING_CONFIG_ERROR,
    CollectionServiceRemotingConfigError = MSG_COLLECTION_SERVICE_REMOTING_CONFIG_ERROR,
    PredictiveAnalyticsDisabled = MSG_PREDICTIVE_ANALYTICS_DISABLED,
    PredictiveAnalyticsEnabled = MSG_PREDICTIVE_ANALYTICS_ENABLED,
    ErrorArgumentRequired = MSG_ERROR_ARGUMENT_REQUIRED,
    ErrorArgumentInvalid = MSG_ERROR_ARGUMENT_INVALID,
    ErrorRequestTimeout = MSG_ERROR_REQUEST_TIMEOUT,
    ErrorUnknown = MSG_ERROR_UNKNOWN,
    ErrorInvalidManagementServiceId = MSG_ERROR_INVALID_MANAGEMENT_SERVICE_ID,
    ErrorInvalidCollectionServiceId = MSG_ERROR_INVALID_COLLECTION_SERVICE_ID,
    ErrorSmtpProviderError = MSG_ERROR_SMTP_PROVIDER_ERROR,
    ErrorInvalidMonitoredServerId = MSG_ERROR_INVALID_MONITORED_SERVER_ID,
    ErrorLicenseViolationId = MSG_ERROR_LICENSE_VIOLATION_ID,
    LicenseExpirationWarningId = MSG_LICENSE_EXPIRATION_WARNING_ID,
    ErrorRepositoryTestFailed = MSG_ERROR_REPOSITORY_TEST_FAILED,
    ErrorConfigInvalid = MSG_ERROR_CONFIG_INVALID,
    ErrorConfigFoobar = MSG_ERROR_CONFIG_FOOBAR,
    RepositoryTestPassed = MSG_REPOSITORY_TEST_PASSED,
    ErrorUnauthorizedAccessException = MSG_ERROR_UNAUTHORIZED_ACCESS_EXCEPTION,
    ErrorRepositoryError = MSG_ERROR_REPOSITORY_ERROR,
    MonitoredServerAdded = MSG_MONITORED_SERVER_ADDED,
    MonitoredServerRemoved = MSG_MONITORED_SERVER_REMOVED,
    MonitoredServerDeleted = MSG_MONITORED_SERVER_DELETED,
    MonitoredServerChanged = MSG_MONITORED_SERVER_CHANGED,
    TaskChanged = MSG_TASK_CHANGED,
    Unsentlogthreshold = MSG_UnsentLogThreshold,
    Unrestoredlog = MSG_UnrestoredLog,
    Oldestunsentmirroringtran = MSG_OldestUnsentMirroringTran,
    Mirrorcommitoverhead = MSG_MirrorCommitOverhead,
    Mirroringsessionsstatus = MSG_MirroringSessionsStatus,
    Mirroringsessionnonpreferredconfig = MSG_MirroringSessionNonPreferredConfig,
    Mirroringsessionrolechange = MSG_MirroringSessionRoleChange,
    Mirroringwitnessconnection = MSG_MirroringWitnessConnection,
    Nondistributedtime = MSG_NonDistributedTime,
    Versionstoregenerationratio = MSG_VersionStoreGenerationRatio,
    Versionstoresize = MSG_VersionStoreSize,
    Tempdbcontention = MSG_TempdbContention,
    Longrunningversionstoretransaction = MSG_LongRunningVersionStoreTransaction,
    Sessiontempdbspaceusage = MSG_SessionTempdbSpaceUsage,
    Vmconfigchange = MSG_VmConfigChange,
    Vmhostserverchange = MSG_VmHostServerChange,
    Vmcpuutilization = MSG_VmCPUUtilization,
    Vmesxcpuutilization = MSG_VmESXCPUUtilization,
    Vmmemoryutilization = MSG_VmMemoryUtilization,
    Vmesxmemoryusage = MSG_VmESXMemoryUsage,
    Vmcpureadywaittime = MSG_VmCPUReadyWaitTime,
    Vmreclaimedmemory = MSG_VmReclaimedMemory,
    Vmmemoryswapdelaydetected = MSG_VmMemorySwapDelayDetected,
    Vmesxmemoryswapdetected = MSG_VmESXMemorySwapDetected,
    Vmresourcelimits = MSG_VmResourceLimits,
    Vmpowerstate = MSG_VmPowerState,
    Vmesxpowerstate = MSG_VmESXPowerState,
    Dbsizemb = MSG_DbSizeMb,
    Tranlogsizemb = MSG_TranLogSizeMb,
    Osdiskfreemb = MSG_OsDiskFreeMb,
    Alwaysonavailabilitygrouprolechange = MSG_AlwaysOnAvailabilityGroupRoleChange,
    Alwaysonestimateddatalosstime = MSG_AlwaysOnEstimatedDataLossTime,
    Alwaysonsynchronizationhealthstate = MSG_AlwaysOnSynchronizationHealthState,
    Alwaysonestimatedrecoverytime = MSG_AlwaysOnEstimatedRecoveryTime,
    Alwaysonsynchronizationperformance = MSG_AlwaysOnSynchronizationPerformance,
    Alwaysonlogsendqueuesize = MSG_AlwaysOnLogSendQueueSize,
    Alwaysonredoqueuesize = MSG_AlwaysOnRedoQueueSize,
    Alwaysonredorate = MSG_AlwaysOnRedoRate
};

