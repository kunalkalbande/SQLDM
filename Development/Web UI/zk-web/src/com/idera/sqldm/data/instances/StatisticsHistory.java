package com.idera.sqldm.data.instances;

import java.util.Date;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.idera.common.rest.DataContractDateDeserializer;
import com.idera.common.rest.DataContractUtcDateSerializer;

/**WARNING: If regenerating this file, must copy marked methods which wont be autogenerated. *******************/
public class StatisticsHistory {

	@JsonProperty("OSAvailableMemoryInKilobytes")
	private Float OSAvailableMemoryInKilobytes = 0.0f;

	@JsonProperty("CPUActivityPercentage")
	private Float CPUActivityPercentage  = 0.0f;

	@JsonProperty("DiskTimePercent")
	private Float DiskTimePercent = 0.0f;

	@JsonProperty("UTCCollectionDateTime")
	@JsonDeserialize(using = DataContractDateDeserializer.class)
	@JsonSerialize(using = DataContractUtcDateSerializer.class)	
	private Date UTCCollectionDateTime;

	@JsonProperty("ReponseTimeinMilliSeconds")
	private Integer ReponseTimeinMilliSeconds = 0;

	@JsonProperty("OSTotalPhysicalMemoryInKilobytes")
	private Float OSTotalPhysicalMemoryInKilobytes = 0.0f;

	@JsonProperty("SqlMemoryUsedInKilobytes")
	private Float SqlMemoryUsedInKilobytes = 0.0f;

	@JsonProperty("SqlMemoryAllocatedInKilobytes")
	private Float SqlMemoryAllocatedInKilobytes = 0.0f;

	@JsonProperty("IdlePercentage")
	private Float IdlePercentage = 0.0f;

	public Float getOSAvailableMemoryInKilobytes() {
		if (OSAvailableMemoryInKilobytes == null) {
			return 0.0f;
		}
		return OSAvailableMemoryInKilobytes;
	}

	public Float getCPUActivityPercentage() {
		return CPUActivityPercentage;
	}

	public Float getDiskTimePercent() {
		return DiskTimePercent;
	}

	public Date getUTCCollectionDateTime() {
		return UTCCollectionDateTime;
	}

	public Integer getReponseTimeinMilliSeconds() {
		return ReponseTimeinMilliSeconds;
	}

	public Float getOSTotalPhysicalMemoryInKilobytes() {
		if (OSTotalPhysicalMemoryInKilobytes == null) {
			return 0.0f;
		}
		return OSTotalPhysicalMemoryInKilobytes;
	}

	/**
	 * NOT AUTOGENERATED
	 * @return
	 */
	public Float getOSPhysicalMemoryUsageInMB() {
		if(OSTotalPhysicalMemoryInKilobytes == null) {
			return 0F;
		} else if(OSAvailableMemoryInKilobytes == null){
			OSAvailableMemoryInKilobytes = 0F;
		}
		return (OSTotalPhysicalMemoryInKilobytes - OSAvailableMemoryInKilobytes) / 1024;
	}	
	public Float getSqlMemoryUsedInKilobytes() {
		return SqlMemoryUsedInKilobytes;
	}

	public Float getSqlMemoryAllocatedInKilobytes() {
		return SqlMemoryAllocatedInKilobytes;
	}

	public Float getIdlePercentage() {
		return IdlePercentage;
	}

}
