<ManagementPack ContentReadable="true" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Manifest>
    <Identity>
      <ID>Idera.SQLDM</ID>
      <Version>1.0.14.34</Version>
    </Identity>
    <Name>Idera.SQLDM</Name>
    <References>
      <Reference Alias="SCDW">
        <ID>Microsoft.SystemCenter.DataWarehouse.Library</ID>
        <Version>6.1.7221.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="SC">
        <ID>Microsoft.SystemCenter.Library</ID>
        <Version>6.1.7221.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Windows">
        <ID>Microsoft.Windows.Library</ID>
        <Version>6.1.7221.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="Health">
        <ID>System.Health.Library</ID>
        <Version>6.1.7221.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
      <Reference Alias="System">
        <ID>System.Library</ID>
        <Version>6.1.7221.0</Version>
        <PublicKeyToken>31bf3856ad364e35</PublicKeyToken>
      </Reference>
    </References>
  </Manifest>
  <TypeDefinitions>
    <EntityTypes>
      <ClassTypes>
        <ClassType ID="Idera.SQLDM.DMservice" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.LocalApplication" Hosted="true" Singleton="false">
          <Property ID="Version" Type="string" Key="false" CaseSensitive="false" MinLength="0" Length="256" />
          <Property ID="DmPath" Type="string" Key="false" CaseSensitive="false" MinLength="0" Length="256" />
          <Property ID="DmDatabase" Type="string" Key="false" CaseSensitive="false" MinLength="0" Length="256" />
        </ClassType>
        <ClassType ID="Idera.SQLDM.SqlInstance" Accessibility="Public" Abstract="false" Base="Windows!Microsoft.Windows.ApplicationComponent" Hosted="true" Singleton="false">
          <Property ID="InstanceName" Type="string" Key="true" CaseSensitive="false" MinLength="0" Length="256" />
          <Property ID="RealServerName" Type="string" Key="false" CaseSensitive="false" MinLength="0" Length="256" />
          <Property ID="ServerVersion" Type="string" Key="false" CaseSensitive="false" MinLength="0" Length="256" />
          <Property ID="ServerEdition" Type="string" Key="false" CaseSensitive="false" MinLength="0" Length="256" />
          <Property ID="MaintenanceModeEnabled" Type="bool" Key="false" CaseSensitive="false" MinLength="0" Length="1" />
        </ClassType>
      </ClassTypes>
      <RelationshipTypes>
        <RelationshipType ID="Idera.SQLDM.SqldmHostsSqlInstance" Accessibility="Internal" Abstract="false" Base="System!System.Hosting">
          <Source>Idera.SQLDM.DMservice</Source>
          <Target>Idera.SQLDM.SqlInstance</Target>
        </RelationshipType>
      </RelationshipTypes>
    </EntityTypes>
    <ModuleTypes>
      <DataSourceModuleType ID="Idera.SQLDM.DataSource.SqlInst.AlertCounts" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="InstanceName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="SchedScript" TypeID="Idera.SQLDM.Timed.PoSh.PropertyBagProvider">
                <Debug>$Config/Debug$</Debug>
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Property[@Name='InstanceName']</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">$Config/InstanceName$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Filter">
                <Node ID="SchedScript" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Idera.SQLDM.DataSource.SqlInst.AlertData" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="InstanceName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="string" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="SchedPoll" TypeID="Idera.SQLDM.Timed.PoSH.DMalert.Poller">
                <Debug>$Config/Debug$</Debug>
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Property[@Name='InstanceName']</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">$Config/InstanceName$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Filter">
                <Node ID="SchedPoll" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Idera.SQLDM.DataSource.SqlInst.AlertData.MapToEvent" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="InstanceName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="string" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="InstAlerts" TypeID="Idera.SQLDM.DataSource.SqlInst.AlertData">
                <Debug>$Config/Debug$</Debug>
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <InstanceName>$Config/InstanceName$</InstanceName>
              </DataSource>
              <ConditionDetection ID="Mapper" TypeID="System!System.Event.GenericDataMapper">
                <EventOriginId>$MPElement$</EventOriginId>
                <PublisherId>$MPElement$</PublisherId>
                <PublisherName>$Data/Property[@Name='Heading']$</PublisherName>
                <Channel>SQL DM</Channel>
                <LoggingComputer>$Target/Host/Host/Property[Type='Windows!Microsoft.Windows.Computer']/NetworkName$</LoggingComputer>
                <EventNumber>$Data/Property[@Name='Metric']$</EventNumber>
                <EventCategory>0</EventCategory>
                <EventLevel>$Data/Property[@Name='OMSeverity']$</EventLevel>
                <UserName>None</UserName>
                <Description><![CDATA[%11]]></Description>
                <Params>
                  <Param>$Data/Property[@Name='InstanceName']$</Param>
                  <Param>$Data/Property[@Name='OccurredUTC']$</Param>
                  <Param>$Data/Property[@Name='DBName']$</Param>
                  <Param>$Data/Property[@Name='TblName']$</Param>
                  <Param>$Data/Property[@Name='Severity']$</Param>
                  <Param>$Data/Property[@Name='SevString']$</Param>
                  <Param>$Data/Property[@Name='SevChange']$</Param>
                  <Param>$Data/Property[@Name='SevChangeStr']$</Param>
                  <Param>$Data/Property[@Name='Value']$</Param>
                  <Param>$Data/Property[@Name='Heading']$</Param>
                  <Param>$Data/Property[@Name='Message']$</Param>
                </Params>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Mapper">
                <Node ID="InstAlerts" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Event.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Idera.SQLDM.DMalert.MapToEvent.DataSource" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="string" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Poller" TypeID="Idera.SQLDM.Timed.PoSH.DMalert.Poller">
                <Debug>$Config/Debug$</Debug>
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ConditionDetection ID="Mapper" TypeID="System!System.Event.GenericDataMapper">
                <EventOriginId>$MPElement$</EventOriginId>
                <PublisherId>$MPElement$</PublisherId>
                <PublisherName>$Data/Property[@Name='InstanceName']$</PublisherName>
                <Channel>SQL DM</Channel>
                <LoggingComputer>$Target/Host/Property[Type='Windows!Microsoft.Windows.Computer']/NetworkName$</LoggingComputer>
                <EventNumber>$Data/Property[@Name='Metric']$</EventNumber>
                <EventCategory>0</EventCategory>
                <EventLevel>$Data/Property[@Name='OMSeverity']$</EventLevel>
                <UserName>None</UserName>
                <Description>$Data/Property[@Name='Message']$</Description>
                <Params>
                  <Param>$Data/Property[@Name='InstanceName']$</Param>
                  <Param>$Data/Property[@Name='OccurredUTC']$</Param>
                  <Param>$Data/Property[@Name='DBName']$</Param>
                  <Param>$Data/Property[@Name='TblName']$</Param>
                  <Param>$Data/Property[@Name='Severity']$</Param>
                  <Param>$Data/Property[@Name='SevString']$</Param>
                  <Param>$Data/Property[@Name='SevChange']$</Param>
                  <Param>$Data/Property[@Name='SevChangeStr']$</Param>
                  <Param>$Data/Property[@Name='Value']$</Param>
                  <Param>$Data/Property[@Name='Heading']$</Param>
                </Params>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Mapper">
                <Node ID="Poller" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Event.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Idera.SQLDM.Timed.PoSH.DMalert.Poller" Accessibility="Internal" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="string" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Timer" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Script" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>SqlInstanceEvents.ps1</ScriptName>
                <ScriptBody>
                  <![CDATA[
# Display all alerts (first time with 24 hours and max count 300)
# Repeat this process each 2 min -&amp;gt; 120 seconds
# Prevent error messages about DM MP in Event Viewer log
# Display data in Alerts view

#==================================================================================
# Script: 	SqlInstanceEvents.ps1
# Date:		1/2/13	
# Author: 	Martin Dey, Xtreme Consulting
# Purpose:	Checvcs 
#the Alerts counts for all currently monitored SQL instances
#			and outputs their counts in a property 
#bag per instance
#==================================================================================

param($dmDb, $dmPath)

#Constants used for event logging
$debug = $true
$SCRIPT_NAME			= 'SqlInstanceEvents.vbs'
$EVENT_LEVEL_ERROR 		= 1
$EVENT_LEVEL_WARNING 	= 2
$EVENT_LEVEL_INFO 		= 4
$SCRIPT_STARTED			= 831
$PROPERTYBAG_CREATED	= 832
$DUMMY_PROPERTYBAG      = 833
$SCRIPT_ENDED			= 835
$SCRIPT_FAILED          = 839

#==================================================================================
# Sub:       Log-TxtFile
# Purpose:   Logs an informational event to TXT log file, only 
#            if Debug key is true in Windows Registry &amp;gt;&amp;gt; SQLdm
#==================================================================================
function
Log-TxtFile {
param($logPath, $message)

$currentDate = Get-Date;
$logFile = $currentDate.ToString("yyyy-MM-dd")

$logFile = "\Logs\SQLdm_MP_" + $logFile + ".log"
if (Test-Path  ($logPath + $logFile)) {
Add-Content ($logPath + $logFile) ("`n" + $currentDate + " - " + $SCRIPT_NAME + " - " + $message)
}
else {
Set-Content ($logPath + $logFile) ("`n" + $currentDate + " - " + $SCRIPT_NAME + " - " + $message)
}

}

#==================================================================================
#Sub:		Log-DebugEvent
# Purpose:	Logs an informational event to the Operations Manager event log

#only if Debug argument is true
#==================================================================================
function
Log-DebugEvent
{
param($eventNo,$message,$logPath)
$debugTxt=$true
if ($debugTxt -eq $true){
Log-TxtFile $logPath $message
}

$message = "`n" + $message
if ($debug -eq $true)
{
$api.LogScriptEvent($SCRIPT_NAME,$eventNo,$EVENT_LEVEL_INFO,$message)

}
}

#==================================================================================
# Sub:Get-SqlQuery
# Purpose:    Runs a SQL Query using the SqlClient data library
# Returns:    A powershell variation on a data table - an object array with a count,
#             followed by a series of DataRow objects.
#==================================================================================
function
Get-SqlQuery($connstr, $querydm) {
$conn = New-Object System.Data.SqlClient.SQLConnection
$conn.ConnectionString= $connstr
$conn.Open()
$cmd = New-Object System.Data.SqlClient.SqlCommand($querydm, $conn)

$cmd.CommandTimeout = 120
$dset = New-Object System.Data.DataSet
$da = New-Object System.Data.SqlClient.SqlDataAdapter($cmd)

$da.fill($dset)
$conn.Close()
return $dset
}

#==================================================================================
#Sub:		Get-NonNull
# Purpose:	If the passed value is DBNull then return the string "(null)"
# Returns:The input ior a string "(null)"
#==================================================================================
function
Get-NonNull( $in ) {
if ($in.GetType().Name -eq 'DBNull') {
$out = "(null)"
} else {

$out = $in
}
return $out
}

#==================================================================================
#Sub:        Get-DmServerInstance
# Purpose:    Read 'SQLdmManagementService.exe.Config' file to get DMserver instance
# Returns:    The serverInstance as a string
#==================================================================================
function
Get-DmServerInstance( $dmPath ) {

[xml]$dmxml = (Get-Content ($dmPath + "SQLdmManagementService.exe.Config"))

$serverInstance = $dmxml.SelectSingleNode("/configuration/Idera.SQLdm/Services/ManagementService/@repositoryServer").Value

return $serverInstance
}

#DEBUG MODE
$debugTxt = (Get-ItemProperty "HKLM:\SOFTWARE\Idera\SQLdm").FlagLog

#GET MOM SCRIPTING OBJECT
# Start by setting up API object and creating a discovery data object.
$api= New-Object -comObject 'MOM.ScriptAPI'
Log-DebugEvent $SCRIPT_STARTED 'Creating MOMScriptAPI object: This object is the top-level object for the scripting API.' $dmPath

$messageParam = @"
Input parameters

SQLdm - Database name    :  {0}
SQLdm - Installation path:  {1}
"@
Log-DebugEvent $SCRIPT_STARTED ($messageParam -f $dmDb, $dmPath) $dmPath

# DEFINE TRAP TO CAPTURE ERRORS
# Trap statement will catch enay Exceptions and send details to the event log before exiting
# We always send direct to the eventlog - overriding the $debug flag - so we always log errors
trap {
$tmsg = "SQL DM Instance EventScript experienced an exception:`n`n$_"
Log-DebugEvent $SCRIPT_FAILED $tmsg $dmPath
$api.LogScriptEvent($SCRIPT_NAME,$SCRIPT_FAILED, $EVENT_LEVEL_ERROR, $tmsg)
exit
}

# STATIC STRING DEFINITIONS
# Set up the SQL queriesand strings we will need later
$dmServerInstance = (Get-DmServerInstance $dmPath)
$connstr = "Server={0};Database={1};Integrated Security=True" -f $dmServerInstance, $dmDb

$sqltmp  = @"
SELECT  [AlertID]
 ,[UTCOccurrenceDateTime]
 
,[ServerName]
 ,isnull([DatabaseName], 'N/A') as [DatabaseName]
 ,isnull([TableName], 'N/A') as [TableName]
 
,[Metric]
 ,[Severity]
 ,[StateEvent]
 ,[Value]
 ,isnull([Heading], 'N/A') as [Heading]
 ,isnull([Message], 
'N/A') as [Message]
 FROM [dbo].[Alerts]
      JOIN [dbo].[MonitoredSQLServers]
      ON [dbo].[Alerts].[ServerName] 
= [dbo].[MonitoredSQLServers].[InstanceName]
	  JOIN (SELECT DISTINCT SCOMAlertEvent.MetricID, SCOMAlertEvent.IsInSCOMAsAlert FROM SCOMAlertEvent) SAE ON SAE.MetricID = [Alerts].Metric
 WHERE ([UTCOccurrenceDateTime] BETWEEN '{0}' AND '{1}') 
AND [dbo].[MonitoredSQLServers].[Active] = 1
       AND [ServerName] IS NOT NULL AND ([StateEvent] NOT 
IN ( 0x22, 0x44, 0x52 ))
AND SAE.IsInSCOMAsAlert = 0
 ORDER BY [UTCOccurrenceDateTime] DESC
"@

# GET MOM REGISTRY AREA
# This callpulls a guaranteed unique Reg key for this monitor so we can save the last time we gathered events
Log-DebugEvent $EVENT_LEVEL_INFO 'Calling to MOMScriptAPI.GetScriptStateKeyPath method.' $dmPath
$regpath = $api.GetScriptStateKeyPath("Idera.SQLDM")

#CHeck if there is a "LastEventImport" timestamp stored
if ((get-itemproperty "HKLM:\$regpath" LastEventImportTime -ea 0).LastEventImportTime) {
# We have found the last time we imported Alerts as events, so save that value for later and rest "FirstTime" flag
$lastTime = [datetime](get-itemproperty "HKLM:\$regpath" LastEventImportTime).LastEventImportTime

$hasFirstTime = $false
} else {
# This appears to be our first pass, so we will pick up alerts from the past hour
$lastTime = (Get-Date).AddHours(-24)


$hasFirstTime = $true
}

# Set the "now" timestamp up to which we will query, and save this to the registry
#Be sure to save it as UTC time so we will be unaffected by DST etc
$currentTime = Get-Date 
Set-ItemProperty "HKLM:\$regpath" LastEventImportTime $currentTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss.fffZ")

#GET ALERT LIST
# Use SQL to retrieve all SQL DM Alerts raised since we last polled
$sqlqry = $sqltmp -f $lastTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss.fff"), $currentTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss.fff")

$alerts = (Get-SqlQuery $connstr $sqlqry)

$queryMessage = @"
SQL DM Instance Event Script
started
Connection String     :  {0}
Last import time      :  {1}
Current time          :
{2}
First collection time :  {3}
"@
$msg = $queryMessage -f $connstr, $lastTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss.fff"), $currentTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss.fff"), $hasFirstTime

Log-DebugEvent $SCRIPT_STARTED $msg $dmPath

$messalerts = @"
SQL Server alerts started
SQL Alerts:  {0}
"@

$msg= $messalerts -f ($alerts.Tables[0].Rows.count)
Log-DebugEvent $SCRIPT_STARTED $msg $dmPath

if ($alerts.Tables[0].Rows.count-lt 1) {
# No alerts found so don't create a Property Bag
# Generate a Log message for this "NoAlert" case
Log-DebugEvent $DUMMY_PROPERTYBAG "No Alerts found during the previous poll - No Property Bag returned" $dmPath
exit
} else {
# DEFINE DICTIONARIES FOR LOOKUPS
# We use these later to transform state and state changes into handy strings
# $sevtab maps DM Severity to a string
$sevtab= @{ 0x00="None";  0x01="OK"; 0x02="Informational"; 0x04="Warning"; 0x08="Critical"}
# $sevmap maps DM Severity to the OpsMan EventLevel
$sevmap = @{ 0x00=0;       0x01=0;    0x02=4; 0x04=2;         0x08=1}
# $Chgtab maps the state changes to a friendly string
$chgtab = @{

0x12 = "OK to Warning";
0x13 = "OK to Informational";
0x14 = "OK to Critical";

0x21 = "Warning to OK";
0x22 = "Warning to Warning";
0x23 = "Warning to Informational";

0x24 = "Warning to Critical";
0x41 = "Critical to OK";
0x42 = "Critical to Warning";

0x43 = "Critical to Informational";
0x44 = "Critical to Critical";
0x51 = "Informational
to OK";
0x52 = "Informational to Informational";
0x53 = "Informational to Warning";

0x54 = "Informational to Critical"}

# LOOP THROUGH EACH ALERT - PASSING ALL DETAILS IN A PROPERTYBAG

# Create a propertybag per Alert row and pack the details into it
# and the instance name (for filtering) in each bag

foreach ($alert in $alerts.Tables[0].Rows) {
# Logging row data to know if there is or not NULL
$msg = 'Submitted Alert Data Property Bag' + "`n" + '    For instance:  ' + $alert.ServerName + "`n" + '    Timestamp    :  ' + $alert.UTCOccurrenceDateTime.ToString("yyyy-MM-dd HH:mm:ss.fff") + "`n" + '    Severity     :  ' + $alert.Severity + ' (' + $sevtab[[int]$alert.Severity]+ ')' + "`n" + '    Sev Change   :  ' + $alert.StateEvent + ' (' + $chgtab[[int]$alert.StateEvent]+ ')' + "`n" + '    Table Name   :  ' + $alert.TableName + "`n" + 'Database Name:  ' + $alert.DatabaseName + "`n" + '    Metric       :  ' + $alert.Metric+ "`n" + '    Value        :  ' + $alert.Value + "`n" + '    AlertTitle  :  ' + $alert.Heading + "`n" + '    Alert Message:  ' + $alert.Message


Log-DebugEvent $EVENT_LEVEL_INFO $msg $dmPath

#Create a property bag for this Alert
Log-DebugEvent $EVENT_LEVEL_INFO 'Creating MOMPropertyBag object' $dmPath
$bag = $api.CreatePropertyBag()


# Now pump the alert data into a new Property bag
# Include the InstanceName so we can filter the bag later

$bag.AddValue('InstanceName',      (Get-NonNull $alert.ServerName))
$bag.AddValue('AlertID',(Get-NonNull $alert.AlertID))
$bag.AddValue('OccurredUTC',       (Get-NonNull $alert.UTCOccurrenceDateTime.ToString("yyyy-MM-dd HH:mm:ss.fffZ")))
$bag.AddValue('DBName',            (Get-NonNull $alert.DatabaseName))
$bag.AddValue('TblName',         (Get-NonNull $alert.TableName))
$bag.AddValue('Severity',          (Get-NonNull $alert.Severity))

$bag.AddValue('OMSeverity',        (Get-NonNull $sevmap[[int]$alert.Severity]))
$bag.AddValue('SevString',(Get-NonNull $sevtab[[int]$alert.Severity]))
$bag.AddValue('SevChange',         (Get-NonNull $alert.StateEvent))

$bag.AddValue('SevChangeStr',      (Get-NonNull $chgtab[[int]$alert.StateEvent]))
$bag.AddValue('Value',(Get-NonNull $alert.Value))
$bag.AddValue('Heading',           (Get-NonNull $alert.Heading))

$bag.AddValue('Message',           (Get-NonNull $alert.Message))
$bag.AddValue('Metric',(Get-NonNull $alert.Metric))


# Generate a Log message for this alert instance
$msg = @"
Submitted
Alert Data Property Bag
For instance:   {0}
Timestamp:      {1}
Severity:       {2} ({3})
Sev Change:
{4} ({5})
Alert Title:    {6}
Alert Message:
{7}
"@

Log-DebugEvent $PROPERTYBAG_CREATED ($msg -f$alert.ServerName, $alert.UTCOccurrenceDateTime.ToString("yyyy-MM-dd HH:mm:ss.fffZ"),$alert.Severity, $sevtab[[int]$alert.Severity], $alert.StateEvent, $chgtab[[int]$alert.StateEvent],$alert.Heading, $alert.Message) $dmPath

#Return each property bag if an event as we create and populateit.
$bag
}
} # End of "If no alerts found"
Log-DebugEvent $SCRIPT_ENDED 'SQL Instance Event Script ended.' $dmPath
				  ]]>
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>dmDb</Name>
                    <Value>$Target/Host/Property[Type="Idera.SQLDM.DMservice"]/DmDatabase$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>dmPath</Name>
                    <Value>$Target/Host/Property[Type="Idera.SQLDM.DMservice"]/DmPath$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>120</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Script">
                <Node ID="Timer" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
	  <!-- SQLDM 10.1 Barkha khatri getting data from DM Repo using powershell script -->
      <DataSourceModuleType ID="Idera.SQLDM.Timed.PoSH.DMalert.AlertPoller" Accessibility="Internal" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="string" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Timer" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Script" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>SqlInstanceAlerts.ps1</ScriptName>
                <ScriptBody>
                  <![CDATA[
# Display all alerts (first time with 24 hours and max count 300)
# Repeat this process each 2 min -&amp;amp;gt; 120 seconds
# Prevent error messages about DM MP in Event Viewer log
# Display data in Alerts view

#==================================================================================
# Script: 	SqlInstanceAlerts.ps1
# Date:		1/2/13	
# Author: 	Martin Dey, Xtreme Consulting
# Purpose:	Checvcs the Alerts counts for all currently monitored SQL instances
#			and outputs their counts in a property bag per instance
#==================================================================================

param($dmDb, $dmPath)

#Constants used for event logging
$debug = $true
$SCRIPT_NAME			= 'SqlInstanceAlerts.vbs'
$EVENT_LEVEL_ERROR 		= 1
$EVENT_LEVEL_WARNING 	= 2
$EVENT_LEVEL_INFO 		= 4
$SCRIPT_STARTED			= 831
$PROPERTYBAG_CREATED	= 832
$DUMMY_PROPERTYBAG      = 833
$SCRIPT_ENDED			= 835
$SCRIPT_FAILED          = 839

#==================================================================================
# Sub:       Log-TxtFile
# Purpose:   Logs an informational event to TXT log file, only 
#            if Debug key is true in Windows Registry &amp;amp;gt;&amp;amp;gt; SQLdm
#==================================================================================
function
Log-TxtFile {
param($logPath, $message)

$currentDate = Get-Date;
$logFile = $currentDate.ToString("yyyy-MM-dd")

$logFile = "\Logs\SQLdm_MP_" + $logFile + ".log"
if (Test-Path  ($logPath + $logFile)) {
Add-Content ($logPath + $logFile) ("`n" + $currentDate + " - " + $SCRIPT_NAME + " - " + $message)
}
else {
Set-Content ($logPath + $logFile) ("`n" + $currentDate + " - " + $SCRIPT_NAME + " - " + $message)
}

}

#==================================================================================
#Sub:		Log-DebugEvent
# Purpose:	Logs an informational event to the Operations Manager event log

#only if Debug argument is true
#==================================================================================
function
Log-DebugEvent
{
param($eventNo,$message,$logPath)
$debugTxt=$true
if ($debugTxt -eq $true){
Log-TxtFile $logPath $message
}

$message = "`n" + $message
if ($debug -eq $true)
{
$api.LogScriptEvent($SCRIPT_NAME,$eventNo,$EVENT_LEVEL_INFO,$message)

}
}

#==================================================================================
# Sub:Get-SqlQuery
# Purpose:    Runs a SQL Query using the SqlClient data library
# Returns:    A powershell variation on a data table - an object array with a count,
#             followed by a series of DataRow objects.
#==================================================================================
function
Get-SqlQuery($connstr, $querydm) {
$conn = New-Object System.Data.SqlClient.SQLConnection
$conn.ConnectionString= $connstr
$conn.Open()
$cmd = New-Object System.Data.SqlClient.SqlCommand($querydm, $conn)

$cmd.CommandTimeout = 120
$dset = New-Object System.Data.DataSet
$da = New-Object System.Data.SqlClient.SqlDataAdapter($cmd)
$da.fill($dset)
$conn.Close()
return $dset
}

#==================================================================================
#Sub:		Get-NonNull
# Purpose:	If the passed value is DBNull then return the string "(null)"
# Returns:The input ior a string "(null)"
#==================================================================================
function
Get-NonNull( $in ) {
if ($in.GetType().Name -eq 'DBNull') {
$out = "(null)"
} else {

$out = $in
}
return $out
}

#==================================================================================
#Sub:        Get-DmServerInstance
# Purpose:    Read 'SQLdmManagementService.exe.Config' file to get DMserver instance
# Returns:    The serverInstance as a string
#==================================================================================
function
Get-DmServerInstance( $dmPath ) {

[xml]$dmxml = (Get-Content ($dmPath + "SQLdmManagementService.exe.Config"))

$serverInstance = $dmxml.SelectSingleNode("/configuration/Idera.SQLdm/Services/ManagementService/@repositoryServer").Value

return $serverInstance
}

#DEBUG MODE
$debugTxt = (Get-ItemProperty "HKLM:\SOFTWARE\Idera\SQLdm").FlagLog

#GET MOM SCRIPTING OBJECT
# Start by setting up API object and creating a discovery data object.
$api= New-Object -comObject 'MOM.ScriptAPI'

Log-DebugEvent $SCRIPT_STARTED 'Creating MOMScriptAPI object:This object is the top-level object for the scripting API.' $dmPath

$messageParam = @"
Input parameters

SQLdm - Database name    :  {0}
SQLdm - Installation path:  {1}
"@

Log-DebugEvent $SCRIPT_STARTED ($messageParam -f $dmDb, $dmPath) $dmPath

# DEFINE TRAP TO CAPTURE ERRORS
# Trap statement will catchenay Exceptions and send details to the event log before exiting
# We always send direct to the event log - overriding the $debug flag - so we always log errors
trap {
$tmsg = "SQL DM Instance Alert Script experienced an exception:`n`n$_"
Log-DebugEvent $SCRIPT_FAILED $tmsg $dmPath
$api.LogScriptEvent($SCRIPT_NAME,$SCRIPT_FAILED, $EVENT_LEVEL_ERROR, $tmsg)
exit
}

# STATIC STRING DEFINITIONS
# Set up the SQL queries and strings we will need later
$dmServerInstance = (Get-DmServerInstance $dmPath)
$connstr = "Server={0};Database={1};Integrated Security=True" -f $dmServerInstance, $dmDb


$sqltmp  = @"
SELECT  [AlertID]
 ,[UTCOccurrenceDateTime]
 
,[ServerName]
 ,isnull([DatabaseName], 'N/A') as [DatabaseName]
 ,isnull([TableName], 'N/A') as [TableName]
 
,[Metric]
 ,[Severity]
 ,[StateEvent]
 ,[Value]
 ,isnull([Heading], 'N/A') as [Heading]
 ,isnull([Message], 
'N/A') as [Message]
 FROM [dbo].[Alerts]
      JOIN [dbo].[MonitoredSQLServers]
      ON [dbo].[Alerts].[ServerName] 
= [dbo].[MonitoredSQLServers].[InstanceName]
	  JOIN (SELECT DISTINCT SCOMAlertEvent.MetricID, SCOMAlertEvent.IsInSCOMAsAlert FROM SCOMAlertEvent) SAE ON SAE.MetricID = [Alerts].Metric
 WHERE ([UTCOccurrenceDateTime] BETWEEN '{0}' AND '{1}') 
AND [dbo].[MonitoredSQLServers].[Active] = 1
       AND [ServerName] IS NOT NULL AND ([StateEvent] NOT 
IN ( 0x22, 0x44, 0x52 ))
AND SAE.IsInSCOMAsAlert = 1
 ORDER BY [UTCOccurrenceDateTime] DESC
"@

# GET MOM REGISTRY AREA
# This callpulls a guaranteed unique Reg key for this monitor so we can save the last time we gathered events
Log-DebugEvent $EVENT_LEVEL_INFO 'Calling to MOMScriptAPI.GetScriptStateKeyPath method.' $dmPath
$regpath = $api.GetScriptStateKeyPath("Idera.SQLDM")



#CHeck if there is a "LastAlertImport" timestamp stored
if ((get-itemproperty "HKLM:\$regpath" LastAlertImportTime -ea 0).LastAlertImportTime) {
# We have found the last time we imported Alerts as events, so save that value for later and rest "FirstTime" flag
$lastTime = [datetime](get-itemproperty "HKLM:\$regpath" LastAlertImportTime).LastAlertImportTime
$hasFirstTime = $false
} else {
# This appears to be our first pass, so we will pick up alerts from the past hour
$lastTime = (Get-Date).AddHours(-24)


$hasFirstTime = $true
}

# Set the "now" timestamp up to which we will query, and save this to the registry
#Be sure to save it as UTC time so we will be unaffected by DST etc
$currentTime = Get-Date 
Set-ItemProperty "HKLM:\$regpath" LastAlertImportTime $currentTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss.fffZ")

#GET ALERT LIST
# Use SQL to retrieve all SQL DM Alerts raised since we last polled
$sqlqry = $sqltmp -f $lastTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss.fff"), $currentTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss.fff")

$alerts = (Get-SqlQuery $connstr $sqlqry)

$queryMessage = @"
SQL DM Instance Event Script
started
Connection String     :  {0}
Last import time      :  {1}
Current time          :
{2}
First collection time :  {3}
"@
$msg = $queryMessage -f $connstr, $lastTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss.fff"), $currentTime.ToUniversalTime().ToString("yyyy-MM-dd HH:mm:ss.fff"), $hasFirstTime

Log-DebugEvent $SCRIPT_STARTED $msg $dmPath

$messalerts = @"
SQL Server alerts started
SQL Alerts:  {0}
"@

$msg= $messalerts -f ($alerts.Tables[0].Rows.count)
Log-DebugEvent $SCRIPT_STARTED $msg $dmPath
if ($alerts.Tables[0].Rows.count -lt 1) {

# No alerts found so don't create a Property Bag
# Generate a Log message for this "No Alert" case
Log-DebugEvent $DUMMY_PROPERTYBAG "No Alerts found during the previous poll - No Property Bag returned" $dmPath
exit
} else {
# DEFINE DICTIONARIES FOR LOOKUPS
# We use these later to transform state and state changes into handy strings
# $sevtab maps DM Severity to a string
$sevtab= @{ 0x00="None";  0x01="OK"; 0x02="Informational"; 0x04="Warning"; 0x08="Critical"}
# $sevmap maps DM Severity to the OpsMan EventLevel
$sevmap = @{ 0x00=0;       0x01=0;    0x02=0;
0x04=1;         0x08=2}
# $Chgtab maps the state changes to a friendly string
$chgtab = @{

0x12 = "OK to Warning";
0x13 = "OK to Informational";
0x14 = "OK to Critical";

0x21 = "Warning to OK";
0x22 = "Warning to Warning";
0x23 = "Warning to Informational";

0x24 = "Warning to Critical";
0x41 = "Critical to OK";
0x42 = "Critical to Warning";

0x43 = "Critical to Informational";
0x44 = "Critical to Critical";
0x51 = "Informational
to OK";
0x52 = "Informational to Informational";
0x53 = "Informational to Warning";

0x54 = "Informational to Critical"}

# LOOP THROUGH EACH ALERT - PASSING ALL DETAILS IN A PROPERTYBAG

# Create a propertybag per Alert row and pack the details into it
# and the instance name (for filtering) in each bag
foreach ($alert in $alerts.Tables[0].Rows) 
{
# Logging row data to know if there isor not NULL
$msg = 'Submitted Alert Data Property Bag' + "`n" + '    For instance:  ' + $alert.ServerName + "`n" + '    Timestamp    :  ' + $alert.UTCOccurrenceDateTime.ToString("yyyy-MM-dd HH:mm:ss.fff") + "`n" + '    Severity     :  ' + $alert.Severity + ' (' + $sevtab[[int]$alert.Severity]+ ')' + "`n" + '    Sev Change   :  ' + $alert.StateEvent + ' (' + $chgtab[[int]$alert.StateEvent]+ ')' + "`n" + '    Table Name   :  ' + $alert.TableName + "`n" + 'Database Name:  ' + $alert.DatabaseName + "`n" + '    Metric       :  ' + $alert.Metric+ "`n" + '    Value        :  ' + $alert.Value + "`n" + '    AlertTitle  :  ' + $alert.Heading + "`n" + '    Alert Message:  ' + $alert.Message


Log-DebugEvent $EVENT_LEVEL_INFO $msg $dmPath

#Create a property bag for this Alert
Log-DebugEvent $EVENT_LEVEL_INFO 'Creating MOMPropertyBag object' $dmPath
$bag = $api.CreatePropertyBag()


# Now pump the alert data into a new Property bag
# Include the InstanceName so we can filter the bag later

$bag.AddValue('InstanceName',      (Get-NonNull $alert.ServerName))
$bag.AddValue('AlertID',(Get-NonNull $alert.AlertID))
$bag.AddValue('OccurredUTC',       (Get-NonNull $alert.UTCOccurrenceDateTime.ToString("yyyy-MM-dd HH:mm:ss.fffZ")))
$bag.AddValue('DBName',            (Get-NonNull $alert.DatabaseName))
$bag.AddValue('TblName',         (Get-NonNull $alert.TableName))
$bag.AddValue('Severity',          (Get-NonNull $alert.Severity))

$bag.AddValue('OMSeverity',        (Get-NonNull $sevmap[[int]$alert.Severity]))
$bag.AddValue('SevString',(Get-NonNull $sevtab[[int]$alert.Severity]))
$bag.AddValue('SevChange',         (Get-NonNull $alert.StateEvent))

$bag.AddValue('SevChangeStr',      (Get-NonNull $chgtab[[int]$alert.StateEvent]))
$bag.AddValue('Value',(Get-NonNull $alert.Value))
$bag.AddValue('Heading',           (Get-NonNull $alert.Heading))

$bag.AddValue('Message',           (Get-NonNull $alert.Message))
$bag.AddValue('Metric',(Get-NonNull $alert.Metric))
$bag.AddValue('GenerateAlert', "True")

# Generate a Log message for this alert instance
$msg = @"
Submitted
Alert Data Property Bag
For instance:   {0}
Timestamp:      {1}
Severity:       {2} ({3})
Sev Change:
{4} ({5})
Alert Title:    {6}
Alert Message:
{7}
"@

Log-DebugEvent $PROPERTYBAG_CREATED ($msg -f $alert.ServerName, $alert.UTCOccurrenceDateTime.ToString("yyyy-MM-dd HH:mm:ss.fffZ"),$alert.Severity, $sevtab[[int]$alert.Severity], $alert.StateEvent, $chgtab[[int]$alert.StateEvent],$alert.Heading, $alert.Message) $dmPath

#Return each property bag if an event as we create and populateit.
$bag
}

} # End of "If no alerts found"
Log-DebugEvent $SCRIPT_ENDED 'SQL Instance Alert Script ended.' $dmPath
                  ]]>
                </ScriptBody>
                <Parameters>
                  <Parameter>
                    <Name>dmDb</Name>
                    <Value>$Target/Host/Property[Type="Idera.SQLDM.DMservice"]/DmDatabase$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>dmPath</Name>
                    <Value>$Target/Host/Property[Type="Idera.SQLDM.DMservice"]/DmPath$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>120</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Script">
                <Node ID="Timer" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
	  <!-- SQLDM 10.1 Barkha khatri getting DB data as input and output it to rule -->
      <DataSourceModuleType ID="Idera.SQLDM.DataSource.SqlInst.AlertsData" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="InstanceName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="string" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="SchedPoll" TypeID="Idera.SQLDM.Timed.PoSH.DMalert.AlertPoller">
                <Debug>$Config/Debug$</Debug>
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ConditionDetection ID="Filter" TypeID="System!System.ExpressionFilter">
                <Expression>
                  <SimpleExpression>
                    <ValueExpression>
                      <XPathQuery Type="String">Property[@Name='InstanceName']</XPathQuery>
                    </ValueExpression>
                    <Operator>Equal</Operator>
                    <ValueExpression>
                      <Value Type="String">$Config/InstanceName$</Value>
                    </ValueExpression>
                  </SimpleExpression>
                </Expression>
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Filter">
                <Node ID="SchedPoll" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Idera.SQLDM.DataSource.SqlInst.AlertsData.MapToAlert" Accessibility="Internal" Batching="false">
        <Configuration>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="InstanceName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="string" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="InstAlerts" TypeID="Idera.SQLDM.DataSource.SqlInst.AlertsData">
                <Debug>$Config/Debug$</Debug>
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
                <InstanceName>$Config/InstanceName$</InstanceName>
              </DataSource>
              <ConditionDetection ID="Mapper" TypeID="System!System.Event.GenericDataMapper">
                <EventOriginId>$MPElement$</EventOriginId>
                <PublisherId>$MPElement$</PublisherId>
                <PublisherName>$Data/Property[@Name='Heading']$</PublisherName>
                <Channel>SQL DM</Channel>
                <LoggingComputer>$Target/Host/Host/Property[Type='Windows!Microsoft.Windows.Computer']/NetworkName$</LoggingComputer>
                <EventNumber>$Data/Property[@Name='Metric']$</EventNumber>
                <EventCategory>0</EventCategory>
                <EventLevel>$Data/Property[@Name='OMSeverity']$</EventLevel>
                <UserName>None</UserName>
                <Description><![CDATA[%11]]></Description>
                <Params>
                  <Param>$Data/Property[@Name='InstanceName']$</Param>
                  <Param>$Data/Property[@Name='OccurredUTC']$</Param>
                  <Param>$Data/Property[@Name='DBName']$</Param>
                  <Param>$Data/Property[@Name='TblName']$</Param>
                  <Param>$Data/Property[@Name='Severity']$</Param>
                  <Param>$Data/Property[@Name='SevString']$</Param>
                  <Param>$Data/Property[@Name='SevChange']$</Param>
                  <Param>$Data/Property[@Name='SevChangeStr']$</Param>
                  <Param>$Data/Property[@Name='Value']$</Param>
                  <Param>$Data/Property[@Name='Heading']$</Param>
                  <Param>$Data/Property[@Name='Message']$</Param>
                </Params>
                <!--<Priority>$Config/Priority$</Priority>
                <Severity>$Config/Severity$</Severity>
                <ManagedEntityId>$Target/Id$</ManagedEntityId>
                <AlertName>$Config/AlertName$</AlertName>
                <AlertDescription>$Config/AlertDescription$</AlertDescription>
                <AlertOwner>$Config/AlertOwner$</AlertOwner>
                <AlertMessageId>$Config/AlertMessageId$</AlertMessageId>
                <AlertParameters>$Config/AlertParameters$</AlertParameters>
                <Suppression>$Config/Suppression$</Suppression>
                <WorkflowId>$MPElement$</WorkflowId>
                <Custom1>$Config/Custom1$</Custom1>
                <Custom2>$Config/Custom2$</Custom2>
                <Custom3>$Config/Custom3$</Custom3>
                <Custom4>$Config/Custom4$</Custom4>
                <Custom5>$Config/Custom5$</Custom5>
                <Custom6>$Config/Custom6$</Custom6>
                <Custom7>$Config/Custom7$</Custom7>
                <Custom8>$Config/Custom8$</Custom8>
                <Custom9>$Config/Custom9$</Custom9>
                <Custom10>$Config/Custom10$</Custom10>
                <ManagementGroupName>$Target/ManagementGroup/Name$</ManagementGroupName>-->
              </ConditionDetection>
            </MemberModules>
            <Composition>
              <Node ID="Mapper">
                <Node ID="InstAlerts" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.Event.Data</OutputType>
      </DataSourceModuleType>
      <DataSourceModuleType ID="Idera.SQLDM.Timed.PoSh.PropertyBagProvider" Accessibility="Internal" Batching="false">
        <Configuration>
          <IncludeSchemaTypes>
            <SchemaType>Windows!Microsoft.Windows.PowerShellSchema</SchemaType>
          </IncludeSchemaTypes>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="string" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
        </OverrideableParameters>
        <ModuleImplementation Isolation="Any">
          <Composite>
            <MemberModules>
              <DataSource ID="Timer" TypeID="System!System.SimpleScheduler">
                <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
                <SyncTime>$Config/SyncTime$</SyncTime>
              </DataSource>
              <ProbeAction ID="Script" TypeID="Windows!Microsoft.Windows.PowerShellPropertyBagProbe">
                <ScriptName>SqlInstanceHealth.ps1</ScriptName>
                <ScriptBody>
                  <![CDATA[
#==================================================================================
# Script: 	SqlInstanceHealth.ps1
# Date:		1/2/13	
# Author: 	Martin Dey, Xtreme Consulting
# Purpose:	Checvcs the Alerts counts for all currently monitored SQL instances
#			and outputs their counts in a property bag per instance
#==================================================================================

# Get the named parameters
param($dmDb, $dmPath)

#Constants used for event logging
$debug = $true
$SCRIPT_NAME			= 'SqlInstanceHealth.vbs'
$EVENT_LEVEL_ERROR 		= 1
$VENT_LEVEL_WARNING 	= 2
$EVENT_LEVEL_INFO 		= 4
$SCRIPT_STARTED			= 821
$PROPERTYBAG_CREATED	= 822
$SCRIPT_ENDED			= 825
$SCRIPT_FAILED          = 829

#==================================================================================
# Sub:       Log-TxtFile
# Purpose:   Logs an informational event to TXT log file, only 
#            if Debug key is true in Windows Registry &amp;gt;&amp;gt; SQLdm
#==================================================================================
function 
Log-TxtFile {
    param($logPath,$message)

    $currentDate = Get-Date;
    $logFile = $currentDate.ToString("yyyy-MM-dd")
    
$logFile = "\Logs\SQLdm_MP_" + $logFile + ".log"
    if (Test-Path  ($logPath + $logFile)) {
        
Add-Content ($logPath + $logFile) ("`n" + $currentDate + " - " + $SCRIPT_NAME + " - " + $message)
    
}
    else {
        Set-Content ($logPath + $logFile) ("`n" + $currentDate + " - " + $SCRIPT_NAME + " - " + $message)
    }
}

#==================================================================================
# Sub:		Log-DebugEvent
# Purpose:	Logs an informational event to the Operations Manager event log 

#			only if Debug argument is true
#==================================================================================
function 
Log-DebugEvent
{
	param($eventNo,$message,$logPath)
	
    if ($debugTxt -eq $true){
		Log-TxtFile $logPath $message
	}
	
	$message = "`n" + $message
	if ($debug -eq $true)
	{
    	$api.LogScriptEvent($SCRIPT_NAME,$eventNo,$EVENT_LEVEL_INFO,$message)
	
}
}

#==================================================================================
# Sub:       Get-SqlQuery
# Purpose:   Runs a SQL Query using the SqlClient data library 
# Returns:   A powershell variation on a data table - an object array with a count,
#            followed by a series of DataRow objects.
#==================================================================================
function 
Get-SqlQuery( $connstr, $querydm ) {
    # Action of connecting to the Database and executing the query and returning results if there were any.
    $conn = New-Object System.Data.SqlClient.SQLConnection
    
$conn.ConnectionString = $connstr
    $conn.Open()
    $cmd = New-Object System.Data.SqlClient.SqlCommand($querydm, $conn)
    $cmd.CommandTimeout = 120
    $dset = New-Object System.Data.DataSet
    $da = New-Object System.Data.SqlClient.SqlDataAdapter($cmd)
    $da.fill($dset)
    $conn.Close()
    return $dset
}

#==================================================================================
# Sub:        Get-SPdata
# Purpose:    Runs a SQL stored procedure which returns a datatable 
# Returns:    A powershell object with a SQLparam, followed by a eow count,
#             followed by a series of DataRow objects. Get current alerts
#             to refresh for each monitored SQL Server instance.
#==================================================================================
function 
Get-SPdata( $connstr, $cmdstr, $hashparams) {
    $conn = New-Object System.Data.SqlClient.SqlConnection
    
$conn.ConnectionString = $connstr
    $conn.Open()
    $cmd  = New-Object System.Data.SqlClient.SqlCommand($cmdstr, $conn)
    $cmd.CommandTimeout = 120
    $cmd.CommandType = [System.Data.CommandType]::StoredProcedure
    
# Add the supplied parameters
    foreach ($in in $hashparams.Keys) {
        $cmd.Parameters.Add($in, $hashparams[$in]) 
    }
    $da = New-Object System.Data.SqlClient.SqlDataAdapter($cmd)
    $dset = New-Object System.Data.DataSet
    [void]$da.Fill($dset)
    $conn.Close()
    return $dset.Tables[0]
}

#==================================================================================
# Sub:      Get-DmServerInstance
# Purpose:  Read 'SQLdmManagementService.exe.Config' file to get DM server instance
# Returns:  The serverInstance as a string
#==================================================================================
function 
Get-DmServerInstance( $dmPath ) {
    [xml]$dmxml = (Get-Content ($dmPath + "SQLdmManagementService.exe.Config"))
    
$serverInstance = $dmxml.SelectSingleNode("/configuration/Idera.SQLdm/Services/ManagementService/@repositoryServer").Value
    
return $serverInstance
}

#DEBUG MODE
$debugTxt = (Get-ItemProperty "HKLM:\SOFTWARE\Idera\SQLdm").FlagLog

# GET MOM SCRIPTING OBJECT
# Start by setting up API object and creating a discovery data object.
$api = New-Object -comObject 'MOM.ScriptAPI'
Log-DebugEvent $EVENT_LEVEL_INFO 'Creating MOMScriptAPI object: This object is the top-level object for the scripting API.' $dmPath

$messageParam = @"
Input parameters
    
SQLdm - Database name    :  {0}
    SQLdm - Installation path:  {1}
"@
Log-DebugEvent $SCRIPT_STARTED ($messageParam -f $dmDb, $dmPath) $dmPath

# DEFINE TRAP TO CAPTURE ERRORS
# Trap statement will catch any Exceptions and send details to the event log before exiting
# We always send direct to the event log - overriding the $debug flag - so we always log errors
trap {
    $tmsg = "SQL DM Instance Health Script experienced an exception:`n`n$_"
	Log-DebugEvent $SCRIPT_FAILED $tmsg $dmPath
    $api.LogScriptEvent($SCRIPT_NAME,$SCRIPT_FAILED,$EVENT_LEVEL_ERROR,$tmsg)
    
exit
}

# STATIC STRING DEFINITIONS
# Set up the SQL queries and strings we will need later
$dmServerInstance = (Get-DmServerInstance $dmPath)

$connstr = "Server={0};Database={1};Integrated Security=True" -f $dmServerInstance, $dmDb

# Log a message that script is starting only if Debug argument is True
$message =  @"
SqlInstanceHealth 
script started
     Connection String: {0}
"@
Log-DebugEvent $EVENT_LEVEL_INFO ($message -f $connstr) $dmPath

$cmdstr  = "p_GetActiveAlerts"
$qrystr  = @"
 select TOP 300 InstanceName
 from [dbo].[MonitoredSQLServers]
 
WHERE [Active]=1 AND [Deleted] = 0
 ORDER BY InstanceName
"@

# GET SERVER LIST
# Build a list of the names of all actively monitored servers
$servers = (Get-SqlQuery $connstr $qrystr)
if ($servers.Tables[0].Rows.count -lt 1) { 
	# No servers found so don't match with recently alerts
	Log-DebugEvent $SCRIPT_ENDED "No monitored SQL Servers instances found" $dmPath
    exit
}

# GET ALERT LIST
# Use SQL SP to get a list of active alerts affecting SQL Instance health

$inparam = @{"@SQLServerIDs"=$null}
$alerts = (Get-SPdata $connstr $cmdstr $inparam)
$alerts = $alerts[1..($alerts.count-1)] # Remove param and row count (first 1 items in returned array)

$message =	'SQL DM Instance Health Script started' + "`n" + 'Connection Str:  ' + $connstr + "`n" + 'SQL Instances:   ' + $servers.Tables[0].Rows.count + "`n" + 'Active Alerts:   ' + $alerts.count

Log-DebugEvent $EVENT_LEVEL_INFO $message $dmPath

# LOOP THROUGH EACH SERVER - PASSING ALERTS COUNTS AND DETAILS IN A PROPERTYBAG
# Run a query per servers to get the state property data 
# And then create a propertybag per instance, and pack the alerts counts
# and the instance name (for filtering) in each bag

foreach ($svr in $servers.Tables[0].Rows) {
    # Check for Critical Alerts for the current server
    $crittxt=$null; $warntxt=$null
    $crit = @()
    foreach ($alert in $alerts){
        
if($alert.Status -eq 8 -and [string]$alert.InstanceName -eq [string]$svr.InstanceName){
            $crit += $alert
        }
    }
    
    if ($crit.count -gt 0) {
        $crittxt= ($crit | Select-Object -ExpandProperty Title) -join " /`n "
    }

    # Check for Warnings
    $warn = @()
    foreach ($alert in $alerts){
        if($alert.Status -eq 4 -and [string]$alert.InstanceName -eq [string]$svr.InstanceName){
            
$warn += $alert
        }
    }
    
    if ($warn.count -gt 0) {
        $warntxt =($warn | Select-Object -ExpandProperty Title) -join " /`n "
    }
	# Generate a Log message for this server instance
	$msg = @"
Submitted Property Bag
For instance:   {0}
Alerts (C/W/I): {1}, {2}, {3}
Alert Details:
[CRITICAL]:
{4}
[WARNING]:
{5}
"@
	
Log-DebugEvent $PROPERTYBAG_CREATED ($msg -f $svr.InstanceName, [int]$crit.Count, [int]$warn.Count, 0, $crittxt, $warntxt) $dmPath
	#Create a property bag for this server
	Log-DebugEvent $PROPERTYBAG_CREATED 'Creating MOMPropertyBag object' $dmPath
	$bag = $api.CreatePropertyBag()
	
	# Now pump the alert data into a new Property bag
	# Include the INstanceName so we can filter the bag later
	$bag.AddValue('InstanceName',      $svr.InstanceName)
	$bag.AddValue('CriticalAlerts',    [int]$crit.Count)
	$bag.AddValue('WarningAlerts',     [int]$warn.Count)
	$bag.AddValue('InfoAlerts',        0) # Always zero for health reporting
	$bag.AddValue('CriticalDetails',   $crittxt)
	$bag.AddValue('WarningDetails',    $warntxt)
	
	#Return each property bag as we create and populate it.
	$bag
}
Log-DebugEvent $SCRIPT_ENDED 'SQL Instance Health Script ended.' $dmPath
]]>
									</ScriptBody>
                <SnapIns />
                <Parameters>
                  <Parameter>
                    <Name>dmDb</Name>
                    <Value>$Target/Host/Property[Type="Idera.SQLDM.DMservice"]/DmDatabase$</Value>
                  </Parameter>
                  <Parameter>
                    <Name>dmPath</Name>
                    <Value>$Target/Host/Property[Type="Idera.SQLDM.DMservice"]/DmPath$</Value>
                  </Parameter>
                </Parameters>
                <TimeoutSeconds>120</TimeoutSeconds>
              </ProbeAction>
            </MemberModules>
            <Composition>
              <Node ID="Script">
                <Node ID="Timer" />
              </Node>
            </Composition>
          </Composite>
        </ModuleImplementation>
        <OutputType>System!System.PropertyBagData</OutputType>
      </DataSourceModuleType>
    </ModuleTypes>
    <MonitorTypes>
      <UnitMonitorType ID="Idera.SQLDM.MonitorType.InstanceAlertCounts" Accessibility="Public">
        <MonitorTypeStates>
          <MonitorTypeState ID="CriticalState" NoDetection="false" />
          <MonitorTypeState ID="WarningState" NoDetection="false" />
          <MonitorTypeState ID="NormalState" NoDetection="false" />
        </MonitorTypeStates>
        <Configuration>
          <xsd:element minOccurs="1" name="Debug" type="xsd:boolean" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="IntervalSeconds" type="xsd:integer" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="SyncTime" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
          <xsd:element minOccurs="1" name="InstanceName" type="xsd:string" xmlns:xsd="http://www.w3.org/2001/XMLSchema" />
        </Configuration>
        <OverrideableParameters>
          <OverrideableParameter ID="Debug" Selector="$Config/Debug$" ParameterType="bool" />
          <OverrideableParameter ID="SyncTime" Selector="$Config/SyncTime$" ParameterType="string" />
          <OverrideableParameter ID="IntervalSeconds" Selector="$Config/IntervalSeconds$" ParameterType="int" />
        </OverrideableParameters>
        <MonitorImplementation>
          <MemberModules>
            <DataSource ID="DataSource" TypeID="Idera.SQLDM.DataSource.SqlInst.AlertCounts">
              <Debug>$Config/Debug$</Debug>
              <IntervalSeconds>$Config/IntervalSeconds$</IntervalSeconds>
              <SyncTime>$Config/SyncTime$</SyncTime>
              <InstanceName>$Config/InstanceName$</InstanceName>
            </DataSource>
            <ConditionDetection ID="CritFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <SimpleExpression>
                  <ValueExpression>
                    <XPathQuery Type="Integer">Property[@Name='CriticalAlerts']</XPathQuery>
                  </ValueExpression>
                  <Operator>Greater</Operator>
                  <ValueExpression>
                    <Value Type="Integer">0</Value>
                  </ValueExpression>
                </SimpleExpression>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="WarnFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Integer">Property[@Name='WarningAlerts']</XPathQuery>
                      </ValueExpression>
                      <Operator>Greater</Operator>
                      <ValueExpression>
                        <Value Type="Integer">0</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Integer">Property[@Name='CriticalAlerts']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="Integer">0</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
            </ConditionDetection>
            <ConditionDetection ID="NormFilter" TypeID="System!System.ExpressionFilter">
              <Expression>
                <And>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Integer">Property[@Name='CriticalAlerts']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="Integer">0</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                  <Expression>
                    <SimpleExpression>
                      <ValueExpression>
                        <XPathQuery Type="Integer">Property[@Name='WarningAlerts']</XPathQuery>
                      </ValueExpression>
                      <Operator>Equal</Operator>
                      <ValueExpression>
                        <Value Type="Integer">0</Value>
                      </ValueExpression>
                    </SimpleExpression>
                  </Expression>
                </And>
              </Expression>
            </ConditionDetection>
          </MemberModules>
          <RegularDetections>
            <RegularDetection MonitorTypeStateID="CriticalState">
              <Node ID="CritFilter">
                <Node ID="DataSource" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="WarningState">
              <Node ID="WarnFilter">
                <Node ID="DataSource" />
              </Node>
            </RegularDetection>
            <RegularDetection MonitorTypeStateID="NormalState">
              <Node ID="NormFilter">
                <Node ID="DataSource" />
              </Node>
            </RegularDetection>
          </RegularDetections>
        </MonitorImplementation>
      </UnitMonitorType>
    </MonitorTypes>
  </TypeDefinitions>
  <Monitoring>
    <Discoveries>
      <Discovery ID="Idera.SQLDM.DMservice.Discovery" Enabled="true" Target="Windows!Microsoft.Windows.OperatingSystem" ConfirmDelivery="false" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Idera.SQLDM.DMservice" />
        </DiscoveryTypes>
        <DataSource ID="DS" TypeID="Windows!Microsoft.Windows.FilteredRegistryDiscoveryProvider">
          <ComputerName>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/NetworkName$</ComputerName>
          <RegistryAttributeDefinitions>
            <RegistryAttributeDefinition>
              <AttributeName>DbRegValExists</AttributeName>
              <Path>Software\Idera\SQLdm\Database</Path>
              <PathType>1</PathType>
              <AttributeType>0</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>Version</AttributeName>
              <Path>Software\Idera\SQLdm\Version</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>DmPath</AttributeName>
              <Path>Software\Idera\SQLdm\Path</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
            <RegistryAttributeDefinition>
              <AttributeName>DmDatabase</AttributeName>
              <Path>Software\Idera\SQLdm\Database</Path>
              <PathType>1</PathType>
              <AttributeType>1</AttributeType>
            </RegistryAttributeDefinition>
          </RegistryAttributeDefinitions>
          <Frequency>43200</Frequency>
          <ClassId>$MPElement[Name="Idera.SQLDM.DMservice"]$</ClassId>
          <InstanceSettings>
            <Settings>
              <Setting>
                <Name>$MPElement[Name="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Name>
                <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/DNSName$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Idera.SQLDM.DMservice"]/Version$</Name>
                <Value>$Data/Values/Version$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Idera.SQLDM.DMservice"]/DmPath$</Name>
                <Value>$Data/Values/DmPath$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="Idera.SQLDM.DMservice"]/DmDatabase$</Name>
                <Value>$Data/Values/DmDatabase$</Value>
              </Setting>
              <Setting>
                <Name>$MPElement[Name="System!System.Entity"]/DisplayName$</Name>
                <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
              </Setting>
            </Settings>
          </InstanceSettings>
          <Expression>
            <SimpleExpression>
              <ValueExpression>
                <XPathQuery Type="String">Values/DbRegValExists</XPathQuery>
              </ValueExpression>
              <Operator>Equal</Operator>
              <ValueExpression>
                <Value Type="String">true</Value>
              </ValueExpression>
            </SimpleExpression>
          </Expression>
        </DataSource>
      </Discovery>
      <Discovery ID="Idera.SQLDM.SqlInstance.Discovery" Enabled="true" Target="Idera.SQLDM.DMservice" ConfirmDelivery="true" Remotable="true" Priority="Normal">
        <Category>Discovery</Category>
        <DiscoveryTypes>
          <DiscoveryClass TypeID="Idera.SQLDM.SqlInstance" />
        </DiscoveryTypes>
        <DataSource ID="Microsoft.Windows.TimedPowerShell.DiscoveryProvider" TypeID="Windows!Microsoft.Windows.TimedPowerShell.DiscoveryProvider">
          <IntervalSeconds>180</IntervalSeconds>
          <SyncTime>00:01</SyncTime>
          <ScriptName>SqlDmInstanceDiscovery.ps1</ScriptName>
          <ScriptBody>
            <![CDATA[
#==================================================================================
# Script: 	SqlDmInstanceDiscovery.ps1
# Date:		1/31/13	
# Author: 	Martin Dey, Xtreme Consulting
# Purpose:	SQL Instances being managed by a local SQL Diagnoastic Manager service
#==================================================================================
param($sourceId, 
$managedEntityId, $dmDb, $computerName, $dmPath)

#Constants used for event logging
$debug = $true
$SCRIPT_NAME			= 'SqlDmInstanceDiscovery.ps1'
$EVENT_LEVEL_ERROR 		= 1
$EVENT_LEVEL_WARNING 	= 2
$EVENT_LEVEL_INFO 		= 4
$SCRIPT_STARTED			= 811
$CLASS_CREATED			= 812
$SCRIPT_ENDED			= 815
$SCRIPT_FAILED          = 819
$DUMMY_PROPERTYBAG      = 833

#==================================================================================
# Sub:       Log-TxtFile
# Purpose:   Logs an informational event to TXT log file, only 
#            if Debug key is true in Windows Registry &amp;gt;&amp;gt; SQLdm
#==================================================================================
function 
Log-TxtFile {
    param($logPath,$message)

    # review the key on server instances too.
    # 
	if (Test-Path -Path 'HKLM:\SOFTWARE\Idera\SQLdm') { # MPverbose
        $currentDate = Get-Date;
        $logFile = $currentDate.ToString("yyyy-MM-dd")
        $logFile = "\Logs\SQLdm_MP_" + $logFile + ".log"
        
if (Test-Path  ($logPath + $logFile)) {
            Add-Content ($logPath + $logFile) ("`n" + $currentDate + " - " + $SCRIPT_NAME + " - " + $message)
        }
        else {
            Set-Content ($logPath + $logFile) ("`n" + $currentDate + " - " + $SCRIPT_NAME + " - " + $message)
        }
    # } else {
        
# Create the key with false value
    # }
}
}
#==================================================================================
# Sub:		LogDebugEvent
# Purpose:	Logs an informational event to the Operations Manager event log 
#			only if Debug argument is true
#==================================================================================

function 
Log-DebugEvent
{
	param($eventNo,$message,$logPath)
    if ($debugTxt -eq $true){
		Log-TxtFile $logPath $message
	}
	
	if ($debug = $true)
	{
		$message = "`n" + $message
    	$api.LogScriptEvent($SCRIPT_NAME,$eventNo,$EVENT_LEVEL_INFO,$message)
	
}
}

#==================================================================================
# Sub:        Get-SqlQuery
# Purpose:    Runs a SQL Query using the SqlClient data library 
# Returns:    A powershell variation on a data table - an object array with a count,
#             followed by a series of DataRow objects.
#==================================================================================
function 
Get-SqlQuery( $connstr, $querydm ) {
    # Action of connecting to the Database and executing the query and returning results if there were any.
    $conn = New-Object System.Data.SqlClient.SQLConnection
    
$conn.ConnectionString = $connstr
    $conn.Open()
    $cmd = New-Object System.Data.SqlClient.SqlCommand($querydm, $conn)
    $cmd.CommandTimeout = 120
    $dset = New-Object System.Data.DataSet
    $da = New-Object System.Data.SqlClient.SqlDataAdapter($cmd)
    $da.fill($dset)
    $conn.Close()
    return $dset     

}
 
#==================================================================================
# Sub:      Get-DmServerInstance
# Purpose:  Read 'SQLdmManagementService.exe.Config' file to get DM server instance
# Returns:  The serverInstance as a string
#==================================================================================
function 
Get-DmServerInstance( $dmPath ) {
    [xml]$dmxml = (Get-Content ($dmPath + "SQLdmManagementService.exe.Config"))
    
$serverInstance = $dmxml.SelectSingleNode("/configuration/Idera.SQLdm/Services/ManagementService/@repositoryServer").Value
    
return $serverInstance
}

#DEBUG MODE
$debugTxt = (Get-ItemProperty "HKLM:\SOFTWARE\Idera\SQLdm").FlagLog
# GET MOM SCRIPTING OBJECT
# Start by setting up API object and creating a discovery data object.
$api = New-Object -comObject 'MOM.ScriptAPI'
Log-DebugEvent $EVENT_LEVEL_INFO 'Creating MOMScriptAPI object: This object is the top-level object for the scripting API.' $dmPath

# GET INFORMATIONAL PROPERTIES
$messageParam = @"
Input parameters
    Computer Name            :  {0}
    SQLdm - Database name    :  {1}
    SQLdm 
- Installation path:  {2}
    Source ID                :  {3}
    Managed entity ID        :  {4}
"@
Log-DebugEvent $SCRIPT_STARTED ($messageParam -f $computerName, $dmDb, $dmPath, $sourceId, $managedEntityId) $dmPath

$machineName       = [Environment]::MachineName
$osVersion         = [Environment]::OSVersion
$processorCount    = [Environment]::ProcessorCount
$userDomainName    = [Environment]::UserDomainName
$powerShellVersion = [Environment]::Version
$commandLine       = [Environment]::CommandLine
$systemDirectory   = [Environment]::SystemDirectory
$currentDirectory  = [Environment]::CurrentDirectory
$messageOS = @"
Windows 
Server properties
    MachineName      : {0}
    OSVersion        : {1}
    ProcessorCount   : {2}
    
UserDomainName   : {3}
    Version          : {4}
    CommandLine      : {5}
    SystemDirectory  : {6}
    
CurrentDirectory : {7}
"@
$msgOS = $messageOS -f $machineName, $osVersion, $processorCount, $userDomainName, $powerShellVersion, $commandLine, $systemDirectory, $currentDirectory
Log-DebugEvent $EVENT_LEVEL_INFO $msgOS $dmPath

if (Test-Path -Path 'HKLM:\SOFTWARE\Microsoft\Microsoft Operations Manager\3.0\Setup') 
{
    $scomProperties = (get-itemproperty 'HKLM:\SOFTWARE\Microsoft\Microsoft Operations Manager\3.0\Setup')
    
$properties = ""
    foreach ($property in $scomProperties) {
        $properties = $properties + ' ' + $property
    }
    $messageProperties = 'SCOM settings' + "`n" + '    InstalledInstances: ' + $properties
    Log-DebugEvent $EVENT_LEVEL_INFO $messageProperties $dmPath
} else {
	Log-DebugEvent $EVENT_LEVEL_WARNING 'No data to display for SCOM settings' $dmPath
}

if (Test-Path -Path 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server') {
    $sqlInstances = (get-itemproperty 'HKLM:\SOFTWARE\Microsoft\Microsoft SQL Server').InstalledInstances
    
$instances = ""
    foreach ($instance in $sqlInstances) {
        $instances = $instances + ' . ' + $instance
    }
    
    $messageInstances = 'SQL Server instances' + "`n" + `
                        '    
InstalledInstances: ' + $instances
    Log-DebugEvent $EVENT_LEVEL_INFO $messageInstances $dmPath
} else 
{
    Log-DebugEvent $EVENT_LEVEL_WARNING 'No data to display for SQL Server instances' $dmPath
}

# DEFINE TRAP TO CAPTURE ERRORS
# Trap statement will catch any Exceptions and send details to the event log before exiting
# We always send direct to the event log - overriding the $debug flag - so we always log errors
trap {
    $tmsg = "SQL DM Instance Discovery Script experienced an exception:`n`n$_"
	Log-DebugEvent $SCRIPT_FAILED $tmsg $dmPath
    $api.LogScriptEvent($SCRIPT_NAME,$SCRIPT_FAILED,$EVENT_LEVEL_ERROR,$tmsg)
    
exit
}

#Discovery data object requires the MPElement and Target/ID variables.  The first argument in the method is always 0.
Log-DebugEvent $EVENT_LEVEL_INFO 'Creating MOMDiscoveryData object' $dmPath
$discoveryData = $api.CreateDiscoveryData(0, $sourceId, $managedEntityId)

$dmServerInstance = (Get-DmServerInstance $dmPath)
$connstr = "Server={0};Database={1};Integrated Security=True" -f $dmServerInstance, $dmDb
# Log a message that script is starting

$message =  'Script started' + "`n" + '    Connection String: ' + $connstr

Log-DebugEvent $EVENT_LEVEL_INFO $message $dmPath

#Log a message that script is starting only if Debug argument is True
$message =	'Script started' + "`n" + 'Source ID: ' + $sourceId + "`n" + 'Managed Entity ID: ' + $managedEntityId + "`n" + 'SQLDM DB: ' + $dmDb + "`n" + 'Computer Name: ' + $computerName + "`n" + 'Connection String: ' + $connstr

Log-DebugEvent $SCRIPT_STARTED $message $dmPath

# Read server table from SQLdm database
$qrystr = @"
 SELECT TOP 300 [InstanceName]
 
,isnull([RealServerName], 'N/A') as [RealServerName]
 ,isnull([ServerVersion], 'N/A') as [ServerVersion]
 
,isnull([ServerEdition], 'N/A') as [ServerEdition]
 ,isnull([MaintenanceModeEnabled], 'N/A') as [MaintenanceModeEnabled]
 
FROM [dbo].[MonitoredSQLServers]
 WHERE [Active] = 1
 ORDER BY [InstanceName]
"@

$instances = (Get-SqlQuery $connstr $qrystr)
$messinst = 'SQL Server instances started' + "`n" +'    SQL Instances:   ' + $instances.Tables[0].Rows.count

Log-DebugEvent $EVENT_LEVEL_INFO $messinst $dmPath

if ($instances.Tables[0].Rows.count -lt 1) {
    # No instances found so don't create a Property Instanceound"
	 Log-DebugEvent $DUMMY_PROPERTYBAG 'No monitored SQL Server instances found' $dmPath
	 exit
} else {
# LOOP ROUND EACH MONITORED SQL INSTANCE ROW

	foreach ($row in $instances.Tables[0].Rows)
	{
		# Logging row values to know if these is or not NULL
        # In NULL case, the exception message for MOMClassInstance object is: 
        # ID: ComMethodTargetInvocation, Message: Exception has been thrown by the target of an invocation.
        $message = 'Created SqlInstance class instance' + "`n" + '    Computer Name   : ' + $computerName + "`n" + '    Instance Name   : ' + $row.InstanceName + "`n" +'    Real Server Name: ' + $row.RealServerName + "`n" + '    Server Version  : ' + $row.ServerVersion + "`n" + '    Server Edition  : ' + $row.ServerEdition + "`n" + '    Maintenance Mode: ' + $row.MaintenanceModeEnabled
				   
		Log-DebugEvent $CLASS_CREATED $message $dmPath

	

		#Create a SqlInstance class instance for each monitored SQL server row we found in the DB.
		Log-DebugEvent $EVENT_LEVEL_INFO 'CreateClassInstance: Creates a new monitoring class instance.' $dmPath
		$instance = $discoveryData.CreateClassInstance("$MPElement[Name='Idera.SQLDM.SqlInstance']$")
	
		#Since the Idera.SQLDM.SqlInstance class is hosted, we need to provide it's key property and the key properties of any parents.
		#The key property of SqlInstance is InstanceName.
		#The hosting class for SqlInstance is DmService which has no key property.
		#The hosting class for DmService is Windows Computer which has a key property of PrincipalName.
		
$instance.AddProperty("$MPElement[Name='Windows!Microsoft.Windows.Computer']/PrincipalName$", $computerName)
		
$instance.AddProperty("$MPElement[Name='Idera.SQLDM.SqlInstance']/InstanceName$", $row.InstanceName)
		
$instance.AddProperty("$MPElement[Name='Idera.SQLDM.SqlInstance']/RealServerName$", $row.RealServerName)
		
$instance.AddProperty("$MPElement[Name='Idera.SQLDM.SqlInstance']/ServerVersion$", $row.ServerVersion)
		
$instance.AddProperty("$MPElement[Name='Idera.SQLDM.SqlInstance']/ServerEdition$", $row.ServerEdition)
		
$instance.AddProperty("$MPElement[Name='Idera.SQLDM.SqlInstance']/MaintenanceModeEnabled$", $row.MaintenanceModeEnabled)
		

		Log-DebugEvent $EVENT_LEVEL_INFO 'AddInstance: Adds an item to the collection of discovery data.' $dmPath
		$discoveryData.AddInstance($instance)
	}
}
#Return the discovery data.
$discoveryData

$nams = $instances.Tables[0].Rows | % {$_.InstanceName}
$namstr = $nams -join ', '

# WRAP UP NOW
$message =	'Script ended' + "`n" + 'Rows found: ' + $instances.Tables[0].Rows.count + "`n" + 'Instance names: ' + $namstr
Log-DebugEvent $SCRIPT_ENDED $message $dmPath
]]>
						</ScriptBody>
          <Parameters>
            <Parameter>
              <Name>sourceID</Name>
              <Value>$MPElement$</Value>
            </Parameter>
            <Parameter>
              <Name>managedEntityID</Name>
              <Value>$Target/Id$</Value>
            </Parameter>
            <Parameter>
              <Name>dmDb</Name>
              <Value>$Target/Property[Type="Idera.SQLDM.DMservice"]/DmDatabase$</Value>
            </Parameter>
            <Parameter>
              <Name>computerName</Name>
              <Value>$Target/Host/Property[Type="Windows!Microsoft.Windows.Computer"]/PrincipalName$</Value>
            </Parameter>
            <Parameter>
              <Name>dmPath</Name>
              <Value>$Target/Property[Type="Idera.SQLDM.DMservice"]/DmPath$</Value>
            </Parameter>
          </Parameters>
          <TimeoutSeconds>120</TimeoutSeconds>
        </DataSource>
      </Discovery>
    </Discoveries>
    <Rules>
      <Rule ID="Idera.SQLDM.SqlInst.DMAlert.Collection.Rule" Enabled="true" Target="Idera.SQLDM.SqlInstance" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>EventCollection</Category>
        <DataSources>
          <DataSource ID="DMEvents" TypeID="Idera.SQLDM.DataSource.SqlInst.AlertData.MapToEvent">
            <Debug>true</Debug>
            <IntervalSeconds>60</IntervalSeconds>
            <SyncTime>00:00</SyncTime>
            <InstanceName>$Target/Property[Type="Idera.SQLDM.SqlInstance"]/InstanceName$</InstanceName>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="WriteToDB" TypeID="SC!Microsoft.SystemCenter.CollectEvent" />
          <WriteAction ID="WriteToDW" TypeID="SCDW!Microsoft.SystemCenter.DataWarehouse.PublishEventData" />
        </WriteActions>
      </Rule>
      <!-- SQLDM 10.1 Barkha khatri Rule to generate alert and write it to operations manager DB -->
	  <Rule ID="Idera.SQLDM.SqlInst.DMAlert.Collection.AlertRule" Enabled="true" Target="Idera.SQLDM.SqlInstance" ConfirmDelivery="true" Remotable="true" Priority="Normal" DiscardLevel="100">
        <Category>EventCollection</Category>
        <DataSources>
          <DataSource ID="DMAlerts" TypeID="Idera.SQLDM.DataSource.SqlInst.AlertsData">
            <Debug>true</Debug>
            <IntervalSeconds>60</IntervalSeconds>
            <SyncTime>00:00</SyncTime>
			<InstanceName>$Target/Property[Type="Idera.SQLDM.SqlInstance"]/InstanceName$</InstanceName>
          </DataSource>
        </DataSources>
        <WriteActions>
          <WriteAction ID="GenerateAlert" TypeID="Health!System.Health.GenerateAlert">
            <Priority>0</Priority>
            <Severity>$Data/Property[@Name='OMSeverity']$</Severity>
            <AlertName>$Config/AlertName$</AlertName>
            <AlertDescription>$Data/Property[@Name='Message']$</AlertDescription>
            <AlertOwner>$Config/AlertOwner$</AlertOwner>
            <AlertMessageId>$MPElement[Name="Idera.SQLDM.DataSource.SqlInst.AlertData.MapToAlert_AlertMessageResourceID"]$</AlertMessageId>
            <!-- SQLDM 10.1 Barkha khatri parameters which will be used in alert description -->
			<AlertParameters>
			  <AlertParameter1>$Data/Property[@Name='Message']$</AlertParameter1>
			  <AlertParameter2>$Data/Property[@Name='Heading']$</AlertParameter2>
            </AlertParameters>
            <Suppression>
            </Suppression>
          </WriteAction>
        </WriteActions>
      </Rule>
    </Rules>
    <Monitors>
      <UnitMonitor ID="Idera.SQLDM.DMservice.CollSvcMonitor" Accessibility="Public" Enabled="true" Target="Idera.SQLDM.DMservice" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Idera.SQLDM.DMservice.CollSvcMonitor_AlertMessageResourceID">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" />
          <OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName />
          <ServiceName>SQLdmCollectionService$Default</ServiceName>
          <CheckStartupType>Automatic</CheckStartupType>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Idera.SQLDM.DMservice.MgmtSvcMonitor" Accessibility="Public" Enabled="true" Target="Idera.SQLDM.DMservice" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Idera.SQLDM.DMservice.MgmtSvcMonitor_AlertMessageResourceID">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" />
          <OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName />
          <ServiceName>SQLdmManagementService$Default</ServiceName>
          <CheckStartupType>Automatic</CheckStartupType>
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Idera.SQLDM.DMservice.PredSvcMonitor" Accessibility="Public" Enabled="true" Target="Idera.SQLDM.DMservice" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Windows!Microsoft.Windows.CheckNTServiceStateMonitorType" ConfirmDelivery="false">
        <Category>AvailabilityHealth</Category>
        <AlertSettings AlertMessage="Idera.SQLDM.DMservice.PredSvcMonitor_AlertMessageResourceID">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="Running" MonitorTypeStateID="Running" HealthState="Success" />
          <OperationalState ID="NotRunning" MonitorTypeStateID="NotRunning" HealthState="Warning" />
        </OperationalStates>
        <Configuration>
          <ComputerName />
          <ServiceName>SQLdmPredictiveAnalyticsService$Default</ServiceName>
          <CheckStartupType />
        </Configuration>
      </UnitMonitor>
      <UnitMonitor ID="Idera.SQLDM.Monitor.InstanceAlertCounts" Accessibility="Public" Enabled="true" Target="Idera.SQLDM.SqlInstance" ParentMonitorID="Health!System.Health.AvailabilityState" Remotable="true" Priority="Normal" TypeID="Idera.SQLDM.MonitorType.InstanceAlertCounts" ConfirmDelivery="true">
        <Category>Custom</Category>
        <AlertSettings AlertMessage="Idera.SQLDM.Monitor.InstanceAlertCounts_AlertMessageResourceID">
          <AlertOnState>Warning</AlertOnState>
          <AutoResolve>true</AutoResolve>
          <AlertPriority>Normal</AlertPriority>
          <AlertSeverity>MatchMonitorHealth</AlertSeverity>
        </AlertSettings>
        <OperationalStates>
          <OperationalState ID="UIGeneratedOpStateIde02721981c7244999d2daeae90698cfe" MonitorTypeStateID="CriticalState" HealthState="Error" />
          <OperationalState ID="UIGeneratedOpStateId1e5924d096484f5e963cc9c234fadc68" MonitorTypeStateID="WarningState" HealthState="Warning" />
          <OperationalState ID="UIGeneratedOpStateIde880de805d234e169b1887758bc6feac" MonitorTypeStateID="NormalState" HealthState="Success" />
        </OperationalStates>
        <Configuration>
          <Debug>true</Debug>
          <IntervalSeconds>120</IntervalSeconds>
          <SyncTime>00:00</SyncTime>
          <InstanceName>$Target/Property[Type="Idera.SQLDM.SqlInstance"]/InstanceName$</InstanceName>
        </Configuration>
      </UnitMonitor>
    </Monitors>
  </Monitoring>
  <PresentationTypes>
    <Images>
      <Image ID="Idera.SQLDM.16x16Image" Accessibility="Public" Category="u16x16Icon">
        <ImageData>89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF61000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC200000EC20115284A800000001A74455874536F667477617265005061696E742E4E45542076332E352E313030F472A10000035049444154384F6D937F4CD47518C74FCA10B2CC0A03932DB54999A7E144B84A622C605686B9C6325B45640D3491EC60DE8170421E1BF14512DA500C35B9EA803BA93B442451A1BE1006C40F237176DC17F911129D277743DA5EDD1DE30FCCCFF6DE67CFF6ECF5BCF7ECFDC864773C7B5182E2E6B9AF05477B8334219AB0FF64E2A6582F5D371C13FAD2B729EEEC9F554F988A04475F2B93A3566E0FF7333564E1DF410B930316A606AE61EB6A41AA2811EE0A719C29D4DBAEB672EBCA259C5DCD2E89D37FE7CF1ED9DB9B70FC65C579FD1A9643FBF4B3204E5D86E014CD389AAA99B860C07EA11AFB7923B6FA4AFE39AD63C4EC9258C38DD16EAC35E5F4571EA55B9530EDC47EF05D85DD5080CD7484515311B653C58C571430FE5D1E633A2DC32772E82FCBA6A3AF8C9EFA42AE16A8B8929746574E3297B33E52C826F74708B7BE78835A713BE6B644EC65290CD6E9182E5531989F8874E0031A2BB773AAFD433AD3B6F15B721CAD49AFD3D3DC4287FEB8201BC98F91B24DF3D19CF34523FA73AC7A27DFF60C62F8E5773A3409B4A54592F7AB1CA36A0D2D9B56D0101E40E99787293BDB8A79539824CBAAF446FBFD838C64AF432744B1452F5292AB449B5FCC9B272EA22C594B46F9BD34873FCC8FA10BD89596C3DBA56739B92E901F56CC45565A18C0ED0311F4A647F1A4B68AF0E29DECAFF4E1CFF895C42B77E3975F832A3E12D105887D6F177E19151C0A7E02E3322F4C6EC054DEABD278760C4FABCB8848CBA73755CE274DF77052EB4766D55C623EDB8C57A699E01DB9F8AAAB280C7DCA35F93E0C4BE7501BB248928DEF8B145E521710A4FA8AC1BD2FF0F7A7C118731F67779B8C94C63934C62D4619FB32F394DFA07D51CE9955F33C00B703B3FC7E41F6796AB22270CF117AD55138D2C318DB138C25514E66B93787350F71E9952598373CCAF1F58B30ACF1F5004C41DE18977BD19910391D6DEBDE48C1A95130A10EF5003ADF09C2B8D5B5A48D4B103706D216F59867890D21F3A95BEDE37150B7F681D991B6AB43F43380A1A4D558E283E8DDBA94EECD01B447FB236E584843D8024E3FE343ED2A9FD9519EC9F558EA7AE146CAB3B801D6F783F8E3AD6574C54E03DC0ECE3FB7908BCF3F72F7639A810C65BDA618D8112C481F874A6E0797B72CA63B6EA5D41AED2FF42545FFEF9CFF03C1232795547C1E600000000049454E44AE426082</ImageData>
      </Image>
      <Image ID="Idera.SQLDM.48x48Image" Accessibility="Public" Category="DiagramIcon">
        <ImageData>89504E470D0A1A0A0000000D49484452000000300000003008060000005702F987000000017352474200AECE1CE90000000467414D410000B18F0BFC6105000000097048597300000EC200000EC20115284A800000001A74455874536F667477617265005061696E742E4E45542076332E352E313030F472A10000093F494441546843C5583D6823571056E9D2A58A145117418A085258704D0C575870C5095C9CC0C56154187185112A8C70638C0B215C18E1C20817015D61581701A538D83401B938D015867571A01429B648A1E20A9593F966DFAC66572B4BBE9F4430BCB7BB4F6FBF6FDE37F3E66D2EF7157FB3B76D0A3BFB141E6DD3A455495870B04DC1113FBB3EA5AFF8CA2F9F2A3CA9D2F4A246D3DB1ECD1EC644FF84449FA6D9C6CF306672D51532C19BEAFF43069E9E9E54687637A45938A119035613F020B186E1BFC1ED80C67BDB145E35FF1B3231F04F11488058076CD618FB5F2152AF7C3B12002E3261E0E275F13CF7EDB5DE77A4D625A7F3812488205EBE5CDC6606BAAC897663E006E8D27B3A1E6DAA1FDC07D13D6B20ED6207737EB5D588C15B1020900160E15E7ACC63D73CE7F4D34C62094484C49706F9ECAAB108F429A0D26311F4F61E5FC7AB21729C27038C9BBEF33E9F84789E5F30998EC4B41FB70A04A09619C6D867E96B7D66E309441C78FC574870967A524CD0D9F672508F014E3DC3CB1504FA5916C7874B087016C6219875BC64A857A5F548C469720550C9486E8C025D05D6028AFB0868062FAB8C3830E08504BF072D36BFB5021B9B54962414701A78C2ABFCB2F85AFB688D2928DC9BDCCF252A52C5F50DDF8731E0B8451F040E6B8FAF02A49300E8BC9C066F01ADD3071001CC2D6A210519842C156369C042C258D06992FF62899466D74D52EFAF036AD91800C433B48FD9F87D3F015EAE19E0E4A22DED32436AC59885A0D69D360B987FDF8D56063550460BA0421ED5A8EBA3B699FECAD7DCAAE1C5E17993C637EC499E7314F6C4D007603C9B9C356243C1876B29FC60208680CEDA1F201F499D0E8882F51E9A34FCBB4968ED3379CE00D52C500089AFD1770630E8EB9C981736E2D58F412A58D742F778269E673961B30389C40AC0FB42C019E4042FD917A18F1789D48C49D64026E17BD38B7D310B5840F319413C7B52933912F3DE3238063939AA4A2BC660D336EAB43953CDC482709A5C8569AB9420303C2F52FB8F02F51EB669F05735B6DE1D7BE13A02895D1A4187C9C498844804071A3E23C42DF7014E8C09600E9D137D9F9FE35C1003E68A14E9520D413B7C5DA1D1C790C6E14C6CF4778A80F57EEF224FFBEF72D4BC8FACFDB049DD87880CAC7FCB55291F6000169362B2D83E04918E1968786C803B02FDEB688E782EBEB660A5CFBB2E36ADD14E81863F6C90B7C304DE0734FC388DCD7B37A2C15621921134AC044E2F3713E09B1F98C4ED467C0F649A779B34B8AC90F7E798A5102EDA5D40E30EAF4EEA48E9F331B3FD67897A1F236BBF2B917F5016B0B0E0659E46CF36C500DCFF2902DFFB7D4CFD0F21F5EFD9B8C535C07BDFE5449639390E720CB4AF92E01B770CFE6A839F95C9EB14E6C498549B83E8F46E92B0EEFB90D4F012FF84B307CEC17506B7C780AF0B747A9F178313BAAD3C8D9FCF4103B035803CBDF193EFE16B050F02B2330747256A5C315878DBC9061202A119839F1D47866B8C69DC9C52E3F7606E6F7939CFDAD4E076E17E8B53DFAB02F50F8C733007BF0F9E5602FE56E4792500908DAB61723EBEF67E2992F77D2E32106007E44E8F3648BC0DF03C39C0230E04BC2100A2D5CB7DAADE8CA97A1B4476CDE01964582F8A376A17DEC2F3D3C306EDBF9D3B48E67FBD91F07E1A7CED6C307F07DE7339A4FE3303DE11007121A0DEC7E4908B54A32902005ABEF4A9FC761C19F72BE7C8D1252120243800AB277D2A33313B6EFBB2113BA8711E794EF5AE2DC0C0F395A35EF2FF671EF59E95E69E77E0B10A889578056ABFF1C49D793AB50486AD2A154F3C2A5C8D22BBF009A064E53A1B14BE29D1E4B523C1015939EC52E1DC9F8FE77E99B353ED364783DD48FB09FD33788F4DFEC773E31D9B176C87036AFF5C8CB2914A4709B0846202B5EB2478BB0263CE2685569F27F4233B1B52E1B89D8817EF301FAF0288C02AF5A68C152030EE170FDAE4BF2C2CCA870995F6B8BE39F3E7F66640CD2D4EA10E7C820483470C60F5725E8B5FD82927363225802F6CF97A373131AEBB27262B71EC40E30A1C2D027750CF53F198CBDFE3A1FC1FE4D1C7FF118C36808BBBFC4DC88D13120CBEB15516F099046C10238DDA8D4CFB48ADA53A7F0634136F1CF42558B17323C56AECC452E23850029AD9CA177C1C6C790927609EFEF322F9F0FC4BCEE5163C8F6D3CDB8EC15B126919C9E717BB9159225596401ABCF726020F1BB50A84B8B1A917520281FEE16622B395390D03B49508F45D78CD0EB2B261F0FBBF54249D2AF005FD9B20968D0CBFF40A340F16BDD23DE04A95812801046EEF2C3F07EAA4343A6079216D9A3D0572EABE7024ACB72D78BE5F7BBE087EA98498485C91DA62AE87639B5D729EB851E7E2CD80B724129B2036296426DD14D1729692ACB3CB1B1A97069BF55E523220C1EFA8EE7061C7994837B3F40AA457423290FEB49C466588008A9795274636D1DD38BD025885B494D4F36821317F2F2F410D12D03CB4BFB9C789415782DBED9D5AA28CD05AE831EF2F7CA540BA14EFE8B2F2C40862642225A09EB72B0012DD935411C8E0B112D824153CAA4B1040BEC7AE9ADFE5B4C9CE2AEDEC53FF47CEF328DE9CF6D3319015C80B47CADAEE3CE58104D29D059F2601E0D616EA298E03C80666C10B819FB898FB394F952D2EAD7FE46B2620C6F7ADF79765202921D23FFF923302E4C39E9774C92B922E273257C0A54E64203947B87A0A9908DED71580843C2723905003E82CEF3F968970E6C8FC5257D9DD17F01E970E69F0CB5600A532320F3C8D800509AC06765C781E06F052EFE3DAD5FCB606B2C1BB4A3E99DEB76C7AF56A663197CE42908F8207581C3E50E7543A39EABE62AF1A8F2B09AD81D2C59C641E64A02559C866A095DF48A1FB44356A4A6A2B212DE0E07910500309A9DB1D81616A15147C260973A8C9DAC8E0B09504E498C93BED2A09618C92C0EEAB016B03179E8FA5E3A4B47415D4FBAE4D1390C2ED29BF2C12E91588B3900B64AD833478A565EDAB2D032F071A27210B5CFB90D853B02776E8AC4D4CBD6F09E040A367822C02BA1A592462FD330949A3AE55029F053EDEA52127772ECE0A6421E14E6468015E5BEB7DF457AE808B81D8F359F9FE73D800E452F01904125272127AEA0A3C59F3AB88213B2D2B257405162464F4BFD60AB8005E3BDBAC029DF51C6097C5C082844C105BF9649D89A17BF94CF25FFCE4CB33746FEBA16599688D2C04E04BCB836F4D08D2D2C04D9F8BE36CE402382D237CB5FBD6F89E34BFAC0C3EEABA837DF0820B3A181310725C207E6D4FFF0B8A4F7882E4F133690000000049454E44AE426082</ImageData>
      </Image>
      <Image ID="Idera.SQLDM.80x80Image" Accessibility="Public" Category="DiagramIcon">
        <ImageDatamageData>
      </Image>
      <Image ID="Idera.SQLInst.16x16Image" Accessibility="Public" Category="u16x16Icon">
        <ImageData>89504E470D0A1A0A0000000D49484452000000100000001008060000001FF3FF610000000467414D410000B18F0BFC6105000000097048597300000EC100000EC101B8916BED0000001A74455874536F667477617265005061696E742E4E45542076332E352E313030F472A10000025F49444154384F75D3EF4B13711C07706152E25F923DADA77B1C4550F4837EB89C147C851E54A410895081E498892E5D12463E988EB9A60D536C63A5AB16C27E383767B932A7386F5373DBDDEEB8FDBA775FB731656707F7E0B8EFF7C5E7FDFEDED5D4545D5256AC67B77C4A66698C849D5DE4E7EC73B2EE3791C4865759C889F5D5EB2BCF1076EB99C09BDE44E403CF31B310530BC8702164922E088C097BE1416C0586F865A7BE5748EDCAA1157B9B4AFC3B0F60AF744B0C907103FC4780B502093390B420B569C79CE931914DB2F85E4DF2FC12508801F94D40FC4637CF943627E9E6C418752D48079FC0FCE28A1CF05A9A483E360729F11D05CE05081E489C13D28E19F9350D32DE4624A71B10EC398ED1AE4B7260DE748BE468F6EC1F1DB2D19790D8093A8C1E99A01A69C7493A7D1DE2230A2C76D7E2EDB38B72E0EB888A64A336A47DCD15201FD7430C3683773414816D430978DD71410ECC0EDF24C2CA2BB0EE1B45A0C08EA3101F284F5002E265A0FFD17939601BBA4E387F07B83220ED03C508CD344219A011FCDD0AF4B41E014CE9AF11D6FBF010403BA0114A1D1C8AA0AD85E6DE39F904137D5709EBA9028E28D14F81CEBB67E580497B99A42A80AE780AA512D5E03F1D74B0A055E069CB1939E0B61B3C294F2BD21ED5C13116231CEA8096E8D3D4E2B3753422FB1223E11F3B5F465AB0EDBA43817E48A971E4987E888126B0B613D831D661A9EF188CEDA7F12B14E26580C00ACAC8EFB565C7A40953A35A4C1B3B3139DC06EBE06D8CEB1AF16EE03E662C06AC86573DFB6BFFFB578ABCD8C02539128BC608B3C9B44737A20FE2D13861132CA1EF4E556FFC0772EA2C9D3E171ADE0000000049454E44AE426082</ImageData>
      </Image>
      <Image ID="Idera.SQLInst.48x48Image" Accessibility="Public" Category="DiagramIcon">
        <ImageData></ImageData>
      </Image>
      <Image ID="Idera.SQLInst.80x80Image" Accessibility="Public" Category="DiagramIcon">
        <ImageDatamageData>
      </Image>
    </Images>
  </PresentationTypes>
  <Presentation>
    <ConsoleTasks>
      <ConsoleTask ID="Idera.SQLDM.DMservice.LaunchConsole" Accessibility="Public" Enabled="true" Target="Idera.SQLDM.DMservice" RequireOutput="false" Category="MonitoringObject">
        <Application>%windir%\system32\windowspowershell\v1.0\powershell.exe</Application>
        <Parameters>
          <Parameter>-WindowStyle Hidden -NonInteractive -Command "Start-Process ('"{0}SQLdmDesktopClient.exe"' -f (Get-ItemProperty HKLM:\SOFTWARE\Idera\SQLdm).Path)"</Parameter>
        </Parameters>
        <WorkingDirectory />
      </ConsoleTask>
      <ConsoleTask ID="Idera.SQLDM.SqlInstance.LaunchConsoleTask" Accessibility="Public" Enabled="true" Target="Idera.SQLDM.SqlInstance" RequireOutput="false" Category="MonitoringObject">
        <Application>%windir%\system32\windowspowershell\v1.0\powershell.exe</Application>
        <Parameters>
          <Parameter>-WindowStyle Hidden -NonInteractive -Command "Start-Process ('"{0}SQLdmDesktopClient.exe"' -f (Get-ItemProperty HKLM:\SOFTWARE\Idera\SQLdm).Path)"</Parameter>
        </Parameters>
        <WorkingDirectory />
      </ConsoleTask>
    </ConsoleTasks>
    <Views>
      <View ID="Idera.SQLDM.Dashboard" Accessibility="Public" Enabled="true" Target="Idera.SQLDM.DMservice" TypeID="SC!Microsoft.SystemCenter.DashboardViewType" Visible="true">
        <Category>Status</Category>
        <PanelConfiguration Columns="1" Rows="4">
          <Cell Row="1" Column="1" ViewID="Idera.SQLDM.DMservice.StateView" />
          <Cell Row="2" Column="1" ViewID="Idera.SQLDM.SqlInstance.Health" />
          <Cell Row="3" Column="1" ViewID="Idera.SQLDM.DMservice.EventView" />
          <Cell Row="4" Column="1" ViewID="Idera.SQLDM.DMservice.Alerts" />
        </PanelConfiguration>
      </View>
      <View ID="Idera.SQLDM.DMservice.Alerts" Accessibility="Public" Enabled="true" Target="Idera.SQLDM.SqlInstance" TypeID="SC!Microsoft.SystemCenter.AlertViewType" Visible="true">
        <Category>Alert</Category>
        <Criteria>
          <ResolutionState>
            <State>0</State>
          </ResolutionState>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="22" Grouped="true" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Severity</Name>
            <Id>Severity</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="54" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending">
            <Name>Icon</Name>
            <Id>Icon</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>MonitoringObjectPath</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Source</Name>
            <Id>MonitoringObjectDisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="22" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>MonitoringObjectInMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="250" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Resolution State</Name>
            <Id>ResolutionState</Id>
          </ColumnInfo>
		  
          <ColumnInfo Index="7" SortIndex="-1" Width="150" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Created</Name>
            <Id>TimeRaised</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="1" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="false" SortOrder="Descending">
            <Name>Age</Name>
            <Id>Age</Id>
          </ColumnInfo>
          <ColumnInfo Index="9" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Type</Name>
            <Id>Category</Id>
          </ColumnInfo>
          <ColumnInfo Index="10" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Owner</Name>
            <Id>Owner</Id>
          </ColumnInfo>
          <ColumnInfo Index="11" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Priority</Name>
            <Id>Priority</Id>
          </ColumnInfo>
          <ColumnInfo Index="12" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Latency</Name>
            <Id>Latency</Id>
          </ColumnInfo>
          <ColumnInfo Index="13" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Description</Name>
            <Id>Description</Id>
          </ColumnInfo>
          <ColumnInfo Index="14" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Connector</Name>
            <Id>ConnectorId</Id>
          </ColumnInfo>
          <ColumnInfo Index="15" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Forwarding Status</Name>
            <Id>ConnectorStatus</Id>
          </ColumnInfo>
          <ColumnInfo Index="16" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Class</Name>
            <Id>Class</Id>
          </ColumnInfo>
          <ColumnInfo Index="17" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time in State</Name>
            <Id>TimeInState</Id>
          </ColumnInfo>
          <ColumnInfo Index="18" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 1</Name>
            <Id>CustomField1</Id>
          </ColumnInfo>
          <ColumnInfo Index="19" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 2</Name>
            <Id>CustomField2</Id>
          </ColumnInfo>
          <ColumnInfo Index="20" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 3</Name>
            <Id>CustomField3</Id>
          </ColumnInfo>
          <ColumnInfo Index="21" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 4</Name>
            <Id>CustomField4</Id>
          </ColumnInfo>
          <ColumnInfo Index="22" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 5</Name>
            <Id>CustomField5</Id>
          </ColumnInfo>
          <ColumnInfo Index="23" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 6</Name>
            <Id>CustomField6</Id>
          </ColumnInfo>
          <ColumnInfo Index="24" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 7</Name>
            <Id>CustomField7</Id>
          </ColumnInfo>
          <ColumnInfo Index="25" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 8</Name>
            <Id>CustomField8</Id>
          </ColumnInfo>
          <ColumnInfo Index="26" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 9</Name>
            <Id>CustomField9</Id>
          </ColumnInfo>
          <ColumnInfo Index="27" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Custom Field 10</Name>
            <Id>CustomField10</Id>
          </ColumnInfo>
          <ColumnInfo Index="28" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Resolved By</Name>
            <Id>ResolvedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="29" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Time Resolved</Name>
            <Id>TimeResolved</Id>
          </ColumnInfo>
          <ColumnInfo Index="30" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last State Change</Name>
            <Id>TimeResolutionStateLastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="31" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Last Modified</Name>
            <Id>LastModified</Id>
          </ColumnInfo>
          <ColumnInfo Index="32" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Last Modified By</Name>
            <Id>LastModifiedBy</Id>
          </ColumnInfo>
          <ColumnInfo Index="33" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Management Group</Name>
            <Id>ManagementGroup</Id>
          </ColumnInfo>
          <ColumnInfo Index="34" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Site</Name>
            <Id>SiteName</Id>
          </ColumnInfo>
          <ColumnInfo Index="35" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Repeat Count</Name>
            <Id>RepeatCount</Id>
          </ColumnInfo>
          <ColumnInfo Index="36" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Ticket ID</Name>
            <Id>TicketId</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="Idera.SQLDM.DMservice.EventView" Accessibility="Public" Enabled="true" Target="Idera.SQLDM.DMservice" TypeID="SC!Microsoft.SystemCenter.EventViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria>
          <TimeGenerated>
            <WithinLast Unit="Hour">24</WithinLast>
          </TimeGenerated>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Level</Name>
            <Id>LevelId</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>Date and Time</Name>
            <Id>TimeGenerated</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>MonitoringObjectDisplayName</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Source</Name>
            <Id>PublisherName</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>User</Name>
            <Id>User</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Event Number</Name>
            <Id>Number</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Log Name</Name>
            <Id>Channel</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Logging Computer</Name>
            <Id>LoggingComputer</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Rule Name</Name>
            <Id>MonitoringRuleDisplayName</Id>
          </ColumnInfo>
        </Presentation>
      </View>
      <View ID="Idera.SQLDM.DMservice.StateView" Accessibility="Internal" Enabled="true" Target="Idera.SQLDM.DMservice" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>Custom</Category>
        <Criteria />
      </View>
      <View ID="Idera.SQLDM.SqlInstance.Health" Accessibility="Public" Enabled="true" Target="Idera.SQLDM.SqlInstance" TypeID="SC!Microsoft.SystemCenter.StateViewType" Visible="true">
        <Category>AvailabilityHealth</Category>
        <Criteria>
          <InMaintenanceMode>false</InMaintenanceMode>
        </Criteria>
        <Presentation>
          <ColumnInfo Index="0" SortIndex="0" Width="100" Grouped="false" Sorted="true" IsSortable="true" Visible="true" SortOrder="Descending">
            <Name>State</Name>
            <Id>Idera.SQLDM.SqlInstance</Id>
          </ColumnInfo>
          <ColumnInfo Index="1" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Maintenance Mode</Name>
            <Id>InMaintenanceMode</Id>
          </ColumnInfo>
          <ColumnInfo Index="2" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Name</Name>
            <Id>Name</Id>
          </ColumnInfo>
          <ColumnInfo Index="3" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Path</Name>
            <Id>Path</Id>
          </ColumnInfo>
          <ColumnInfo Index="4" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Instance Name</Name>
            <Id>InstanceName</Id>
          </ColumnInfo>
          <ColumnInfo Index="5" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Real Server Name</Name>
            <Id>RealServerName</Id>
          </ColumnInfo>
          <ColumnInfo Index="6" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Server Version</Name>
            <Id>ServerVersion</Id>
          </ColumnInfo>
          <ColumnInfo Index="7" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="true" SortOrder="Ascending">
            <Name>Server Edition</Name>
            <Id>ServerEdition</Id>
          </ColumnInfo>
          <ColumnInfo Index="8" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="false" Visible="true" SortOrder="Ascending">
            <Name>MaintenanceModeEnabled</Name>
            <Id>MaintenanceModeEnabled</Id>
          </ColumnInfo>
          <ColumnInfo Index="9" SortIndex="-1" Width="100" Grouped="false" Sorted="false" IsSortable="true" Visible="false" SortOrder="Ascending">
            <Name>Display Name</Name>
            <Id>DisplayName</Id>
          </ColumnInfo>
        </Presentation>
      </View>
    </Views>
    <Folders>
      <Folder ID="Idera.SQLDM.DMservice.ViewFolder" Accessibility="Internal" ParentFolder="SC!Microsoft.SystemCenter.Monitoring.ViewFolder.Root" />
    </Folders>
    <FolderItems>
      <FolderItem ElementID="Idera.SQLDM.Dashboard" Folder="Idera.SQLDM.DMservice.ViewFolder" />
      <FolderItem ElementID="Idera.SQLDM.DMservice.Alerts" Folder="Idera.SQLDM.DMservice.ViewFolder" />
      <FolderItem ElementID="Idera.SQLDM.DMservice.EventView" Folder="Idera.SQLDM.DMservice.ViewFolder" />
      <FolderItem ElementID="Idera.SQLDM.DMservice.StateView" Folder="Idera.SQLDM.DMservice.ViewFolder" />
      <FolderItem ElementID="Idera.SQLDM.SqlInstance.Health" Folder="Idera.SQLDM.DMservice.ViewFolder" />
    </FolderItems>
    <ImageReferences>
      <ImageReference ElementID="Idera.SQLDM.DMservice" ImageID="Idera.SQLDM.16x16Image" />
      <ImageReference ElementID="Idera.SQLDM.DMservice" ImageID="Idera.SQLDM.80x80Image" />
      <ImageReference ElementID="Idera.SQLDM.SqlInstance" ImageID="Idera.SQLInst.16x16Image" />
      <ImageReference ElementID="Idera.SQLDM.SqlInstance" ImageID="Idera.SQLInst.80x80Image" />
    </ImageReferences>
    <StringResources>
      <StringResource ID="Idera.SQLDM.DMservice.CollSvcMonitor_AlertMessageResourceID" />
      <StringResource ID="Idera.SQLDM.DMservice.MgmtSvcMonitor_AlertMessageResourceID" />
      <StringResource ID="Idera.SQLDM.DMservice.PredSvcMonitor_AlertMessageResourceID" />
      <StringResource ID="Idera.SQLDM.Monitor.InstanceAlertCounts_AlertMessageResourceID" />
      <StringResource ID="Idera.SQLDM.MonitorCpuState_AlertMessageResourceID" />
      <StringResource ID="Idera.SQLDM.DataSource.SqlInst.AlertData.MapToAlert_AlertMessageResourceID" />
    </StringResources>
  </Presentation>
  <LanguagePacks>
    <LanguagePack ID="ENU" IsDefault="true">
      <DisplayStrings>
        <DisplayString ElementID="Idera.SQLDM">
          <Name>Idera SQL Diagnostic Manager</Name>
          <Description>The function of Idera SQL Diagnostic Manager is to provide database administrators with deep insights into the availability and performance of SQL Servers.  The Management Pack ensures that detailed information about SQL Server performance tracked by Diagnostic Manager is integrated into Operations Manager and its application health models.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.Dashboard">
          <Name>Dashboard</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DataSource.SqlInst.AlertCounts">
          <Name>Idera SQL DM DataSource SqlInst AlertCounts</Name>
          <Description>This module uses a schedule, PowerShell script and filter to spit out a property bag with the latest alert counts and details for a specified SQL Instance being monitored by SQL DM</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DataSource.SqlInst.AlertData">
          <Name>SQLDM DataSource to Filter AlertData by SqlInst</Name>
          <Description>This module takes the SQLDM Alert Poller property bags as input, then filters them by Sql Instance Name allowing the Alerts to be converted into events linked to the corresponding SQL instance object.  This approach also allows cookdown (the script will execute once and the property bags produced then shared across all instances)</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DataSource.SqlInst.AlertData.MapToEvent">
          <Name>Idera SQLDM DataSource Maps SqlInstance Alerts To Events</Name>
          <Description>This module maps incoming SQL DM Alerts to Operations Manager event objects.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMalert.MapToEvent.DataSource">
          <Name>Idera SQLDM DMalert MapToEvent DataSource</Name>
          <Description>This module uses the module which polls the DM database for alerts to get the new alerts since the last poll, and maps those into generic OM event objects.  This basically emulates a received Windows Event for each DM Alert found.

This module implements the mapping of DM Alert fields to Event fields</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice">
          <Name>SQL DM Service</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice" SubElementID="DmPath">
          <Name>DmPath</Name>
          <Description>Install path for SQL DM on this machine</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice" SubElementID="Version">
          <Name>DmVersion</Name>
          <Description>The installed version of SQL Diagnostic Manager</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.Alerts">
          <Name>SQL Instance Alerts</Name>
          <Description>This view shows all alerts raised when a monitored SQL Instance has an active alert present in SQL Diagnostic Manager.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.CollSvcMonitor">
          <Name>SQL DM Collection Service Monitor</Name>
          <Description>Checks the health (running state) of the SQLdmCollectionService</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.CollSvcMonitor" SubElementID="NotRunning">
          <Name>NotRunning</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.CollSvcMonitor" SubElementID="Running">
          <Name>Running</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.CollSvcMonitor_AlertMessageResourceID">
          <Name>SQL DM Collection Service Not Running</Name>
          <Description>Please see the alert context for details.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.Discovery">
          <Name>SQL DM Discovery</Name>
          <Description>This object discovers SQL DM installations by examining the registry of all managed Windows computers.  When an instance is discovered, configuration data from the SQL DM registry area is gathered as properties of the discovered objects.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.EventView">
          <Name>SQL Instance Events</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.LaunchConsole">
          <Name>Launch SQL DM Console</Name>
          <Description>This task will launch the local copy of the SQL DM console, which will connect to the most recently used SQL DM Server.  Once launched, the console may be connected to an alternate SQL DM Server using the File menu option.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.MgmtSvcMonitor">
          <Name>SQL DM Management Service Monitor</Name>
          <Description>Checks the health (running state) of the SQLdmManagementService</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.MgmtSvcMonitor" SubElementID="NotRunning">
          <Name>NotRunning</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.MgmtSvcMonitor" SubElementID="Running">
          <Name>Running</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.MgmtSvcMonitor_AlertMessageResourceID">
          <Name>SQL DM Management Service Not Running</Name>
          <Description>The SQL Diagnostic Manager service, SQLdmManagementService$Default, is not running.  This prevents SQL DM from reporting and updating current status.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.PredSvcMonitor">
          <Name>SQL DM Predictive Service Monitor</Name>
          <Description>Checks the health (running state) of the SQLdmPredictiveAnalyticsService</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.PredSvcMonitor" SubElementID="NotRunning">
          <Name>NotRunning</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.PredSvcMonitor" SubElementID="Running">
          <Name>Running</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.PredSvcMonitor_AlertMessageResourceID">
          <Name>SQL DM Predictive Service Not Running</Name>
          <Description>Please see the alert context for details.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.StateView">
          <Name>SQL DM Server Health</Name>
          <Description>This node provides a view showing the health of all the SQL Diagnostic Manager server installations.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.DMservice.ViewFolder">
          <Name>Idera SQL Diagnostic Manager</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.Monitor.InstanceAlertCounts">
          <Name>Idera SQL DM Monitor InstanceAlertCounts</Name>
          <Description>Checks the current health of the SQL DM managed instance by examining the current active alert counts in the SQL DM DB</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.Monitor.InstanceAlertCounts" SubElementID="UIGeneratedOpStateId1e5924d096484f5e963cc9c234fadc68">
          <Name>WarningState</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.Monitor.InstanceAlertCounts" SubElementID="UIGeneratedOpStateIde02721981c7244999d2daeae90698cfe">
          <Name>CriticalState</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.Monitor.InstanceAlertCounts" SubElementID="UIGeneratedOpStateIde880de805d234e169b1887758bc6feac">
          <Name>NormalState</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.Monitor.InstanceAlertCounts_AlertMessageResourceID">
          <Name>Active Alerts on this SQL Instance</Name>
          <Description>SQL Diagnostic Monitor is reporting active alerts for the status of this SQL Instance.  Descriptions of the current alerts are listed in the Alert Details..</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.MonitorCpuState_AlertMessageResourceID">
          <Name>SQL DM CPU State</Name>
          <Description>Event Description: {0}</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.MonitorType.InstanceAlertCounts">
          <Name>Idera SQL DM MonitorType Instance Alert Counts</Name>
          <Description>This MonitorType examines the alerts counts for a specified SQL Instance and generates the current health state (Critical, Warn or Normal)</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqldmHostsSqlInstance">
          <Name>SQL DM Hosts SQL Instance</Name>
          <Description>This shows the relationship between a SQL DM Installation (monitoring service) and a monitored SQL Server instance</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqlInst.DMAlert.Collection.Rule">
          <Name>Idera SQLDM Rule to Collect SqlInstance DM Alerts as Events</Name>
          <Description>This rule gathers SQL DM recorded Alert status changes and records them as Events within Operations Manager.  Each event is associated with the SQL Instance to which it relates.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqlInstance">
          <Name>SQL Instance</Name>
          <Description>This object represents a SQL Instance being monitored by a Idera SQL Diagnostic Manager service installation.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqlInstance" SubElementID="InstanceName">
          <Name>Instance Name</Name>
          <Description>This is the name of the monitored SQL Server instance.  If it is the default instance then it consists only of the Windows server name.  If it is a named instance then it is in the format "Server\Instance"</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqlInstance" SubElementID="MaintenanceModeEnabled">
          <Name>MaintenanceModeEnabled</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqlInstance" SubElementID="RealServerName">
          <Name>Real Server Name</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqlInstance" SubElementID="ServerEdition">
          <Name>Server Edition</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqlInstance" SubElementID="ServerVersion">
          <Name>Server Version</Name>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqlInstance.Discovery">
          <Name>SQL DM Instance Discovery (PowerShell)</Name>
          <Description>This object discovers SQL Server Instances which are currently being monitored by a SQL DM installations.  The discovery runs on machines with SQL DM installations and examines the SQL DM database to identify managed instances.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqlInstance.Health">
          <Name>SQL Instance Health</Name>
          <Description>This node offers a view of the SQL Instances currently being monitored by Diagnostic Manager servers.  The health of each monitored instance is displayed, based on the current number of alerts raised by Diagnostic Manager for that instance.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.SqlInstance.LaunchConsoleTask">
          <Name>Launch SQL DM Console</Name>
          <Description>This task will launch the local copy of the SQL DM console, which will connect to the most recently used SQL DM Server.  Once launched, the console may be connected to an alternate SQL DM Server using the File menu option.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.Timed.PoSH.DMalert.Poller">
          <Name>Idera SQL DM Timed PoSH DMalert Poller</Name>
          <Description>Executes a PowerShell script on a schedule to read the Alerts since the last invocation, and pass each alert through as a property bag.</Description>
        </DisplayString>
        <DisplayString ElementID="Idera.SQLDM.Timed.PoSh.PropertyBagProvider">
          <Name>Idera SQL DM Timed Instance Status Provider</Name>
          <Description>This module runs on a schedule, using a PowerShell script to gather and forward the Alerts counts and details for all managed instances as OpsMgr PropertyBags.

The module can be used as part of larger modules to build a health workflow or to collect status count data</Description>
        </DisplayString>
		<DisplayString ElementID="Idera.SQLDM.DataSource.SqlInst.AlertData.MapToAlert_AlertMessageResourceID">
          <Name>{1}</Name>
          <Description>{0}</Description>
        </DisplayString>
      </DisplayStrings>
      <KnowledgeArticles>
        <KnowledgeArticle ElementID="Idera.SQLDM" Visible="true">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>Idera SQL Diagnostic Manager, as a standalone solution, provides database administrators with deep insights into the availability and performance of SQL Servers.  The Idera SQL Diagnostic Manager Management Pack ensures vital SQL Server performance data and alerts monitored and tracked by Diagnostic Manager are integrated into Operations Manager and its application health models..</maml:para>
            </maml:section>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Configuration</maml:title>
              <maml:para>As a best practice, you should import the Windows Server Management Pack for the operating system(s) you are using to host SQL Diagnostic Manager. The SQL Diagnostic Manager Management Pack uses several of the classes created by the Windows Server Management Packs.</maml:para>
              <maml:para>The Management Pack requires that the Operations Manager agent have read-access to the SQL Diagnostic Manager SQL Database.  This access should be granted prior to installing the Management Pack and enabling discovery of SQL Diagnostic Manager installed instances</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="Idera.SQLDM.DMservice.CollSvcMonitor" Visible="true">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>This monitor checks the health (running state) of the SQLdmCollectionService</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="Idera.SQLDM.DMservice.Discovery" Visible="true">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>This object discovers SQL DM installations by examining the registry of all managed Windows computers.  When an instance is discovered, configuration data from the SQL DM registry area is gathered as properties of the discovered objects.</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="Idera.SQLDM.DMservice.MgmtSvcMonitor" Visible="true">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>This monitor checks the health (running state) of the SQLdmManagementService</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="Idera.SQLDM.DMservice.PredSvcMonitor" Visible="true">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>Checks the health (running state) of the SQLdmPredictiveAnalyticsService</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="Idera.SQLDM.Monitor.InstanceAlertCounts" Visible="true">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>This monitor checks the current health of the SQL DM managed instance by examining the current active alert counts in the SQL DM DB</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="Idera.SQLDM.SqlInst.DMAlert.Collection.Rule" Visible="true">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>This rule gathers SQL DM recorded Alert status changes and records them as Events within Operations Manager.  Each event is associated with the SQL Instance to which it relates.</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
        <KnowledgeArticle ElementID="Idera.SQLDM.SqlInstance.Discovery" Visible="true">
          <MamlContent>
            <maml:section xmlns:maml="http://schemas.microsoft.com/maml/2004/10">
              <maml:title>Summary</maml:title>
              <maml:para>This object discovers SQL Server Instances which are currently being monitored by a SQL DM installations.  The discovery runs on machines with SQL DM installations and examines the SQL DM database to identify managed instances.</maml:para>
            </maml:section>
          </MamlContent>
        </KnowledgeArticle>
      </KnowledgeArticles>
    </LanguagePack>
  </LanguagePacks>
</ManagementPack>